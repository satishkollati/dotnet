{"version":3,"sources":["./src/app/utils/angulardateinterceptor.ts","./src/app/invoices/invoiceList.component.ts","./src/app/invoices/invoiceList.component.html","./src/buildString.ts","./src/app/clients/clientNew.component.ts","./src/app/clients/clientNew.component.html","./src/app/invoices/invoiceListExport.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/suppliers/supplierEdit.component.ts","./src/app/suppliers/supplierNew.component.html","./src/app/supplierInvoices/supplierInvoiceBase.ts","./src/app/supplierContacts/supplierContactsForm.component.ts","./src/app/supplierContacts/supplierContactsForm.component.html","./src/app/projects/projectEdit.component.ts","./src/app/projects/projectForm.component.html","./src/app/supplierInvoices/supplierInvoiceForm.component.ts","./src/app/supplierInvoices/supplierInvoiceForm.component.html","./src/app/invoices/invoiceNew.component.ts","./src/app/invoices/invoiceForm.component.html","./src/app/clients/clientinvoice.component.ts","./src/app/clients/clientinvoice.component.html","./src/app/supplierOrders/supplierEditOrder.component.ts","./src/app/supplierOrders/supplierOrderForm.component.html","./src/app/clients/clientList.component.ts","./src/app/clients/clientList.component.html","./src/app/supplierContacts/supplierContactEdit.component.ts","./src/app/clients/clientpoboth.component.ts","./src/app/clients/clientpoboth.component.html","./src/app/utils/DateStrPipe.ts","./src/environments/environment.ts","./src/app/orderbook/orderInternalEdit.component.ts","./src/app/orderbook/orderForm.component.html","./src/app/utils/financialYear.ts","./src/app/suppliers/supplierDetails.component.ts","./src/app/suppliers/supplierDetails.component.html","./src/app/supplierOrders/supplierOrderBase.ts","./src/app/navmenu/navmenu.component.ts","./src/app/navmenu/navmenu.component.html","./src/app/orderbook/order.component.ts","./src/app/orderbook/order.component.html","./src/app/invoices/sebrcImport.component.ts","./src/app/invoices/softexImport.component.html","./src/app/orderbook/orderNew.component.ts","./src/app/suppliers/supplierpo.component.ts","./src/app/suppliers/supplierpo.component.html","./src/app/data/invoice.ts","./src/app/invoices/invoiceBase.ts","./src/app/dashboard/monthchart.component.ts","./src/app/dashboard/monthchart.component.html","./src/app/data/supplierInvoice.ts","./src/app/clients/clientDetail.component.ts","./src/app/clients/clientDetail.component.html","./src/app/suppliers/supplierList.component.ts","./src/app/suppliers/supplierList.component.html","./src/app/clients/clientproject.component.ts","./src/app/clients/clientproject.component.html","./src/app/suppliers/supplierNew.component.ts","./src/app/projects/projectBase.ts","./src/app/utils/dateselect.component.ts","./src/app/utils/dateselect.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/invoices/SBAssignmentMgr.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/data/user.service.ts","./src/app/data/SPOViewInterface.ts","./src/app/orderbook/orderBase.ts","./src/app/invoices/invoiceInternalNew.component.ts","./src/app/data/project.ts","./src/app/app.module.ts","./src/app/supplierOrders/supplierOrderForm.component.ts","./src/app/projects/projectEmail.component.ts","./src/app/projects/projectemail.component.html","./src/app/projects/project.component.ts","./src/app/projects/project.component.html","./src/app/data/ProjectViewModel.ts","./src/app/projects/projectpin.component.ts","./src/app/projects/projectpin.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/orderbook/orderbook.component.ts","./src/app/orderbook/orderbook.component.html","./src/app/utils/sort.pipe.ts","./src/app/data/data.service.ts","./src/app/receivables/receivableItem.component.ts","./src/app/receivables/receivableItem.component.html","./src/app/invoices/invoice.component.ts","./src/app/invoices/invoice.component.html","./src/app/contacts/contactBase.ts","./src/app/receivables/receivables.component.ts","./src/app/receivables/receivables.component.html","./src/app/suppliers/suppliers.component.ts","./src/app/suppliers/suppliers.component.html","./src/app/contacts/contactNew.component.ts","./src/app/contacts/contactForm.component.html","./src/app/clients/client.component.ts","./src/app/clients/client.component.html","./src/app/orderbook/orderEdit.component.ts","./src/app/contacts/contactEdit.component.ts","./src/app/attachments/attachments.component.ts","./src/app/attachments/attachments.component.html","./src/app/utils/utils.ts","./src/app/utils/statusmg.component.ts","./src/app/data/authguard.service.ts","./src/app/data/InvoiceViewObj.ts","./src/app/projects/projectList.component.ts","./src/app/projects/projectList.component.html","./src/app/invoices/invoiceEdit.component.ts","./src/app/utils/TwoDigitDateStrPipe.ts","./src/app/invoices/invoice.service.ts","./src/app/invoices/invoiceInternalEdit.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/projects/projectNew.component.ts","./src/app/orderbook/orderInternalNew.component.ts","./src/app/clients/clientpo.component.ts","./src/app/clients/clientpo.component.html","./src/app/invoices/softexImport.component.ts","./src/app/supplierContacts/supplierContactBase.ts","./src/app/data/errorInterceptor.service.ts","./src/app/clients/clientEdit.component.ts","./src/main.ts","./src/app/supplierInvoices/supplierInvoiceEdit.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { tap, mergeAll, find, defaultIfEmpty, filter, first } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AngularDateHttpInterceptor implements HttpInterceptor {\r\n    private static castDateAsMoment(event: HttpEvent<any>): void {\r\n        if (event instanceof HttpResponse) {\r\n            AngularDateHttpInterceptor.convertToDate(event.body);\r\n        }\r\n    }\r\n\r\n\r\n    private static convertToDate(body: any) {\r\n        if (body === null || body === undefined) {\r\n            return body;\r\n        }\r\n\r\n        if (typeof body !== 'object') {\r\n            return body;\r\n        }\r\n\r\n        for (const key of Object.keys(body)) {\r\n            const value = body[key];\r\n            if (AngularDateHttpInterceptor.isIso8601(value)) {\r\n                body[key] = new Date(value);\r\n            } else if (typeof value === 'object') {\r\n                AngularDateHttpInterceptor.convertToDate(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static isIso8601(value: string | null | undefined) {\r\n        const iso8601 = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/;\r\n        if (value === null || value === undefined) {\r\n            return false;\r\n        }\r\n        return iso8601.test(value);\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(tap(AngularDateHttpInterceptor.castDateAsMoment));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Utils } from '../utils/utils';\r\nimport { InvoiceService } from './invoice.service';\r\nimport { MonthYear } from '../utils/financialYear';\r\nimport { UserService } from '../data/user.service';\r\nimport { getCSV, getSoftexFormatCSV } from './invoiceListExport';\r\n\r\n\r\ninterface IDictionary {\r\n  [index: string]: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-invoicelist',\r\n  templateUrl: './invoiceList.component.html',\r\n  styleUrls: ['./invoiceList.component.scss']\r\n})\r\nexport class InvoiceListComponent implements OnInit {\r\n  //  invoiceMonth = new Date();\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  company = 'Group';\r\n  progressMessage = 'Fetching Invoices ...';\r\n  sortState = {} as IDictionary;\r\n  selectedMonth = 1;\r\n  selectedYear = 2018;\r\n  invoiceList: InvoiceViewObj[] = [];\r\n  fullList: InvoiceViewObj[] = [];\r\n  total = '0';\r\n  filterTerm = '';\r\n\r\n  showSoftex = false;\r\n\r\n  constructor(\r\n    private data: DataService,\r\n    private invoiceService: InvoiceService,\r\n    private user: UserService\r\n  ) { }\r\n  ngOnInit() {\r\n    this.user.currentUser.subscribe(userdata => {\r\n      this.showSoftex = userdata.isaccounting > 0 || userdata.ismgmt > 0 || userdata.isadmin > 0;\r\n    });\r\n  }\r\n\r\n  async OnCompanyChange() {\r\n    this.filterTerm = '';\r\n    await this.updateInvoiceList();\r\n  }\r\n\r\n  OnDurationChanged(monthRange: MonthYear[]) {\r\n    monthRange.forEach(m => console.log(' m: ' + m.month + ' y:' + m.year));\r\n    this.fetchFullInvoiceList(monthRange);\r\n  }\r\n\r\n  fetchFullInvoiceList(monthRange: MonthYear[]) {\r\n    this.fullList = [];\r\n    this.invoiceList = [];\r\n    this.progressMessage = 'Fetching Invoices ...';\r\n    this.errorMessage = '';\r\n    this.invoiceService.fetchAllInvoices(monthRange).subscribe(\r\n      fl => {\r\n        this.fullList.push(...fl);\r\n      },\r\n      err => {\r\n        this.errorMessage = 'Connection Errors';\r\n        this.progressMessage = '';\r\n      },\r\n      () => {\r\n        this.progressMessage = '';\r\n        this.updateInvoiceList();\r\n      }\r\n    );\r\n  }\r\n\r\n  updateInvoiceList() {\r\n    this.invoiceList = this.fullList\r\n      .filter(this.filterForVendor())\r\n      .filter(this.filterForSearchTerm())\r\n      .sort(InvoiceViewObj.invoiceDateSortCompare());\r\n    this.updateTotal();\r\n    this.sortState['invoiceDate'] = true;\r\n    if (this.invoiceList.length === 0) {\r\n      this.progressMessage = '-- No invoices --';\r\n    }\r\n  }\r\n\r\n\r\n  OnHeaderClicked(headerName: string) {\r\n    this.sortState[headerName] = !this.sortState[headerName];\r\n    let fil = (a: InvoiceViewObj, b: InvoiceViewObj) => 1;\r\n    switch (headerName) {\r\n      case 'clientName':\r\n        fil = (a, b) => (a.client.name > b.client.name ? +1 : -1);\r\n        break;\r\n      case 'invoiceNumber':\r\n        fil = (a, b) => (a.invoice.invoiceNumber > b.invoice.invoiceNumber ? +1 : -1);\r\n        break;\r\n      case 'invoiceDate':\r\n        fil = InvoiceViewObj.invoiceDateSortCompare();\r\n        break;\r\n      case 'projectCode':\r\n        fil = (a, b) => (a.projectCode > b.projectCode ? +1 : -1);\r\n        break;\r\n      case 'description':\r\n        fil = (a, b) => (a.invoice.description > b.invoice.description ? +1 : -1);\r\n        break;\r\n      case 'invoiceAmount':\r\n        fil = (a, b) => (a.invoice.amount > b.invoice.amount ? +1 : -1);\r\n        break;\r\n      case 'amountInUSD':\r\n        fil = (a, b) => (a.amountInUSD > b.amountInUSD ? +1 : -1);\r\n        break;\r\n      case 'status':\r\n        fil = (a, b) => (a.status > b.status ? +1 : -1);\r\n        break;\r\n    }\r\n    const gil = this.sortState[headerName] ? fil : (a: InvoiceViewObj, b: InvoiceViewObj) => -1 * fil(a, b);\r\n    this.invoiceList = this.invoiceList.sort(gil);\r\n  }\r\n\r\n  exportLink() {\r\n    const filename = 'Invoices_' + '_Tismo_' + this.company + '_' + this.filterTerm;\r\n    Utils.exportCSVFile(getCSV(this.invoiceList), filename);\r\n  }\r\n\r\n  exportSoftexLink() {\r\n    const filename = 'Softex_' + '_Tismo_' + this.company + '_' + this.filterTerm;\r\n    Utils.exportCSVFile(getSoftexFormatCSV(this.invoiceList), filename);\r\n  }\r\n\r\n\r\n  filterForVendor(): (a: InvoiceViewObj) => boolean {\r\n    let filter = (a: InvoiceViewObj) => true;\r\n    switch (this.company) {\r\n      case 'USA':\r\n        filter = (a: InvoiceViewObj) => this.data.isTismoUS(a.vendorId); //   a.vendorId === usaId;\r\n        break;\r\n      case 'Germany':\r\n        filter = (a: InvoiceViewObj) => this.data.isTismoGermany(a.vendorId); //   a.vendorId === germany id;\r\n        break;\r\n      case 'Group':\r\n        filter = (a: InvoiceViewObj) => !this.data.isInternalCustomer(a.client);\r\n        break;\r\n      // !a.client.customerCode.includes('TCI'); break; // TCI indicates internal customer\r\n      default:\r\n      case 'India':\r\n        filter = (a: InvoiceViewObj) => this.data.isTismoIndia(a.vendorId); // a.vendorId === indiaId;\r\n        break;\r\n    }\r\n    return filter;\r\n    // this.invoiceList = this.fullList.filter(filter);\r\n  }\r\n\r\n  filterForSearchTerm(): (inv: InvoiceViewObj) => boolean {\r\n    if (this.filterTerm === '') {\r\n      return (inv: InvoiceViewObj) => true;\r\n    }\r\n    const srchTarget = (inv: InvoiceViewObj) =>\r\n      [\r\n        inv.client.name,\r\n        inv.invoice.invoiceNumber,\r\n        Utils.getDateStr(inv.invoice.invoiceDate),\r\n        inv.projectCode,\r\n        inv.invoice.description,\r\n        inv.invoice.amount.toString(),\r\n        inv.amountInUSD.toString(),\r\n        inv.status\r\n      ].join(' ');\r\n\r\n    const regEx = new RegExp(this.filterTerm, 'i');\r\n    return (inv: InvoiceViewObj) => regEx.test(srchTarget(inv));\r\n  }\r\n\r\n  updateTotal() {\r\n    this.total = Utils.toStr(this.invoiceList.reduce((acc, inv) => acc + inv.amountInUSD, 0));\r\n    this.progressMessage = `${this.invoiceList.length} invoices`;\r\n  }\r\n\r\n  filterTermChanged(newSrchTerm: string) {\r\n    this.filterTerm = newSrchTerm.replace(',', '');\r\n    if (!this.filterTerm || this.filterTerm.length >= 2) {\r\n      this.updateInvoiceList();\r\n    }\r\n  }\r\n}\r\n","<div class='gridContainer'>\r\n\r\n\r\n    <div class='pageTitle title'>Invoices </div>\r\n\r\n    <app-dateselect class='monthPicker' (DurationChanged)=\"OnDurationChanged($event)\"> </app-dateselect>\r\n\r\n    <div class='filter'>\r\n        <span class='text-secondary small '>Filter\r\n            <input class='form-control' type=\"text\" [ngModel]=\"filterTerm\" (ngModelChange)=\"filterTermChanged($event)\" />\r\n        </span>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-control companySelector small text-secondary\">\r\n        <input type=\"radio\" name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\" value=\"India\">India\r\n        <input type=\"radio\" name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\" value=\"USA\">USA\r\n        <input type=\"radio\" name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\" value=\"Germany\">Germany\r\n        <input type=\"radio\" name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\" value=\"Group\">Group\r\n    </div>\r\n    <div class=\"companyName small text-secondary\">\r\n        <div *ngIf='company==\"India\"'>Invoices from Tismo India</div>\r\n        <div *ngIf='company==\"USA\"'> Invoices from Tismo USA </div>\r\n        <div *ngIf='company==\"Germany\"'> Invoices from Tismo Germany </div>\r\n        <div *ngIf='company==\"Group\"'> Invoices from Tismo companies to external clients </div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"invoiceList.length > 0\" class=\"total fadeIn card\">$ {{total}} </div>\r\n\r\n\r\n\r\n    <div *ngIf='invoiceList.length > 0' class='ilist fadein'>\r\n        <app-invoice (headerClicked)='OnHeaderClicked($event)' ></app-invoice>\r\n        <div *ngFor='let inv of invoiceList'>\r\n            <app-invoice  [inview]=inv ></app-invoice>\r\n        </div>\r\n    </div>\r\n\r\n    <div class='lead message'>\r\n        {{progressMessage}}\r\n    </div>\r\n   \r\n    <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n\r\n    <button *ngIf=\"invoiceList.length !== 0 && !errorMessage\" class='btn tbisbutton smallFont  export  ' (click)='exportLink()'>\r\n        Export\r\n    </button>\r\n\r\n    <button *ngIf=\"showSoftex && invoiceList.length !== 0 && !errorMessage\" class='tbisbutton smallFont  softex ' (click)='exportSoftexLink()'>\r\n            Softex\r\n    </button>\r\n\r\n</div>","\r\n    //  Auto created by BuildScript.fs in deploy\r\n    //  Contains the build date and time - displayed at login time\r\n        declare var buildString:string;\r\n        window.buildString = '06 Oct 2022, 17:51 pm' ; \r\n    ","import { Component, Input, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { DataService, Client } from '../data/data.service';\r\n\r\n@Component({\r\n    selector: 'app-clientnew',\r\n    templateUrl: './clientNew.component.html',\r\n    styleUrls: ['./clientNew.component.scss']\r\n})\r\nexport class ClientNewComponent {\r\n    client: Client = new Client();\r\n    clientList: Client[] = [];\r\n\r\n    formTitle = 'New Client';\r\n    btnTitle = 'Add this Client';\r\n    successMessage = '';\r\n    errorMessage = '';\r\n\r\n    constructor(private data: DataService) {\r\n        data.getListOfClients()\r\n            .then(res => this.clientList = res,\r\n                err => {\r\n                    console.log('Error ' + err);\r\n                    this.setError(err);\r\n                });\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.data.getNextCustomerCode().subscribe(cc => this.client.customerCode = cc);\r\n        this.client = new Client();\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n    }\r\n\r\n    setError(err: any) {\r\n        this.errorMessage = 'Error: Could not update: ' + err;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Submitting new Client' + this.client.name);\r\n        const nameDuplicate = this.clientList.findIndex((c, i) => (c.name === this.client.name));\r\n        const codeDuplice = this.clientList.findIndex((c, i) => (c.customerCode === this.client.customerCode));\r\n        if (nameDuplicate !== -1) {\r\n            this.errorMessage = 'Client with same name already present';\r\n        } else if (codeDuplice !== -1) {\r\n            this.errorMessage = 'Duplicate customer code.';\r\n        } else {\r\n            this.data.addClient(this.client)\r\n                .subscribe(c => {\r\n                    console.log(c); this.clientList.concat(this.client);\r\n                    this.successMessage = 'Added new client ' + this.client.name;\r\n                    this.resetForm();\r\n                },\r\n                    err => { console.log(err); this.setError(err); });\r\n        }\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n           this.init();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\r\n\r\n<div class='focus-in-expand'>\r\n\r\n    <form class='gridcontainer' autocomplete=\"off\" (ngSubmit)=\"onSubmit()\" #clientNewForm=\"ngForm\">\r\n\r\n        <div class=\"t4group clientName\">\r\n            <label class='t1elem' for=\"clientName\">Client Name</label>\r\n            <input class=\"form-control t2elem\" required type=\"text\" id=\"clientName\" name=\"clienName\" [(ngModel)]=\"client.name\">\r\n\r\n        </div>\r\n\r\n        <div class='t4group clientCountry'>\r\n            <label class='t1elem' for=\"clientCountry\"> Country</label>\r\n            <input class=\"form-control t2elem\" required type=\"text\" name=\"clientCountry\" id=\"clientCountry\" [(ngModel)]=\"client.country\">\r\n        </div>\r\n\r\n        <div class=\"t4group clientCode\">\r\n            <label class='t1elem' for=\"clientCode\"> Client Code</label>\r\n            <input class=\"form-control t2elem\" required type=\"text\" name=\"clientCode\" id=\"clientCode\" [(ngModel)]=\"client.customerCode\">\r\n        </div>\r\n\r\n        <div class=\"t4group submit\">\r\n            <button type=\"submit\" class=\"btn btn-success t2elem\" [disabled]=\"!clientNewForm.form.valid\">{{btnTitle}}</button>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\r\n        <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n\r\n    </form>\r\n</div>","import { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Project } from '../data/project';\r\nimport { Utils } from '../utils/utils';\r\nimport { Invoice } from '../data/invoice';\r\n\r\n// for csv export - provide category and country wise sum\r\nfunction summarizeCategory(invoiceList: InvoiceViewObj[]) {\r\n    const rowNumber = invoiceList.length + 1;\r\n    const start = '\\r\\n\\r\\n\\r\\n';\r\n    const tot = 'Total (INR),' + `\"=SUM(M2:M${rowNumber})\"`;\r\n    const header = '\\r\\n\\r\\nSTP Category, Sum (INR)\\r\\n';\r\n    let blanks = 6;\r\n    const compute = Project.STPServiceTypeOptions().map(\r\n        (st, i) => Project.getSTPServiceStr(st.val) + ',' + `\"=SUMIF(E2:E${rowNumber},A${rowNumber + i + blanks},M2:M${rowNumber})\"`\r\n    );\r\n    const categorysum = start + tot + header + compute.join('\\r\\n') + '\\r\\n\\r\\n';\r\n\r\n    const countries = invoiceList.map(st => st.clientCountryCode);\r\n    const countryCodes = [...new Set(countries)]; // unique -- removed duplicates\r\n    blanks += Project.STPServiceTypeOptions().length + 3;\r\n    const countrySummary = countryCodes.map(\r\n        (c, i) => c + ',' + `\"=SUMIF(B2:B${rowNumber},A${rowNumber + i + blanks},M2:M${rowNumber})\"`\r\n    );\r\n\r\n    return categorysum + '\\r\\nCountry, Sum (INR)\\r\\n' + countrySummary.join('\\r\\n');\r\n\r\n}\r\n\r\nexport function\r\n    getCSV(invoiceList: InvoiceViewObj[]): string {\r\n    const tmpList = invoiceList.map(inv => {\r\n        return {\r\n            Client: inv.client.name,\r\n            Country: inv.clientCountryCode,\r\n            ProjectCode: inv.projectCode,\r\n            PONumber: inv.poNumber,\r\n            PODate: Utils.getDateStr(inv.poDate),\r\n            STPServiceType: Project.getSTPServiceStr(inv.stpService),\r\n            InvoiceNumber: inv.invoice.invoiceNumber,\r\n            SoftexNumber: inv.invoice.softexNumber,\r\n            EBRCNumber: inv.invoice.ebrcNumber,\r\n            InvoiceType: inv.invoice.isExpenseInvoice ? 'Expense' : 'Revenue',\r\n            InvoiceDate: Utils.getDateStr(inv.invoice.invoiceDate),\r\n            Description: inv.invoice.description,\r\n            Currency: inv.curName,\r\n            Amount: Utils.toStr(inv.invoice.amount),\r\n            AmountInUSD: Utils.toStr(inv.amountInUSD),\r\n            AmountInINR: Utils.toStr(inv.amountInINR),\r\n            Status: inv.status,\r\n            Received: Invoice.isReceived(inv.invoice) ? Utils.toStr(inv.invoice.receivedAmount) : ' - ',\r\n            ReceivedDate: Invoice.isReceived(inv.invoice) ? Utils.getDateStr(inv.invoice.receivedDate as Date) : ' - ',\r\n            BankCharges: Invoice.isReceived(inv.invoice) ? inv.invoice.bankCharges : ' - ',\r\n            BankTransaction: Invoice.isReceived(inv.invoice) ? inv.invoice.bankTransaction : ' - ',\r\n            Mgmt: inv.manager1,\r\n            Manager: inv.manager2,\r\n            Remarks: inv.invoice.remarks\r\n        };\r\n    });\r\n    const invcsv = Utils.tocsv(tmpList);\r\n    const summary = summarizeCategory(invoiceList);\r\n    return invcsv + summary;\r\n}\r\n\r\nexport function getSoftexFormatCSV(invoiceList: InvoiceViewObj[]): string {\r\n    const tmpList = invoiceList\r\n        .filter(inv => !inv.invoice.isExpenseInvoice) // softex - exclude expense invoices\r\n        .filter(inv => inv.clientCountryCode !== 'IN') // softex - exclude invoices to Indian clients\r\n        .map((inv, i) => {\r\n            return {\r\n                ContractNo : inv.poNumber,\r\n                ContractDate: Utils.getTwoDigitDateStr(inv.poDate),\r\n                ClientName: inv.client.name ,\r\n                ClientAddress: inv.clientAddress ,\r\n                CountryCode: inv.clientCountryCode ,\r\n                ModOfRealization: 3 ,\r\n                SoftwareType : 907,\r\n                SoftwareCategory: ' ' ,\r\n                SoftexNo: inv.invoice.softexNumber,\r\n                InvoiceNo: inv.invoice.invoiceNumber,\r\n                InvoiceDate: Utils.getTwoDigitDateStr(inv.invoice.invoiceDate),\r\n                HSN_SAC_Code: 998314,\r\n                CurrencyCode: inv.curName,\r\n                ExportValue: Utils.toStrWithNoDecimals(inv.invoice.amount),\r\n                CommissionAmount: 0,\r\n                DeductionAmount:0 ,\r\n                TransmissionAmount: 0,\r\n                ExportValue_INR: Utils.toStrWithNoDecimals(inv.amountInINR)\r\n\r\n            };\r\n        });\r\n    return Utils.tocsv(tmpList);\r\n}\r\n\r\n// old format no longer required\r\n// export function getSoftexFormatCSV(invoiceList: InvoiceViewObj[]): string {\r\n//     const tmpList = invoiceList\r\n//         .filter(inv => !inv.invoice.isExpenseInvoice) // softex - exclude expense invoices\r\n//         .filter(inv => inv.clientCountryCode !== 'IN') // softex - exclude invoices to Indian clients\r\n//         .map((inv, i) => {\r\n//             return {\r\n//                 SrNo: i + 1,\r\n\r\n//                 SoftexNo: '',\r\n//                 _SoftexNo: '',\r\n//                 __SoftexNo: '',\r\n\r\n//                 NameOfTheClient: inv.client.name,\r\n//                 _NameOfTheClient: '',\r\n\r\n//                 AddressOfTheClient: inv.clientAddress,\r\n//                 _AddressOfTheClient: '',\r\n\r\n//                 CountryCode: inv.clientCountryCode,\r\n//                 _CountryCode: '',\r\n\r\n//                 InternalProjCode: `${inv.projectCode}-${Utils.getDateStr(inv.poDate)} `,\r\n//                 _InternalProjCode: '',\r\n//                 __InternalProjCode3: '',\r\n\r\n//                 TypeOfSW: 907,\r\n//                 _TypeOfSW: '',\r\n\r\n//                 ModeOfRealisation: 'Others',\r\n//                 _ModeOfRealisation: '',\r\n\r\n//                 InvoiceNumber: inv.invoice.invoiceNumber,\r\n//                 _InvoiceNumber: '',\r\n\r\n//                 InvoiceDate: Utils.getTwoDigitDateStr(inv.invoice.invoiceDate),\r\n//                 _InvoiceDate: '',\r\n\r\n//                 Currency: inv.curName,\r\n//                 _Currency: '',\r\n//                 __Currency: '',\r\n\r\n//                 ValueOfSoftwareExport: Utils.toStr(inv.invoice.amount),\r\n//                 _ValueOfSoftwareExport: '',\r\n\r\n//                 TransmissionCharge: 0,\r\n//                 _TransmissionCharge: '',\r\n\r\n//                 Commission: 0,\r\n//                 _Commission: '',\r\n//                 __Commission: '',\r\n\r\n//                 Deduction: 0,\r\n//                 NetRealisableValue: Utils.toStr(inv.invoice.amount),\r\n//                 INRValue: Utils.toStr(inv.amountInINR)\r\n//             };\r\n//         });\r\n//     return Utils.tocsv(tmpList);\r\n// }\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../data/user.service';\r\nimport { DataService } from '../data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  userName = '';\r\n\r\n  fullName = '';\r\n  password = '';\r\n  email = '';\r\n  role = '';\r\n\r\n  btnTitle = 'Create User';\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  formTitle = 'Create User';\r\n\r\n  constructor(protected router: Router, protected user: UserService, protected data: DataService) {}\r\n\r\n  ngOnInit() { }\r\n  \r\n  goHome( delayTime: number = 2000) {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/')\r\n    }, delayTime);\r\n  }\r\n  onClick() {\r\n    console.log('Creating user');\r\n    this.errorMessage = '';\r\n    this.successMessage = 'Creating user ...';\r\n    this.user.createUser(this.userName,this.fullName, this.password, this.email, this.role).subscribe(\r\n      res => {\r\n        if (res > 0) {\r\n          this.successMessage = 'User created';\r\n        } else {\r\n          this.errorMessage = 'Unable to create user';\r\n        }\r\n        this.userName = '';\r\n        this.fullName = '';\r\n        this.password = '';\r\n        this.email = '';\r\n        this.role = '';\r\n\r\n      },\r\n      err => {\r\n        this.errorMessage = 'Unable to create user';\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\r\n\r\n<form>\r\n  <div class='focus-in-expand'>\r\n\r\n    <div class='gridcontainer'>\r\n\r\n      <div class=\"t4group userName\">\r\n        <label class='t1elem aligncenter'> Login name </label>\r\n        <input class=\"t2elem smallFont\" required type=\"text\" name=\"userName\"\r\n          autocomplete=\"username\"\r\n           [(ngModel)]=\"userName\"/>\r\n      </div>\r\n\r\n      <div class=\"t4group fullName\">\r\n        <label class='t1elem aligncenter'> Full Name </label>\r\n        <input class=\"t2elem smallFont\" required type=\"text\" name=\"fullName\" autocomplete=\"fullName\" [(ngModel)]=\"fullName\" />\r\n      </div>\r\n\r\n      <div class=\"t4group password\">\r\n        <label class='t1elem aligncenter'> Password </label>\r\n        <input class=\"t2elem smallFont\" required type=\"password\" \r\n              autocomplete=\"current-password\"\r\n              name=\"password\" [(ngModel)]=\"password\"/>\r\n      </div>\r\n\r\n      <div class=\"t4group email \">\r\n        <label class='t1elem aligncenter'> Email </label>\r\n        <input class=\"t2elem smallFont\" required type=\"email\" name=\"email\"  [(ngModel)]=\"email\">\r\n      </div>\r\n\r\n      <div class=\"t4group role\">\r\n        <label class='t1elem aligncenter'> Role </label>\r\n        <input class=\"t2elem smallFont\" required type=\"text\" name=\"role\" [(ngModel)]=\"role\"/>\r\n        <label class='t4elem smallFont'> ACCOUNTING / MANAGER / SALES / ADMIN / MGMT </label>\r\n      </div>\r\n\r\n\r\n      <div class=\"t4group submit\">\r\n        <button class=\"btn btn-success t2elem\" (click)=\"onClick()\" type=submit>{{btnTitle}} </button>\r\n      </div>\r\n\r\n\r\n      <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\r\n      <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Supplier  } from '../data/data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n    templateUrl: './supplierNew.component.html',\r\n    styleUrls: ['./supplierNew.component.scss']\r\n})\r\nexport class SupplierEditComponent implements OnInit {\r\n    supplier: Supplier = new  Supplier();\r\n\r\n    formTitle = 'Modify Supplier';\r\n    btnTitle = 'Update this Supplier';\r\n    successMessage = '';\r\n    errorMessage = '';\r\n\r\n    constructor(private data: DataService, private route: ActivatedRoute,  private location: Location) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.data.getSupplier(id)\r\n          .then(su => this.supplier = su, err => { console.log(err); this.setError(err); });\r\n    }\r\n\r\n    setError(err: any) {\r\n        this.errorMessage = 'Error: Could not update: ' + err.Error;\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Updating Supplier' + this.supplier.name);\r\n        this.data.updateSupplier(this.supplier)\r\n            .subscribe(s => { console.log(s); this.successMessage = 'Updated ' + this.supplier.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError(err); });\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n            this.location.back();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\n\n<div class='container-fluid focus-in-expand'>\n\n    <form  autocomplete=\"off\" (ngSubmit)=\"onSubmit()\" #supplierNewForm=\"ngForm\">\n\n        <div class='row'> \n            <div class=\"col-sm-4 form-group \">\n                <label class='t1elem' for=\"supplierName\">Supplier Name</label>\n                <input class=\"form-control t2elem\" required type=\"text\" id=\"supplierName\" name=\"supplierName\" [(ngModel)]=\"supplier.name\">\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-4 form-group\">\n                <label class='t1elem' for=\"supplierCode\"> Supplier Code</label>\n                <input class=\"form-control t2elem\" required type=\"text\" name=\"supplierCode\" id=\"supplierCode\" [(ngModel)]=\"supplier.supplierCode\">\n            </div>\n        </div>\n\n        <div class='row'>\n            <div class=\"col-sm-4 form-group \">\n                <label class='t1elem' for=\"supplierLocation\">Location</label>\n                <input class=\"form-control t2elem\" required type=\"text\" name=\"supplierLocation\" id=\"supplierLocation\" [(ngModel)]=\"supplier.location\">\n            </div>\n        </div>\n\n        <div class='row'>\n            <div class=\"col-sm-6 form-group\">\n                    <label class=\"formLabel address\">Address</label>\n                        <textarea class=\"form-control address\"   required type=\"text\" name=\"address\" \n                        rows=\"4\" cols=\"60\" maxlength=\"250\" wrap=\"hard\" [(ngModel)]=\"supplier.address\"></textarea>\n                    \n                    <small class=\"text-muted\"> Street address, City, Country on separate lines.\n                                               Don't include the company name. <br>\n                                               Not more than 4 lines. </small>\n            </div>\n        </div>\n\n        <div class='row'> \n            <div class=\"col-sm-4 form-group \">\n                <label  class='formLabel'  for=\"phone\"> Phone </label>\n                <input class=\"form-control\" required type=\"text\" name=\"phone\" id=\"phone\" [(ngModel)]=\"supplier.telephone\" >\n            </div>\n         \n            <div class=\"col-sm-4 form-group \">\n                    <label class='formLabel'  for=\"email\"> Email </label>\n                    <input class=\"form-control\" required type=\"email\" name=\"email\" id=\"email\" [(ngModel)]=\"supplier.email\" >\n            </div>\n        </div>\n\n        <div class='row'> \n            <div class=\"col-sm-4 form-group \">\n                <label  class='formLabel'  for=\"gstnumber\"> GST Number </label>\n                <input class=\"form-control\" required type=\"text\" name=\"gstnumber\" id=\"phogstnumberne\" [(ngModel)]=\"supplier.gstNumber\" >\n            </div>\n         \n            <div class=\"col-sm-4 form-group \">\n                    <label class='formLabel'  for=\"tannumber\"> TAN Number </label>\n                    <input class=\"form-control\" required type=\"text\" name=\"tannumber\" id=\"tannumber\" [(ngModel)]=\"supplier.tanNumber\" >\n            </div>\n        </div>\n\n\n        <div class='row'> \n            <div class=\"col-sm-4 form-group\">\n                <button type=\"submit\" class=\"btn btn-success t2elem\" [disabled]=\"!supplierNewForm.form.valid\">{{btnTitle}}</button>\n            </div>\n          </div>\n\n\n        <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\n        <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\n\n    </form>\n</div>","import { DataService, PurchaseOrder, Vendor, Fileblob, Client, SupplierPurchaseOrder, Supplier } from '../data/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { SupplierInvoice } from '../data/supplierInvoice';\r\nimport * as FileSaver from 'file-saver';\r\nimport { OnInit, Directive } from '@angular/core';\r\nimport { AttachmentInterface } from '../attachments/attachments.component';\r\nimport { Project } from '../data/project';\r\n\r\n\r\n@Directive()\r\nexport class SupplierInvoiceBase implements OnInit {\r\n  buttonTitle = 'Create Invoice';\r\n  formTitle = 'New Invoice';\r\n  supplierId = 0;\r\n  supplierName = '';\r\n  selectedSpo: SupplierPurchaseOrder | undefined; // selected SPO\r\n  selectedProject: Project | undefined;\r\n  projects: Project[] | undefined;\r\n\r\n  showForm = true;\r\n\r\n  curSymbol: string | undefined; // selected currency symbol\r\n\r\n  //  purchaseOrders: PurchaseOrder[] | undefined;\r\n\r\n  supplier: Supplier | undefined;\r\n  attachments: Fileblob[] | undefined;\r\n  attachmentmsg: string | undefined;\r\n  showAttachmentButton = false;\r\n  doFadeIn = false;\r\n  doFadeOut = false;\r\n\r\n\r\n  // following for invoice internal edit new\r\n  extCurSymbol = '';\r\n  updating = false;\r\n\r\n  // -----\r\n\r\n  showPeriodOfServiceTip = false;\r\n\r\n  get invoicestatus() {\r\n    return this.invoice.status.toString();\r\n  }\r\n  set invoicestatus(val: string) {\r\n    this.invoice.status = parseInt(val, 10);\r\n  }\r\n  invoice: SupplierInvoice = new SupplierInvoice();\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  viewMode: boolean | undefined = undefined;\r\n  showReceived: boolean | undefined = undefined;\r\n  showSupplierSelection = true;\r\n  fileblob = new Fileblob();\r\n  StatusOptions: any[] = [];\r\n  attachmentIntf: AttachmentInterface = new AttachmentInterface();\r\n\r\n//   get PDFlink() {\r\n//     return this.fileblob.id > 0 ? this.data.getInvoicePDFlink(this.invoice.id) : '';\r\n//   }\r\n//   get PDFFileName() {\r\n//     return this.fileblob.name;\r\n//   }\r\n  // enum StatusEnum { ReviewAwaited = 0, Received = 1, Requested = 2, Sent = 3, Overdue = 4, \r\n  //PartlyReceived = 5, WrittenOff = 6, Canceled = 7 }\r\n\r\n  get received() {\r\n    return this.invoice.status === 1 || this.invoice.status === 4 || this.invoice.status == 6 || this.invoice.status == 5;\r\n  }\r\n  get selectedPoNumber() {\r\n    return this.selectedSpo ? this.selectedSpo.poNumber : '';\r\n  }\r\n  get singleProject() {\r\n    return this.projects && this.projects.length === 1;\r\n  }\r\n\r\n  getAttachmentLink(attachmentId: number): string {\r\n    return this.data.getBaseSupplierInvoiceAttachmentLink(attachmentId);\r\n  }\r\n  ngOnInit() {}\r\n  updateTitles() {}\r\n\r\n  constructor(protected data: DataService, protected router: Router) {\r\n    this.StatusOptions = SupplierInvoice.getStatusOptions();\r\n  }\r\n\r\n  async attachmentLinkClicked(attachmentId: number, filename: string) {\r\n    if (attachmentId <= 0 || !filename) {\r\n      console.log('attachment id is zero');\r\n      return;\r\n    }\r\n    console.log(`attachment id is ${attachmentId} and filename is ${filename}`);\r\n    const urlstr = this.data.getBaseSupplierInvoiceAttachmentLink(attachmentId);\r\n    const res = await this.data.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, filename);\r\n  }\r\n\r\n//   async pdflinkClicked() {\r\n//     if (this.fileblob.id <= 0) {\r\n//       console.log('fileblob id is zero');\r\n//       return;\r\n//     }\r\n//     const urlstr = this.data.getSuppleirInvoicePDFlink(this.invoice.id);\r\n//     const res = await this.data.downloadResource(urlstr);\r\n//     const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n//     FileSaver.saveAs(fileblob, this.PDFFileName);\r\n//   }\r\n\r\n  \r\n\r\n  async onSupplierSelected() {\r\n    if (this.supplierId) {\r\n      this.resetUserInputs();\r\n      this.supplier = await this.data.getSupplier(this.supplierId);\r\n      this.supplierName = this.supplier.name;\r\n      await this.data\r\n        .getListOfProjects()\r\n        .toPromise()\r\n        .then(\r\n          res => {\r\n            this.projects = res.filter(proj => proj.completed <= 0); // show only not completed projects\r\n            if (this.projects.length === 1) {\r\n              const project = this.projects[0];\r\n              this.invoice.projectId = project.id;\r\n              this.onProjectSelected();\r\n            }\r\n          },\r\n          err => this.setError('Error : unable to fetch project info ', err)\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n  onProjectSelected() {\r\n    if (this.invoice.projectId && this.projects) {\r\n      // tslint:disable-next-line:triple-equals\r\n      this.selectedProject = this.projects.find(p => p.id == this.invoice.projectId);\r\n    }\r\n  }\r\n\r\n  async onSPOSelected() {\r\n    if (this.invoice.supplierPOId) {\r\n      this.selectedSpo = await this.data.getSupplierPurchaseOrder(this.invoice.supplierPOId).toPromise();\r\n      if (this.selectedSpo) {\r\n        await this.data.getcurSymbol(this.selectedSpo.currencyId).then(sym => (this.curSymbol = sym));\r\n      }\r\n    }\r\n  }\r\n\r\n  async fileUploadChanged(files: any) {}\r\n\r\n\r\n  setError(msg: string, err: any) {\r\n    this.errorMessage = msg + err\r\n  }\r\n\r\n\r\n  async updateFileblob() {\r\n    if (this.invoice.id > 0) {\r\n      this.data\r\n        .getFileblobForSupplierInvoice(this.invoice.id)\r\n        .subscribe(fb => this.fileblob = fb);\r\n    } else {\r\n      this.fileblob.name = '';\r\n      this.fileblob.id = 0;\r\n      this.fileblob.size = 0;\r\n    }\r\n  }\r\n\r\n  resetUserInputs() {\r\n    // this.purchaseOrders = undefined;\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    this.curSymbol = '';\r\n    this.fileblob = new Fileblob();\r\n  }\r\n\r\n  OnFocusInvoiceNumber() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data/data.service';\nimport { SupplierContactBase } from './supplierContactBase';\nimport { Location } from '@angular/common';\n\n@Component({\n  //selector: 'app-supplier-contacts',\n  templateUrl: './supplierContactsForm.component.html',\n  styleUrls: ['./supplierContactsForm.component.scss']\n})\nexport class SupplierContactNewComponent extends SupplierContactBase {\n\n  get buttonTitle() { return 'Create Contact'; }\n  get formTitle() { return 'New Contact'; }\n\n  constructor(protected data: DataService, protected router: Router,\n      protected route: ActivatedRoute, protected location: Location) {\n          super(data, router, route, location);\n  }\n\n}\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\n\n<div class='container-fluid focus-in-expand'>\n    \n    <form  autocomplete=\"off\" (ngSubmit)=\"onSubmit()\" #supplierContactForm=\"ngForm\">\n    <fieldset  [attr.disabled]=\"viewMode ? '' : null\"  >\n     \n        <div class='row'>\n            <div class=\"col-sm-4 \">\n                <!-- <div class='lead text-primary'><a routerLink=\"/suppliertrack/{{supplier.id}}\"> {{supplier.name}} </a></div> -->\n                <div> \n                    <small class=\"text-muted mt-4\"> {{supplier.location}} </small>\n                </div>\n            </div>\n           \n        </div>\n\n        <div class='row'> \n            <div class=\"col-sm-4 form-group \">\n                <label class='formLabel' for=\"name\"> Name </label>\n                <input class=\"form-control\" required type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"contact.name\" >\n            </div>\n          </div>\n\n        <div class='row'>\n                <div class=\"col-sm-4 form-group \">\n                        <label  class='formLabel' for=\"jobtitle\"> Job Title</label>\n                        <input class=\"form-control\" required type=\"text\" name=\"jobtitle\" id=\"jobtitle\" [(ngModel)]=\"contact.title\" >\n                </div>\n        </div>\n\n\n        <div class='row'>\n                <div class=\"col-sm-6 form-group\">\n                        <label class=\"formLabel address\"> Address</label>\n                            <textarea class=\"form-control address\"   required type=\"text\" name=\"address\" \n                            rows=\"4\" cols=\"60\" maxlength=\"250\" wrap=\"hard\" [(ngModel)]=\"contact.address\"></textarea>\n                        \n                        <small class=\"text-muted\"> Street address, City, Country on separate lines.\n                                                   Don't include the company name. <br>\n                                                   Not more than 4 lines. </small>\n                </div>\n        </div>\n\n        <div class='row'> \n                <div class=\"col-sm-4 form-group \">\n                    <label  class='formLabel'  for=\"telephone\"> Telephone </label>\n                    <input class=\"form-control\" required type=\"text\" name=\"telephone\" id=\"telephone\" [(ngModel)]=\"contact.telephone\" >\n                </div>\n             \n                <div class=\"col-sm-4 form-group \">\n                        <label class='formLabel'  for=\"email\"> Email </label>\n                        <input class=\"form-control\" required type=\"email\" name=\"email\" id=\"email\" [(ngModel)]=\"contact.email\" >\n                </div>\n        </div>\n\n\n       \n        <div class='row'> \n          <div class=\"col-sm-4 form-group\">\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!supplierContactForm.form.valid\">{{buttonTitle}}</button>\n            </div>\n        </div>\n        <div *ngIf=\"successMessage\" class=\"Success\"> {{successMessage}} </div>\n        <div *ngIf=\"errorMessage\" class=\"Errors\"> {{errorMessage}} </div>\n    </fieldset>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Client } from '../data/data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Project } from '../data/project';\r\nimport { ProjectBase } from './projectBase';\r\n\r\n\r\n@Component({\r\n    selector: 'app-projectedit',\r\n    templateUrl: './projectForm.component.html',\r\n    styleUrls: ['./projectForm.component.scss']\r\n})\r\nexport class ProjectEditComponent extends ProjectBase implements OnInit {\r\n    get buttonTitle() { return this.viewMode ? 'Edit this Project' : 'Update this Project'; }\r\n    get formTitle() { return this.viewMode ? 'Project' : 'Modify Project'; }\r\n\r\n    constructor(protected data: DataService, protected route: ActivatedRoute, protected location: Location) {\r\n        super(data, route, location);\r\n        this.viewMode = true;\r\n        this.showIsCompleted = true;\r\n    }\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        if (idstr) {\r\n            const id = +idstr;\r\n            this.data.getProject(id)\r\n                .subscribe(proj => this.setupProject(proj),\r\n                    err => { console.log(err); this.setError(err); });\r\n        }\r\n    }\r\n\r\n    setupProject(proj: Project) {\r\n        Object.assign(this.project, proj);\r\n        this.effort = this.project.getEffortInPM();\r\n        this.duration = this.project.getdurationInMonths();\r\n        this.electronics = this.project.isElectronics();\r\n        this.firmware = this.project.isFirmware();\r\n        this.software = this.project.isSoftware();\r\n        this.mechanical = this.project.isMechanical();\r\n        this.onClientSelected();\r\n        this.showForm = true;\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        if (this.viewMode) {\r\n            this.viewMode = undefined;\r\n            return;\r\n        }\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.prepareProject();\r\n        \r\n        \r\n        this.data.updateProject(this.project)\r\n            .subscribe(c =>\r\n            {\r\n                \r\n                this.successMessage = 'Updated ' + this.project.projectCode;\r\n                this.viewMode = true;\r\n                setTimeout(() => {\r\n                   // this.location.back();\r\n                   this.successMessage = '';\r\n                }, 2000);\r\n            },\r\n                err => { console.log(err); this.setError(err); });\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"pageTitle focus-in-expand\">{{formTitle}}</div>\r\n\r\n<div  class='projectformpage focus-in-expand'>\r\n    \r\n   \r\n        <form  class='form mb-4'  autocomplete=\"off\"   #projNewForm=\"ngForm\">\r\n            <div *ngIf=\"showForm\">\r\n                <fieldset  [attr.disabled]=\"viewMode ? '' : null\"  >\r\n            \r\n            <div class='gridcontainer'>\r\n            \r\n                <div class='clientname lead text-primary'><a routerLink=\"/clienttrack/{{clientId}}\"> {{clientName}} </a></div>\r\n                \r\n\r\n            \r\n                <div class=\"projectstart t4group\">\r\n                    <label  class='t1elem'  for=\"projStart\"> Start Date</label>\r\n                    <input class=\"t2elem \" required type=\"date\" \r\n                            [ngModel]=\"project.startDate | date:'yyyy-MM-dd'\" \r\n                            (ngModelChange)=\"project.startDate = $event\"\r\n                            name=\"projStart\" id=\"projStart\"  >\r\n                </div>\r\n\r\n                <div class=\"projectcode t4group\">\r\n                        <label  class='t1elem'  for=\"projCode\"> Project Code</label>\r\n                        <input class=\"t2elem smallwidth \" required type=\"text\" (focus)=\"OnProjectCodeFocus()\"\r\n                                name=\"projCode\" id=\"projCode\" [(ngModel)]=\"project.projectCode\" >\r\n                </div>\r\n\r\n                <div class='ponumber t4group'>\r\n                    <label class='t1elem' for='ponumber'> PO Number</label>\r\n                    <select class=\"t2elemform-control smallFont\"  \r\n                            name=\"ponumber\" required \r\n                            [(ngModel)]=\"project.poId\"\r\n                            (ngModelChange)=\"onPOChanged()\"\r\n                            >\r\n                        <option *ngFor=\"let po of purchaseOrderOptions\" [value]=\"po.id\">{{po.poNumber + ' : ' + po.description}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                    <div class=\"projectname t4group\">\r\n                        <label   class='t1elem'  for=\"projName\"> Project Description</label>\r\n                    \r\n                        <textarea class=\"t2elem smallFont\" required type=\"text\" name=\"projName\" id=\"projName\" rows=\"2\" cols=\"80\" maxlength=\"250\"\r\n                            [(ngModel)]=\"project.name\"></textarea>\r\n                    </div>\r\n            \r\n\r\n        <!-- effort up to 3 decimal places and greater than 0 -->\r\n            \r\n                    <div class=\"effort t4group\">\r\n                        <label   class='t1elem'  > Effort </label>\r\n                        <input class=\"t2elem smallwidth\" name=\"effort\" required \r\n                                pattern=\"^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,3})?\\s*$\"\r\n                                type=\"number\" step='0.01' [(ngModel)]=\"effort\" >\r\n                        <label class='t4elem text-muted smallFont alignleft'>person-months</label>\r\n                    \r\n                    </div>\r\n\r\n                    <!-- duration up to 2 decimal places and greater than 0 -->\r\n                    <div class=\"duration t4group\">\r\n                        <label   class='t1elem'  > Duration</label>\r\n                        <input class=\"t2elem smallwidth\" name=\"duration\" required \r\n                                pattern=\"^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$\"\r\n                                type=\"number\" step='0.01' [(ngModel)]=\"duration\" >\r\n                        <label class='t4elem text-muted smallFont alignleft'>calendar-months</label>\r\n                    </div>\r\n            \r\n\r\n            \r\n            \r\n                    <div class='services'>\r\n                        <div  class='t1elem text-muted smallFont servicestitle'>Services </div>\r\n\r\n                    \r\n                        <span  class='ml-4 electronics'><small>\r\n                        <input class=\" checkbox small\"   type=\"checkbox\" name=electronics \r\n                            [(ngModel)]=\"electronics\"> \r\n                        Electronics</small></span>\r\n                    \r\n                        \r\n\r\n                        <span  class='t1elem firmware ml-4' ><small>\r\n                        <input class=\" checkbox small\"   type=\"checkbox\" name=firmware \r\n                        [(ngModel)]=\"firmware\" >\r\n                        Firmware</small></span>\r\n\r\n                        <span  class='t1elem software ml-4' ><small>\r\n                        <input class=\" checkbox\"   type=\"checkbox\" name=software \r\n                        [(ngModel)]=\"software\" >\r\n                        Software</small></span>\r\n\r\n                        <span  class='t1elem mechanical ml-4' ><small>\r\n                        <input class=\" checkbox\"   type=\"checkbox\" name=mechanical \r\n                        [(ngModel)]=\"mechanical\" >\r\n                        Mechanical</small></span>\r\n                    \r\n                    </div>\r\n            \r\n\r\n\r\n            \r\n                    <div class=\"worktype t4group\">\r\n                        <label class='t1elem'  for=\"worktype\">Work type</label>\r\n                        <select class=\"t2elemform-control\" \r\n                                    pattern=\"[1-9][0-9]*\"\r\n                                name=\"worktype\" required [(ngModel)]=\"project.workType\" >\r\n                                <option *ngFor=\"let workTypeOpt of workTypeOptions\" [value]=\"workTypeOpt.val\">{{workTypeOpt.str}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"medical t4group\">\r\n                        <label class='t1elem'  for=\"medType\">Medical Class</label>\r\n                        <select class=\"t2elem \" \r\n                                name=\"medType\"  required [(ngModel)]=\"project.medicalClass\" >\r\n                                <option *ngFor=\"let medClassOpt of medClassOptions\" [value]=\"medClassOpt.val\">{{medClassOpt.str}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class='stpservice t4group'>\r\n                        <label class='t1elem' for='stp'>STP Service type</label>\r\n                        <select class='t2elem' name='stp' required [(ngModel)]='project.stpServiceType'>\r\n                            <option *ngFor='let opt of stpOptions' [value]='opt.val'>{{opt.str}}</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n\r\n                <div class=\"billingtype t4group\">\r\n                    <label class='t1elem' for=\"billingtype\">Billing </label>\r\n                    <select class=\"t2elem \" name=\"billingtype\" required [(ngModel)]=\"project.billingType\">\r\n                        <option *ngFor=\"let bill of billingTypes\" [value]=\"bill.val\">{{bill.str}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n            \r\n                        <div class=\"projectmanager t4group\">\r\n                            <label class='t1elem'  for=\"projmgr\">Project Manager</label>\r\n                            <select class=\"t2elem \" \r\n                                pattern=\"[1-9][0-9]*\"\r\n                                    name=\"projmgr\"  required [(ngModel)]=\"project.projectManagerId\" >\r\n                                    <option *ngFor=\"let mgrOpt of mgrOptions\" [value]=\"mgrOpt.id\">{{mgrOpt.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"accountmanager t4group\">\r\n                            <label  class='t1elem' for=\"mgmt\">Account Manager</label>\r\n                            <select class=\"t2elem \" \r\n                                pattern=\"[1-9][0-9]*\"\r\n                                    name=\"mgmt\"  required [(ngModel)]=\"project.mgmtId\" >\r\n                                    <option *ngFor=\"let mgrOpt of mgrOptions\" [value]=\"mgrOpt.id\">{{mgrOpt.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                \r\n\r\n                \r\n                    <div class='clientsponsor t4group mt-4'>\r\n                        <label class='t1elem' >Client Sponsor</label>\r\n                            <select class='t2elem '  name='sponsor' \r\n                                pattern=\"[1-9][0-9]*\" required\r\n                                    [(ngModel)]='project.clientSponsorId'>\r\n                                    <option *ngFor='let contact of contacts' [value]='contact.id'>{{contact.name}}</option>\r\n                            </select>\r\n                    \r\n                            <label class='t4elem text-muted smallFont alignleft'>Invoices are addressed to the Client Sponsor.</label>\r\n                    \r\n\r\n                    </div>\r\n                    <div class='clientmanager t4group'>\r\n                            <label class='t1elem' >Client Manager</label>\r\n                                <select class='t2elem '  name='clientmanager' \r\n                                    pattern=\"[1-9][0-9]*\" required\r\n                                        [(ngModel)]='project.clientManagerId'>\r\n                                        <option *ngFor='let contact of contacts' [value]='contact.id'>{{contact.name}}</option>\r\n                                </select>\r\n                    \r\n                        \r\n                        </div>\r\n                        <div class='clientcommercial t4group'>\r\n                                <label class='t1elem' >Commercial Manager</label>\r\n                                    <select class='t2elem ' name='commercialmgr' \r\n                                        pattern=\"[1-9][0-9]*\" required\r\n                                            [(ngModel)]='project.clientCommercialId'>\r\n                                            <option *ngFor='let contact of contacts' [value]='contact.id'>{{contact.name}}</option>\r\n                                    </select>\r\n                            \r\n                            </div>\r\n\r\n                            <div class='invoicecopyto t4group'>\r\n                                <label class='t1elem'>Invoice Copy to</label>\r\n                                <textarea class=\"t2elem smallFont\"  type=\"text\" name=\"invoiceCopyTo\"  \r\n                                        placeholder=\"<additional email addresses separated by comma>\"\r\n                                        rows=\"1\" cols=\"80\" maxlength=\"120\"\r\n                                        [(ngModel)]=\"project.invoiceCopyTo\"></textarea>\r\n                            \r\n                            </div>\r\n                            <div class='remarks t4group'>\r\n                                <label class='t1elem'>Remarks</label>\r\n                                <textarea class=\"t2elem smallFont\"  type=\"text\" name=\"remarks\" \r\n                                        rows=\"2\" cols=\"80\" maxlength=\"220\"\r\n                                        [(ngModel)]=\"project.remarks\"></textarea>\r\n                            \r\n                            </div>\r\n                \r\n\r\n            <div class = 'hrline'>\r\n                <div *ngIf=\"successMessage\" class=\" Success \"> {{successMessage}} </div>\r\n                <div *ngIf=\"errorMessage\" class=\" Errors \"> {{errorMessage}} </div>\r\n                <hr class='hrline'>\r\n            </div>\r\n            \r\n                        <div *ngIf=\"showIsCompleted\" class=\"iscompleted t4group mt-4\">\r\n                            <input class=\" Checkbox t2elem\"  type=\"checkbox\" \r\n                                    name=\"iscompleted\" id=\"iscompleted\" [(ngModel)]=\"projectcompleted\" >\r\n                            <span  class='t4elem text-muted alignleft' for=\"iscompleted\"> Project is completed. </span>\r\n                        </div>\r\n            \r\n                    </div>\r\n            \r\n                </fieldset>\r\n            </div>\r\n        </form>\r\n   \r\n\r\n   \r\n    <div class=\"submitbutton\">\r\n        <button type=\"submit\"    (click)=\"onSubmit()\" class=\"btn btn-success\" \r\n                [disabled]=\"!viewMode && !projNewForm.form.valid\">\r\n                {{buttonTitle}}\r\n        </button>\r\n    </div>\r\n<div *ngIf='viewMode && project.id > 0' class=\"viewpinbutton\">\r\n    <a class='viewpinbutton' routerLink=\"/projectpin/{{project.id}}\">\r\n        <div   class=\"btn btn-success\" >\r\n            View PIN \r\n        </div>\r\n    </a>\r\n</div>\r\n\r\n   \r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data/data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SupplierInvoiceBase } from './supplierInvoiceBase';\n\n@Component({\n  selector: 'app-supplier-invoice-form',\n  templateUrl: './supplierInvoiceForm.component.html',\n  styleUrls: ['./supplierInvoiceForm.component.scss']\n})\nexport class SupplierInvoiceFormComponent extends SupplierInvoiceBase implements OnInit {\n\n  constructor(\n    data: DataService,\n    private route: ActivatedRoute,\n    protected router: Router\n  ) {\n    super(data, router);\n    this.showReceived = false;\n  }\n\n  async ngOnInit(){\n    const spoidstr = this.route.snapshot.paramMap.get('spoid');\n    const spoid = spoidstr ? +spoidstr : 0;\n    const supplierIdstr = this.route.snapshot.paramMap.get('supplierId');\n    const supplierId = supplierIdstr ? + supplierIdstr : 0;\n    if (spoid > 0 && supplierId > 0) {\n      this.supplierId = supplierId;\n      await super.onSupplierSelected();\n      this.showSupplierSelection = false;\n      this.invoice.supplierPOId = spoid;\n      this.invoice.invoiceDate = await this.computeDefaultInvoiceDate();\n      await super.onSPOSelected();\n    }\n  }\n\n  async onSubmit() {\n    this.successMessage = '';\n    this.errorMessage = '';\n    console.log('Submitting new Invoice');\n    if (this.invoice.projectId === 0) {\n      this.setError(' Please select a project for this invoice. ', '');\n      return;\n    }\n    const oldButtonTitle = this.buttonTitle;\n    this.buttonTitle = 'Creating Invoice...';\n    await this.data\n      .addSupplierInvoice(this.invoice)\n      .toPromise()\n      .then(\n        c => {\n          console.log(c);\n          this.successMessage = 'added Invoice ' + this.invoice.invoiceNumber;\n          this.buttonTitle = oldButtonTitle;\n          this.resetForm(false);\n        },\n        err => {\n          this.buttonTitle = oldButtonTitle;\n          console.log(err);\n          this.setError('Could not add Invoice: Error: ', err);\n        }\n      );\n  }\n\n  resetForm(reInit: boolean) {\n    const tout = reInit ? 500 : 2000;\n    setTimeout(async () => {\n      //  console.log('resetForm-invoiceNew');\n      this.resetUserInputs();\n      let invId = this.invoice.id;\n      if (this.invoice.id <= 0) {\n        const inv = await this.data.getSupplierInvoiceForInvoiceNumber(this.invoice.invoiceNumber).toPromise();\n        invId = inv.id;\n      }\n      this.router.navigateByUrl('/supplierinvoice/' + invId);\n      if (reInit) {\n        this.ngOnInit();\n      }\n    }, tout);\n  }\n\n  async computeDefaultInvoiceDate(): Promise<Date> {\n    let dt = new Date();\n    if (dt.getDate() <= 6) {\n      const anyInvoicesThisMonth = await this.data.anySupplierInvoice(dt.getMonth() + 1, dt.getFullYear()).toPromise();\n      if (anyInvoicesThisMonth <= 0) {\n        // if no invoices this month, return last month's last working day\n        console.log('No invoices this month');\n        dt = this.getPreviousMonthsLastWorkingDay(dt);\n      }\n    }\n    return dt;\n  }\n  getPreviousMonthsLastWorkingDay(dt: Date): Date {\n    dt.setDate(dt.getDate() - dt.getDate()); // go to previous month\n    if (dt.getDay() === 0) {\n      // sunday ?\n      dt.setDate(dt.getDate() - 2); // go to the previous friday\n    }\n    if (dt.getDay() === 6) {\n      // saturday ?\n      dt.setDate(dt.getDate() - 1); // go to the previous friday\n    }\n    return dt;\n  }\n\n}\n","<div class=\"pageTitle focus-in-expand\">{{ formTitle }}</div>\n  \n<div *ngIf=\"showForm\" class=\"focus-in-expand\">\n  <form autocomplete=\"off\" #invoiceForm=\"ngForm\">\n    <fieldset [attr.disabled]=\"viewMode ? '' : null\">\n      <div class=\"supplierInvoiceForm\">\n        <a class=\" suppliername lead text-primary\" routerLink=\"/suppliertrack/{{ supplierId }}\"> {{ supplierName }} </a>\n        <div *ngIf=\"supplierName\" class=\"fromtoname vendor text-muted\">Invoice is from {{supplierName}} to Tismo </div>\n       \n\n        <div class=\" ponumber\">\n          <div *ngIf=\"selectedSpo\" class=\"text-muted\">Supplier PO # {{ selectedSpo.poNumber }}</div>\n\n          <div *ngIf=\"selectedSpo\" class=\"selectiondescription text-muted \" id=\"PODescription\">\n            {{ selectedSpo.description }},{{ selectedSpo.poIssueDate | date: 'dd MMM yyyy' }}\n          </div>\n        </div>\n\n        <div class=\"t4group project\">\n            <label class=\"t1elem\">Project</label>\n            <div *ngIf=\"singleProject\" class=\"t2elem selection\">{{ selectedProject!.projectCode }}</div>\n            <div *ngIf=\"selectedProject\" class=\"selectiondescription text-muted t4elem\" id=\"projectDescription\">\n                {{ selectedProject.name }}\n              </div>\n        </div>\n\n\n        <div class=\"t4group invoicedatearea\">\n          <label class=\"t1elem dateLabel\"> Invoice Date</label>\n          <input\n            class=\"t2elem date\"\n            required\n            type=\"date\"\n            name=\"invoiceDate\"\n            [ngModel]=\"invoice.invoiceDate | date: 'yyyy-MM-dd'\"\n            (ngModelChange)=\"invoice.invoiceDate = $event\"\n          />\n        </div>\n\n        <div class=\"t4group invoicenumber\">\n          <label class=\"t1elem\"> Invoice Number</label>\n          <input\n            class=\"t2elem\"\n            (focus)=\"OnFocusInvoiceNumber()\"\n            required\n            type=\"text\"\n            name=\"invoiceNumber\"\n            [(ngModel)]=\"invoice.invoiceNumber\"\n          />\n        </div>\n\n        <div class=\"t4group projectcode\">\n            <label class=\"t1elem\"> Project Code</label>\n            <input\n              class=\"t2elem\"\n              required\n              type=\"text\"\n              name=\"projectCode\"\n            />\n          </div>\n\n          <div class=\"t4group projectmanager\">\n            <label class=\"t1elem\"> Project Manager</label>\n            <input\n              class=\"t2elem\"\n              required\n              type=\"text\"\n              name=\"projectManager\"\n              \n            />\n          </div>\n\n          <div class=\"t4group paymentdatearea\">\n            <label class=\"t1elem dateLabel\"> Payment Date</label>\n            <input\n              class=\"t2elem date\"\n              required\n              type=\"date\"\n              name=\"paymentDate\"\n              [ngModel]=\"invoice.paymentDate | date: 'yyyy-MM-dd'\"\n            />\n          </div>\n\n        <div class=\"t4group description\">\n          <label class=\"t1elem aligncenter\"> Description </label>\n          <textarea\n            class=\"t2elem smallFont descriptiontextarea\"\n            required\n            type=\"text\"\n            name=\"description\"\n            rows=\"1\"\n            cols=\"80\"\n            maxlength=\"250\"\n            [(ngModel)]=\"invoice.description\"\n          ></textarea>\n        </div>\n\n       \n\n        <!-- pattern is for any decimal value > 0 and with only 2 decimal places at the most [0-9]*(\\.[0-9]{0,2})?   -->\n        <div class=\"t4group amount\">\n          <label class=\"t1elem\"> Amount </label>\n          <span class=\"currency t2elem\" name=\"amount\"\n            >{{ curSymbol }}\n            <input\n              class=\"nobackground\"\n              required\n              type=\"number\"\n              step=\"0.01\"\n              pattern=\"^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$\"\n              name=\"amount\"\n              [(ngModel)]=\"invoice.amount\"\n            />\n          </span>\n        </div>\n\n        <div class=\"techteamacceptancy t4group\">\n            <label class='t1elem'  for=\"techteamacceptancy\"> Technical Team Acceptancy </label>\n            <select class=\"t2elem\" id=\"techteamacceptancy\" name=\"techteamacceptancy\" \n                    pattern=\"[1-9][0-9]*\"\n                    required >\n                <option [value]=1>Yes</option>\n                <option [value]=0>No</option>\n              </select>\n        </div>\n\n        <div class=\"projectmanageracceptancy t4group\">\n            <label class='t1elem'  for=\"projectmanageracceptancy\"> Project Manager Acceptancy </label>\n            <select class=\"t2elem\" id=\"projectmanageracceptancy\" name=\"projectmanageracceptancy\" \n                    pattern=\"[1-9][0-9]*\"\n                    required  >\n                <option [value]=1>Yes</option>\n                <option [value]=0>No</option>\n                <option [value]=2>Partial</option>\n              </select>\n        </div>\n\n       \n\n        <div class=\"t4group remarks\">\n          <label class=\"t1elem smallFont aligncenter\"> Remarks </label>\n          <textarea\n            class=\"t2elem smallFont\"\n            type=\"text\"\n            name=\"remarks\"\n            rows=\"2\"\n            maxlength=\"250\"\n            [(ngModel)]=\"invoice.remarks\"\n          >\n          </textarea>\n        </div>\n\n        <div class=\"t4group clientinvoicenumber\">\n          <label class=\"t1elem\"> Client corresponding Invoice</label>\n          <input\n            class=\"t2elem\"\n            required\n            type=\"text\"\n            name=\"clientinvoiceNumber\"\n          />\n        </div>\n\n        <div class=\"t4group clientpaystatus\">\n          <label class=\"t1elem\">Client Payment Status</label>\n          <div class=\"t2elem selection\">Status</div>\n          \n      </div>\n\n        <!-- [ngClass]=\"{'table-success': !po.completed, 'table-secondary': po.completed} \" -->\n\n        <!-- <app-attachments class=\"attachments\" [attachmentIntf]=attachmentIntf ></app-attachments> -->\n\n        <!-- <div class=\"pdflink\">\n          <div *ngIf=\"PDFlink\" class=\"t4group\">\n            <label class=\"t1elem alignright\"> Invoice <i class=\"material-icons\">picture_as_pdf </i></label>\n            <a class=\"t2elem noborder\" href=\"javascript:void(0);\" (click)=\"pdflinkClicked()\"> {{PDFFileName}} </a>\n          </div>\n        </div>\n\n\n\n       \n        <app-projectemail *ngIf='selectedProject && !isInternalCustomer' class='emailcomponent' [project]=selectedProject >   \n\n        </app-projectemail>\n\n        <hr />\n\n        <div *ngIf=\"showReceived\" class=\"isreceivedarea t4group\">\n          <label class=\"t1elem\"> Status </label>\n          <select class=\"t2elem selection\" name=\"status\" required [(ngModel)]=\"invoicestatus\">\n            <option *ngFor=\"let iopt of StatusOptions\" [value]=\"iopt.value\">{{ iopt.key }}</option>\n          </select>\n        </div>\n\n        <div class=\"separator\"></div>\n\n        <div *ngIf=\"received\" class=\"t4group receivedamount\">\n          <label class=\"t1elem\"> Received Amount</label>\n          <span class=\"currency t2elem\"\n            >{{ curSymbol }}\n            <input\n              class=\"nobackground  recdamount\"\n              required\n              type=\"number\"\n              step=\"0.01\"\n              name=\"receivedamount\"\n              [(ngModel)]=\"invoice.receivedAmount\"\n            />\n          </span>\n        </div>\n\n        <div *ngIf=\"received && showTDS\" class=\"t4group tds\">\n          <label class=\"t1elem\"> TDS </label>\n          <span class=\"currency t2elem\"\n            >{{ curSymbol }}\n            <input\n              class=\"nobackground  recdamount\"\n              required\n              type=\"number\"\n              step=\"0.01\"\n              name=\"tds\"\n              [(ngModel)]=\"invoice.tds\"\n            />\n          </span>\n        </div>\n\n        <div *ngIf=\"received \" class=\"t4group balanceamount\">\n          <label class=\"t1elem\"> Balance </label>\n          <span *ngIf=\"balanceAmount\" class=\" t2elem \"> \n            {{ curSymbol }}<span> </span> {{balanceAmount}}\n          </span>\n          <span *ngIf=\"!balanceAmount\" class=\" t2elem \">\n              __\n          </span>\n        </div>\n\n\n        <div *ngIf=\"received\" class=\"t4group bankcharges\">\n          <label class=\"t1elem\"> Bank Charges</label>\n          <span class=\"currency t2elem\"\n            >{{ curSymbol }}\n            <input\n              class=\"nobackground  recdamount\"\n              required\n              type=\"number\"\n              step=\"0.01\"\n              name=\"bankcharges\"\n              (focus)=\"OnBankChargesFocus()\"\n              [(ngModel)]=\"invoice.bankCharges\"\n            />\n          </span>\n        </div>\n\n        <div *ngIf=\"received\" class=\"t4group recddatearea\">\n          <label class=\"t1elem \"> Received date </label>\n          <input\n            class=\"t2elem recddate\"\n            type=\"date\"\n            name=\"receivedDate\"\n            [ngModel]=\"invoice.receivedDate | date: 'yyyy-MM-dd'\"\n            (ngModelChange)=\"invoice.receivedDate = $event\"\n          />\n        </div>\n\n        <div *ngIf=\"received\" class=\"t4group banksummary\">\n          <label class=\"t1elem\"> Bank transaction summary</label>\n          <textarea\n            class=\"t2elem smallFont\"\n            required\n            type=\"text\"\n            name=\"banktransaction\"\n            rows=\"1\"\n            cols=\"80\"\n            maxlength=\"250\"\n            [(ngModel)]=\"invoice.bankTransaction\"\n          ></textarea>\n        </div> -->\n\n\n\n      <div *ngIf=\"successMessage\" class=\"Success focus-in-expand message\">{{ successMessage }}</div>\n      <div *ngIf=\"errorMessage\" class=\"Errors focus-in-expand message\">{{ errorMessage }}</div>\n\n      \n      </div>\n    </fieldset>\n  </form>\n\n  <div class=\"  submitbutton\">\n    <button class=\"btn btn-success\" (click)=\"onSubmit()\" [disabled]=\"!viewMode && !invoiceForm.form.valid\">\n      {{ buttonTitle }}\n    </button>\n  </div>\n  \n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceBase } from './invoiceBase';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-invoicenew',\r\n  templateUrl: './invoiceForm.component.html',\r\n  styleUrls: ['./invoiceForm.component.scss']\r\n})\r\nexport class InvoiceNewComponent extends InvoiceBase implements OnInit {\r\n  constructor(\r\n    data: DataService,\r\n    private route: ActivatedRoute,\r\n    protected router: Router\r\n  ) {\r\n    super(data, router);\r\n    this.showReceived = false;\r\n  }\r\n\r\n  // http://localhost:4200/newinvoice;poid=48;clientId=39\r\n  async ngOnInit() {\r\n    //   console.log('NG On Init called - invoiceNewComponent');\r\n    const poidstr = this.route.snapshot.paramMap.get('poid');\r\n    const poid = poidstr ? +poidstr : 0;\r\n    const clientIdstr = this.route.snapshot.paramMap.get('clientId');\r\n    const clientId = clientIdstr ? +clientIdstr : 0;\r\n    if (poid > 0 && clientId > 0) {\r\n      // first check if this is an internal PO\r\n      const extPOid = await this.data.getEndPOforInternalPO(poid).toPromise();\r\n      if (extPOid > 0) {\r\n        // this is an internal PO\r\n        console.log('new PO creation with internal PO client id and poid');\r\n        return;\r\n      }\r\n\r\n      this.clientId = clientId;\r\n      await super.onClientSelected();\r\n      this.showClientSelection = false;\r\n      this.invoice.purchaseOrderId = poid;\r\n      this.invoice.invoiceDate = await this.computeDefaultInvoiceDate();\r\n      this.singlePO = true;\r\n      await super.onPOSelected();\r\n    }\r\n  }\r\n  async onSubmit() {\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    console.log('Submitting new Invoice');\r\n    if (this.invoice.projectId === 0) {\r\n      this.setError(' Please select a project for this invoice. ', '');\r\n      return;\r\n    }\r\n    const oldButtonTitle = this.buttonTitle;\r\n    this.buttonTitle = 'Creating Invoice...';\r\n    await this.data\r\n      .addInvoice(this.invoice)\r\n      .toPromise()\r\n      .then(\r\n        c => {\r\n          console.log(c);\r\n          this.successMessage = 'added Invoice ' + this.invoice.invoiceNumber;\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.resetForm(false);\r\n        },\r\n        err => {\r\n          this.buttonTitle = oldButtonTitle;\r\n          console.log(err);\r\n          this.setError('Could not add Invoice: Error: ', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetForm(reInit: boolean) {\r\n    const tout = reInit ? 500 : 2000;\r\n    setTimeout(async () => {\r\n      //  console.log('resetForm-invoiceNew');\r\n      this.resetUserInputs();\r\n      let invId = this.invoice.id;\r\n      if (this.invoice.id <= 0) {\r\n        const inv = await this.data.getInvoiceForInvoiceNumber(this.invoice.invoiceNumber).toPromise();\r\n        invId = inv.id;\r\n      }\r\n      this.router.navigateByUrl('/invoice/' + invId);\r\n      if (reInit) {\r\n        this.ngOnInit();\r\n      }\r\n    }, tout);\r\n  }\r\n\r\n  async computeDefaultInvoiceDate(): Promise<Date> {\r\n    let dt = new Date();\r\n    if (dt.getDate() <= 6) {\r\n      const anyInvoicesThisMonth = await this.data.anyInvoice(dt.getMonth() + 1, dt.getFullYear()).toPromise();\r\n      if (anyInvoicesThisMonth <= 0) {\r\n        // if no invoices this month, return last month's last working day\r\n        console.log('No invoices this month');\r\n        dt = this.getPreviousMonthsLastWorkingDay(dt);\r\n      }\r\n    }\r\n    return dt;\r\n  }\r\n  getPreviousMonthsLastWorkingDay(dt: Date): Date {\r\n    dt.setDate(dt.getDate() - dt.getDate()); // go to previous month\r\n    if (dt.getDay() === 0) {\r\n      // sunday ?\r\n      dt.setDate(dt.getDate() - 2); // go to the previous friday\r\n    }\r\n    if (dt.getDay() === 6) {\r\n      // saturday ?\r\n      dt.setDate(dt.getDate() - 1); // go to the previous friday\r\n    }\r\n    return dt;\r\n  }\r\n\r\n  async refreshInvoiceNumberClicked() {\r\n    await this.generateInvoiceNumber();\r\n  }\r\n\r\n  async OnFocusInvoiceNumber() {\r\n    if (this.invoice.invoiceNumber.length < 1) {\r\n      await this.generateInvoiceNumber();\r\n    }\r\n    this.enableRefreshInvoiceNumber = true;\r\n  }\r\n}\r\n","<div class=\"pageTitle focus-in-expand\">{{ formTitle }}</div>\r\n  \r\n<div *ngIf=\"showForm\" class=\"focus-in-expand\">\r\n  <form autocomplete=\"off\" #invoiceForm=\"ngForm\">\r\n    <fieldset [attr.disabled]=\"viewMode ? '' : null\">\r\n      <div class=\"invoiceform\">\r\n        <a class=\" clientname lead text-primary\" routerLink=\"/clienttrack/{{ clientId }}\"> {{ clientName }} </a>\r\n        <div *ngIf=\"vendorName\" class=\"vendorname vendor text-muted\">Invoice is from {{ vendorName }} to {{clientName}} </div>\r\n       \r\n\r\n        <div *ngIf=\"InternalInvoiceEdit\" class=\"externalinvoice\">\r\n          <div *ngIf=\"extCurSymbol\">\r\n            <div class=\"ExternalInvoiceDetails  smallFont\">\r\n              <span> Linked to invoice  <a routerLink=\"/invoice/{{ externalInvoice.id }}\"> {{ externalInvoice.invoiceNumber }} </a>\r\n                     from {{ externalVendor.name }} \r\n                     to <a routerLink=\"/clienttrack/{{ endClient.id }}\"> {{ endClient.name }} </a> \r\n                     for {{ extCurSymbol }} {{ externalInvoice.amount }}\r\n              </span>\r\n            \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\" ponumber\">\r\n          <div *ngIf=\"selectedPo\" class=\"text-muted\">PO # {{ selectedPo.poNumber }}</div>\r\n\r\n          <div *ngIf=\"selectedPo\" class=\"selectiondescription text-muted \" id=\"PODescription\">\r\n            {{ selectedPo.description }},{{ selectedPo.poDate | date: 'dd MMM yyyy' }}\r\n            {{ selectedPo.tandMBillRate > 10 ? ',' + curSymbol + ' ' + selectedPo.tandMBillRate + '/hr' : '' }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"t4group project\">\r\n          <label class=\"t1elem\">Project </label>\r\n          <div *ngIf=\"singleProject\" class=\"t2elem selection\">{{ selectedProject!.projectCode }}</div>\r\n          <select\r\n            *ngIf=\"!singleProject\"\r\n            name=\"projectselection\"\r\n            class=\"selection t2elem\"\r\n            pattern=\"[1-9][0-9]*\"\r\n            required\r\n            [(ngModel)]=\"invoice.projectId\"\r\n            (ngModelChange)=\"onProjectSelected()\"\r\n          >\r\n            <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{ project.projectCode }}</option>\r\n          </select>\r\n\r\n          <div *ngIf=\"selectedProject\" class=\"selectiondescription text-muted t4elem\" id=\"projectDescription\">\r\n            {{ selectedProject.name }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"t4group invoicedatearea\">\r\n          <label class=\"t1elem dateLabel\"> Invoice Date</label>\r\n          <input\r\n            class=\"t2elem date\"\r\n            required\r\n            type=\"date\"\r\n            name=\"invoiceDate\"\r\n            [ngModel]=\"invoice.invoiceDate | date: 'yyyy-MM-dd'\"\r\n            (ngModelChange)=\"invoice.invoiceDate = $event\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"t4group invoicenumber\">\r\n          <label class=\"t1elem\"> Invoice Number</label>\r\n          <input\r\n            class=\"t2elem\"\r\n            (focus)=\"OnFocusInvoiceNumber()\"\r\n            required\r\n            type=\"text\"\r\n            name=\"invoiceNumber\"\r\n            [(ngModel)]=\"invoice.invoiceNumber\"\r\n          />\r\n          <span>\r\n            <img\r\n              *ngIf=\"enableRefreshInvoiceNumber\"\r\n              src=\"assets/images/refresh.svg\"\r\n              class=\"icon refreshicon\"\r\n              (click)=\"refreshInvoiceNumberClicked()\"\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"t4group description\">\r\n          <label class=\"t1elem aligncenter\"> Description </label>\r\n          <textarea\r\n            class=\"t2elem smallFont descriptiontextarea\"\r\n            required\r\n            type=\"text\"\r\n            name=\"description\"\r\n            rows=\"1\"\r\n            cols=\"80\"\r\n            maxlength=\"250\"\r\n            [(ngModel)]=\"invoice.description\"\r\n          ></textarea>\r\n          <div *ngIf='showPeriodOfServiceTip'  class='t4elem alignleft showPeriodOfServiceTip  smallFont text-muted' >\r\n                 In the description please include 'Period of service'.\r\n          </div>\r\n\r\n        </div>\r\n\r\n       \r\n\r\n        <!-- pattern is for any decimal value > 0 and with only 2 decimal places at the most [0-9]*(\\.[0-9]{0,2})?   -->\r\n        <div class=\"t4group amount\">\r\n          <label class=\"t1elem\"> Amount </label>\r\n          <span class=\"currency t2elem\" name=\"amount\"\r\n            >{{ curSymbol }}\r\n            <input\r\n              class=\"nobackground\"\r\n              required\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              pattern=\"^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$\"\r\n              name=\"amount\"\r\n              [(ngModel)]=\"invoice.amount\"\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"expensearea t4group\">\r\n          <label class=\"t1elem\"> Expense Invoice </label>\r\n          <input\r\n            class=\"t2elem expenseCheckBox\"\r\n            type=\"checkbox\"\r\n            name=\"expenseInvoice\"\r\n            [ngModel]=\"invoice.isExpenseInvoice ? 1 : 0\"\r\n            (ngModelChange)=\"invoice.isExpenseInvoice = $event ? 1 : 0\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"paymenttermsarea amount t4group\">\r\n          <label class=\"t1elem\"> Payment Terms </label>\r\n          <input\r\n            class=\"t2elem\"\r\n            required\r\n            type=\"number\"\r\n            step=\"1\"\r\n            name=\"paymentterms\"\r\n            pattern=\"^[0-9]{1,3}$\"\r\n            [(ngModel)]=\"invoice.paymentTerms\"\r\n          />\r\n          <div class=\"t4elem text-muted smallFont\">(Days)</div>\r\n        </div>\r\n\r\n       \r\n\r\n        <div class=\"t4group remarks\">\r\n          <label class=\"t1elem smallFont aligncenter\"> Remarks </label>\r\n          <textarea\r\n            class=\"t2elem smallFont\"\r\n            type=\"text\"\r\n            name=\"remarks\"\r\n            rows=\"2\"\r\n            maxlength=\"250\"\r\n            [(ngModel)]=\"invoice.remarks\"\r\n          >\r\n          </textarea>\r\n        </div>\r\n\r\n        <!-- [ngClass]=\"{'table-success': !po.completed, 'table-secondary': po.completed} \" -->\r\n\r\n        <app-attachments class=\"attachments\" [attachmentIntf]=attachmentIntf ></app-attachments>\r\n\r\n        <div class=\"pdflink\">\r\n          <div *ngIf=\"PDFlink\" class=\"t4group\">\r\n            <label class=\"t1elem alignright\"> Invoice <i class=\"material-icons\">picture_as_pdf </i></label>\r\n            <a class=\"t2elem noborder\" href=\"javascript:void(0);\" (click)=\"pdflinkClicked()\"> {{PDFFileName}} </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n       \r\n        <app-projectemail *ngIf='selectedProject && !isInternalCustomer' class='emailcomponent' [project]=selectedProject >   \r\n\r\n        </app-projectemail>\r\n\r\n        <hr />\r\n\r\n        <div *ngIf=\"showReceived\" class=\"isreceivedarea t4group\">\r\n          <label class=\"t1elem\"> Status </label>\r\n          <select class=\"t2elem selection\" name=\"status\" required [(ngModel)]=\"invoicestatus\">\r\n            <option *ngFor=\"let iopt of StatusOptions\" [value]=\"iopt.value\">{{ iopt.key }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"separator\"></div>\r\n\r\n        <div *ngIf=\"received\" class=\"t4group receivedamount\">\r\n          <label class=\"t1elem\"> Received Amount</label>\r\n          <span class=\"currency t2elem\"\r\n            >{{ curSymbol }}\r\n            <input\r\n              class=\"nobackground  recdamount\"\r\n              required\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              name=\"receivedamount\"\r\n              [(ngModel)]=\"invoice.receivedAmount\"\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div *ngIf=\"received && showTDS\" class=\"t4group tds\">\r\n          <label class=\"t1elem\"> TDS </label>\r\n          <span class=\"currency t2elem\"\r\n            >{{ curSymbol }}\r\n            <input\r\n              class=\"nobackground  recdamount\"\r\n              required\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              name=\"tds\"\r\n              [(ngModel)]=\"invoice.tds\"\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div *ngIf=\"received \" class=\"t4group balanceamount\">\r\n          <label class=\"t1elem\"> Balance </label>\r\n          <span *ngIf=\"balanceAmount\" class=\" t2elem \"> \r\n            {{ curSymbol }}<span> </span> {{balanceAmount}}\r\n          </span>\r\n          <span *ngIf=\"!balanceAmount\" class=\" t2elem \">\r\n              __\r\n          </span>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"received\" class=\"t4group bankcharges\">\r\n          <label class=\"t1elem\"> Bank Charges</label>\r\n          <span class=\"currency t2elem\"\r\n            >{{ curSymbol }}\r\n            <input\r\n              class=\"nobackground  recdamount\"\r\n              required\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              name=\"bankcharges\"\r\n              (focus)=\"OnBankChargesFocus()\"\r\n              [(ngModel)]=\"invoice.bankCharges\"\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div *ngIf=\"received\" class=\"t4group recddatearea\">\r\n          <label class=\"t1elem \"> Received date </label>\r\n          <input\r\n            class=\"t2elem recddate\"\r\n            type=\"date\"\r\n            name=\"receivedDate\"\r\n            [ngModel]=\"invoice.receivedDate | date: 'yyyy-MM-dd'\"\r\n            (ngModelChange)=\"invoice.receivedDate = $event\"\r\n          />\r\n        </div>\r\n\r\n        <div *ngIf=\"received\" class=\"t4group banksummary\">\r\n          <label class=\"t1elem\"> Bank transaction summary</label>\r\n          <textarea\r\n            class=\"t2elem smallFont\"\r\n            required\r\n            type=\"text\"\r\n            name=\"banktransaction\"\r\n            rows=\"1\"\r\n            cols=\"80\"\r\n            maxlength=\"250\"\r\n            [(ngModel)]=\"invoice.bankTransaction\"\r\n          ></textarea>\r\n        </div>\r\n\r\n\r\n\r\n        <div  class=\"t4group softexNumber\">\r\n          <label class=\"t1elem\"> Softex Number</label>\r\n          <input class=\"t2elem\"  type=\"text\" name=\"softexNumber\"\r\n            [(ngModel)]=\"invoice.softexNumber\" />\r\n        </div>\r\n\r\n        <div class=\"t4group ebrcNumber\">\r\n          <label class=\"t1elem\"> eBRC Number</label>\r\n          <input class=\"t2elem\"  type=\"text\" name=\"ebrcNumber\"\r\n            [(ngModel)]=\"invoice.ebrcNumber\" />\r\n        </div>\r\n\r\n      <div *ngIf=\"successMessage\" class=\"Success focus-in-expand message\">{{ successMessage }}</div>\r\n      <div *ngIf=\"errorMessage\" class=\"Errors focus-in-expand message\">{{ errorMessage }}</div>\r\n\r\n      \r\n      </div>\r\n    </fieldset>\r\n  </form>\r\n\r\n  <div class=\"  submitbutton\">\r\n    <button class=\"btn btn-success\" (click)=\"onSubmit()\" [disabled]=\"!viewMode && !invoiceForm.form.valid\">\r\n      {{ buttonTitle }}\r\n    </button>\r\n  </div>\r\n  \r\n  <div *ngIf=\"showInternalInvoiceEdit\" class=\"editinternalinvoice \">\r\n    <button class=\"btn btn-success\" (click)=\"editInternalInvoice()\" [disabled]=\"!invoiceForm.form.valid\">\r\n      {{ InternalInvoiceEditTitle }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Utils } from '../utils/utils';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\n\r\n\r\n@Component({\r\n    selector: 'app-clientinvoice',\r\n    templateUrl: './clientinvoice.component.html',\r\n    styleUrls: ['./clientinvoice.component.scss'],\r\n})\r\nexport class ClientInvoiceComponent implements OnInit {\r\n    @Input()\r\n    inview: InvoiceViewObj | undefined;\r\n    invoiceNumber = 'Invoice';\r\n    invoiceId = 0;\r\n    invoiceDate = 'Dated';\r\n    projectCode = 'Project';\r\n    description = 'Description';\r\n    invoiceAmount = 'Amount';\r\n    received = 'Received';\r\n    bankcharges = 'Bank Charges';\r\n    status = 'Status';\r\n    projectId = 0;\r\n    header = false;\r\n    constructor() {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        if (!this.inview) {\r\n            this.header = true;\r\n            return;\r\n        }\r\n\r\n        const cursymbol = this.inview.curSymbol;\r\n        const amtstr = (amt: number) => Utils.getAmountStr(cursymbol, amt);\r\n\r\n        this.invoiceNumber = this.inview.invoice.invoiceNumber;\r\n        this.invoiceId = this.inview.invoice.id;\r\n        this.invoiceDate = Utils.getDateStr(this.inview.invoice.invoiceDate);\r\n        this.projectCode = this.inview.projectCode;\r\n        this.description = this.inview.invoice.description;\r\n        this.invoiceAmount = amtstr(this.inview.invoice.amount);\r\n        this.received =  amtstr(this.inview.invoice.receivedAmount);\r\n        this.bankcharges =  amtstr(this.inview.invoice.bankCharges);\r\n        this.projectId = this.inview.invoice.projectId;\r\n        this.status = this.inview.status;\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class='inview' [ngClass]=\"{'header text-secondary': header}\">\r\n\r\n    <div class=\"invoicenumber\">\r\n        <a *ngIf='!header' routerLink=\"/invoice/{{invoiceId}}\">{{invoiceNumber}} </a>\r\n        <div *ngIf='header'>{{invoiceNumber}}</div>\r\n    </div>\r\n    <div class=\"invoicedate\"> {{invoiceDate }}</div>\r\n    <div class=\"projectcode\">\r\n        <a *ngIf='!header' routerLink=\"/project/{{projectId}}\">{{projectCode}} </a>\r\n        <div *ngIf='header'>{{projectCode}}</div>\r\n    </div>\r\n\r\n    <div class=\"description\">{{description}}</div>\r\n    <div class=\"amount\"   > {{invoiceAmount}}  </div>\r\n    <div class=\"received\"  > {{received}}   </div>\r\n    <div class=\"bankcharges\"   > {{bankcharges}} </div>\r\n    <div class=\"status\" [ngClass]=\"{'overdue': status==='Overdue' }\"> {{status }}\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DataService } from \"../data/data.service\";\nimport { UserService } from \"../data/user.service\";\nimport { SupplierOrderBase } from \"./supplierOrderBase\";\nimport { Location } from \"@angular/common\";\n\n@Component({\n  templateUrl: \"./supplierOrderForm.component.html\",\n  styleUrls: [\"./supplierOrderForm.component.scss\"],\n})\nexport class SupplierEditOrderComponent\n  extends SupplierOrderBase\n  implements OnInit\n{\n  isSaving = false;\n  get buttonTitle() {\n    return this.viewMode\n      ? \"Modify this Purchase Order\"\n      : this.isSaving\n      ? \"Saving...\"\n      : \"Save changes\";\n  }\n  get formTitle() {\n    return this.viewMode ? \"Purchase Order\" : \"Modify Purchase Order\";\n  }\n\n  constructor(\n    data: DataService,\n    private route: ActivatedRoute,\n    protected router: Router,\n    protected user: UserService,\n    protected location: Location\n  ) {\n    super(data, router, user, location);\n  }\n\n  ngOnInit(): void {\n    const idstr = this.route.snapshot.paramMap.get(\"id\");\n    const id = idstr ? +idstr : 0;\n    this.showForm = false;\n    this.successMessage = \"Fetching...\";\n    this.data.getSupplierPurchaseOrder(id).subscribe(\n      (su) => {\n        this.spo = su;\n      },\n      (err) => {\n        console.log(err);\n        this.setError(\"Error : Could not locate PO :\", err);\n      }\n    );\n  }\n\n  // initialize() {\n  //   // check if this is an internal PO or not first\n  //   return this.data.getEndPOforInternalPO(this.po.id).subscribe((poid) => {\n  //     const externalPOId = poid;\n  //     if (externalPOId > 0) {\n  //       // this is an internal po - use orderInternalEdit component to edit this\n  //       this.successMessage = \"\";\n  //       this.router.navigateByUrl(\"/editinternalpo/\" + externalPOId);\n  //       return;\n  //     }\n  //     this.checkInternalPOEdit().then(() => {\n  //       this.data.getClient(this.po.clientId).then((cl) => {\n  //         this.clientName = cl.name;\n  //         this.updateFileblob(() => {\n  //           this.showClientSelection = false;\n  //           this.showIsCompleted = true;\n  //           this.viewMode = true;\n  //           this.successMessage = \"\";\n  //           this.setupAttachments(this.po.id);\n  //           this.showForm = true;\n  //         });\n  //       });\n  //     });\n  //   });\n  // }\n\n  onSubmit() {\n    if (this.viewMode) {\n      this.viewMode = undefined;\n      return;\n    }\n    this.successMessage = \"\";\n    this.errorMessage = \"\";\n    this.spo.completed = this.spo.completed ? 1 : 0;\n    console.log(\n      \"Updating PO\" + this.spo.supplierId,\n      this.spo.amount,\n      this.spo.poIssueDate,\n      this.spo.currencyId,\n      this.spo.description,\n      this.spo.completed,\n      \"***\"\n    );\n    this.isSaving = true;\n    this.data.updateSupplierPurchaseOrder(this.spo).subscribe(\n      async (c) => {\n        console.log(c);\n        this.upLoadSPOFile();\n        this.fileblob = await this.data\n          .getFileblobForSPO(this.spo.id)\n          .toPromise();\n        this.successMessage = \"Updated PO \" + this.spo.poNumber;\n        this.isSaving = false;\n        this.goToCurrentSPO(this.spo.id);\n      },\n      (err) => {\n        console.log(err);\n        this.setError(\"Could not update PO: Error: \", err);\n      }\n    );\n  }\n}\n","<div class=\"pageTitle focus-in-expand\">{{formTitle}}\n</div>\n\n<div class=' focus-in-expand'>\n    \n    <form  *ngIf=\"showForm\" class='gridcontainer' autocomplete=\"off\" #spoForm=\"ngForm\">\n\n    <fieldset class='fieldsetgroup'  [attr.disabled]=\"viewMode ? '' : null\"  >\n    <div class='spoform'>\n      <div class='supplierNamegroup'> \n                <div class='lead text-primary'><a routerLink=\"/suppliertrack/{{spo.supplierId}}\"> {{supplierName}} </a></div>\n      </div>\n\n        \n        <div class=\"ponumbergroup t4group\">\n            <label  class='t1elem'  for=\"spoNumber\"> PO Number</label>\n            <input class=\"t2elem\"   required type=\"text\" name=\"spoNumber\" id=\"spoNumber\" [(ngModel)]=\"spo.poNumber\" >\n        </div>\n       \n\n         \n        <div class=\"podategroup t4group\">\n                <label  class='t1elem formLabel' for=\"spoDate\"> PO Issue Date</label>\n                <input class=\"t2elem\" required type=\"date\" name=\"spoDate\" id=\"spoDate\" \n                            [ngModel]=\"spo.poIssueDate |  date:'yyyy-MM-dd' \" (ngModelChange)=\"spo.poIssueDate = $event\" >\n        </div>\n\n\n        <div class=\"projectcode t4group\">\n            <label  class='t1elem'  for=\"projectcode\"> Project Code</label>\n            <input class=\"t2elem\"   required type=\"text\" name=\"projectcode\" id=\"projectcode\" [(ngModel)]=\"spo.projectCode\" >\n        </div>\n\n        <div class=\"projectmanager t4group\">\n            <label  class='t1elem'  for=\"projectmanager\"> Project Manager</label>\n            <input class=\"t2elem\"   required type=\"text\" name=\"projectmanager\" id=\"projectmanager\" [(ngModel)]=\"spo.projectManager\" >\n        </div>\n       \n        <div class=\"mantisid t4group\">\n            <label  class='t1elem'  for=\"mantisid\"> Mantis ID</label>\n            <input class=\"t2elem\"   required type=\"text\" name=\"mantisid\" id=\"mantisid\" [(ngModel)]=\"spo.mantisId\" >\n        </div>\n\n    \n        <div class=\"descriptiongroup t4group\">\n            <label class='t1elem aligncenter'  for=\"description\"> Description</label>\n            <textarea class=\"t2elem description\" required type=\"text\" name=\"description\" \n                    rows=\"2\" cols=\"80\" maxlength=\"250\" [(ngModel)]=\"spo.description\"></textarea>\n        </div>\n        \n            <div class=\"currencygroup t4group\">\n                <label  class='t1elem'  for=\"currency\"> Currency</label>\n                <select class=\"t2elem\" name=\"currency\" #currency=\"ngModel\" \n                        pattern=\"[1-9][0-9]*\"\n                        id=\"currency\" required [(ngModel)]=\"spo.currencyId\" >\n                    <option *ngFor=\"let currency of currencies\" [value]=\"currency.id\">{{currency.name}}</option>\n                  </select>\n            </div>\n\n            <div class=\"amountgroup t4group\">\n                <label class='t1elem'  for=\"amount\"> Amount {{currencyName}}</label>\n                <input class=\"t2elem\" required type=\"number\" step=\"0.01\"   \n                        pattern=\"^\\s*(?=.*[0-9])\\d*(?:\\.\\d{1,2})?\\s*$\"\n                        name=\"amount\" id=\"amount\" [(ngModel)]=\"spo.amount\" >\n            </div>\n        \n\n       \n\n       \n            <div class=\"remarksgroup t4group\">\n                <label  class='t1elem aligncenter ' for=\"remarks\" > Remarks </label>\n                        <textarea class=\"t2elem remarks\"   type=\"text\" \n                                name=\"remarks\" rows=\"2\"  cols=\"80\" maxlength=\"250\" \n                                [(ngModel)]=\"spo.remarks\">\n                        </textarea>\n            </div>\n        \n    \n<!-- <a  *ngIf='POFileLink' target=\"_self\" href=\"{{POFileLink}}\" download=\"{{POFile}}\">   {{POFile}} </a> -->\n       \n                <div *ngIf='POFile' class=\"pofilegroup\">\n                            <div class='text-muted'>PO file \n                                <a *ngIf='POFileLink'  href=\"javascript:void(0);\"\n                                     (click)=\"downloadSPOFileLinkClicked()\">{{POFile}}</a>\n\n                            </div>\n                </div>\n                <div *ngIf='showUploadPOFile && spoFileToBeUploaded && !POFile' class=\"pofilegroup\">\n                        <div class='text-muted'>PO file \n                            <span>{{spoFileToBeUploaded.name}}</span>\n                        </div>\n                </div>\n                <div *ngIf='showUploadPOFile && !spoFileToBeUploaded && !POFile' class=\"pofilegroup\">\n                        <div class='align-right error-color'>  \n                            <span>Original PO file to be uploaded</span>\n                        </div>\n                </div>\n\n                <div *ngIf='showUploadPOFile'   class=\"uploadfilegroup \">\n                        <button  class=\"uploadfilegroup  btn btn-primary btn-sm\" onclick=\"document.getElementById('uploadfileInput').click()\" >\n                            {{POFile ? 'Change PO file' : 'PO file'}} \n                        </button>\n\n                        <input class=\"t2elem\" #file id='uploadfileInput' type=\"file\" (change)=\"fileUploadChanged(file.files)\"  /> \n                       \n                </div>\n       \n                <app-attachments class=\"attachments\" [attachmentIntf]=\"attachmentIntf\"></app-attachments>\n\n        \n                <div *ngIf=\"showIsCompleted\" class=\"iscompletedgroup t4group\">\n                    <input class=\"t2elem Checkbox\"  type=\"checkbox\" \n                            name=\"iscompleted\" id=\"iscompleted\" [(ngModel)]=\"spo.completed\" >\n                    <span  class='t1elem small' for=\"iscompleted\"> Is Completed </span>\n                </div>\n       \n      \n    </div>\n    </fieldset>\n\n   \n        <div *ngIf=\"canModifyPO\" class=\"submitbuttongroup form-group\">\n                <button type=\"submit\" \n                 (click)=\"onSubmit()\"\n                  class=\"btn btn-success\" [disabled]=\"!spoForm.form.valid\">{{buttonTitle}}</button>\n              \n        </div>\n         \n         \n        \n   \n    </form>\n    <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\n    <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\n\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { DataService,  Client, UserData } from '../data/data.service';\r\nimport { UserService } from '../data/user.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-clientlist',\r\n    templateUrl: './clientList.component.html',\r\n    styleUrls: ['./clientList.component.scss'],\r\n})\r\nexport class ClientListComponent {\r\n    clientList: Client[] = [];\r\n    fullClientList: Client[] = [];\r\n    serverError = false;\r\n    filterTerm = '';\r\n    userData = new UserData();\r\n    get canAddNewClients() { return this.userData.clientPerm.add ? true : false; }\r\n    get canUpdateClients() { return this.userData.clientPerm.update ? true : false; }\r\n\r\n    constructor(data: DataService, private user: UserService) {\r\n        user.currentUser.subscribe(\r\n            ud => this.userData = ud,\r\n            err => {\r\n                console.log(err);\r\n                this.serverError = true;\r\n            }\r\n        );\r\n\r\n        data.getListOfClientsObs().subscribe(\r\n            res => {\r\n                this.fullClientList = res.sort( (a, b) =>  a.name.toUpperCase() >= b.name.toUpperCase() ? 1 : -1 );\r\n                this.updateClientList();\r\n            },\r\n            err => {\r\n            console.log('Error ' + err);\r\n            this.serverError = true;\r\n        });\r\n    }\r\n\r\n    updateClientList() {\r\n        this.clientList = this.fullClientList.filter(this.filterForSearchTerm());\r\n    }\r\n\r\n    filterTermChanged(newSrchTerm: string) {\r\n        this.filterTerm = newSrchTerm;\r\n        this.updateClientList();\r\n    }\r\n\r\n    filterForSearchTerm(): (cl: Client) => boolean {\r\n        if (this.filterTerm === '' || this.filterTerm.length < 2 ) { return (cl: Client) => true; }\r\n        const srchTarget = (cl: Client) => [cl.name, cl.customerCode, cl.country].join(' ');\r\n        const regEx = new RegExp(this.filterTerm, 'i');\r\n        return (cl: Client) => regEx.test(srchTarget(cl));\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\n<div class='gridcontainer focus-in-expand' >\r\n    \r\n     <div class=\"pageTitle\"> Clients </div>\r\n       \r\n    <div *ngIf=\"serverError\" class=\"Errors message\"> Connection Errors. </div>\r\n   \r\n  \r\n    <div class='filter'>\r\n        <span class='text-secondary small'>Filter \r\n        <input class='filterInput'  type=\"text\" [ngModel]=\"filterTerm\" \r\n                            (ngModelChange)=\"filterTermChanged($event)\" /></span>\r\n    </div>\r\n\r\n    <div *ngIf=\"canAddNewClients\" class='newclient'>\r\n        <button type=\"button\" class=\"tbisbutton\"  routerLink='/newclient'>\r\n            New Client </button>\r\n    </div>\r\n   \r\n\r\n    <div class='clientlist' >\r\n        <div *ngFor=\"let client of clientList\">\r\n            <app-client [client]=\"client\"  [canUpdate]=\"canUpdateClients\"  > </app-client>\r\n        </div>\r\n    </div>\r\n       \r\n\r\n    \r\n</div>","import { Component } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SupplierContactBase } from './supplierContactBase';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n    templateUrl: './supplierContactsForm.component.html',\r\n    styleUrls: ['./supplierContactsForm.component.scss']\r\n})\r\nexport class SupplierContactEditComponent extends SupplierContactBase  {\r\n\r\n    constructor(protected data: DataService, protected router: Router,\r\n        protected route: ActivatedRoute, protected location: Location) {\r\n            super(data, router, route, location);\r\n    }\r\n    get buttonTitle() { return 'Save Contact'; }\r\n    get formTitle() { return 'Modify Contact'; }\r\n\r\n    // for new contact the id passed is the supplierId\r\n    // for edit contact the id passed is the supplierContactId\r\n    async initialize(contactId: number) {\r\n            this.data.getSupplierContact(contactId).subscribe( con => {\r\n                this.contact = con;\r\n                this.data.getSupplier(this.contact.supplierId).then( sp => this.supplier = sp);\r\n            },\r\n            err => {\r\n                this.errorMessage = 'Error: Unable to get contact info' + err;\r\n                 this.resetForm();\r\n             }\r\n            );\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Updating Contact' + this.contact.name);\r\n        this.data.updateSupplierContact(this.contact)\r\n            .subscribe(s => { console.log(s); this.successMessage = 'saved Contact ' + this.contact.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError('Could not save Contact: Error: ', err); });\r\n    }\r\n}\r\n\r\n","\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { POViewInterface, POViewWithBalance } from '../data/POViewInterface';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { POStatus } from '../orderbook/order.component';\r\nimport { DataService } from '../data/data.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-clientpoboth',\r\n    templateUrl: './clientpoboth.component.html',\r\n    styleUrls: ['./clientpoboth.component.scss']\r\n})\r\nexport class ClientpobothComponent implements OnInit {\r\n    @Input()\r\n    pointf = new ClientPOIntf();\r\n\r\n\r\n    intPoViewWithBalance!: POViewWithBalance\r\n    extPoViewWithBalance! : POViewWithBalance\r\n    showclienttab = false;\r\n    showinttab = false;\r\n\r\n    clientpopresent = false;\r\n    internalpopresent = false;\r\n    clientabactive = false;\r\n    internaltablactive = false;\r\n\r\n    clientPOBadge = false;\r\n    clientPOWarn = false;\r\n    internalPOBadge = false;\r\n    internalPOWarn = false;\r\n\r\n\r\n    constructor(private data: DataService) {\r\n        \r\n    }\r\n    async ngOnInit() {\r\n\r\n        this.clientpopresent = this.pointf.extOrder  ? true : false;\r\n        this.internalpopresent = this.pointf.intOrder ? true : false;\r\n\r\n        if (this.pointf.extOrder) {\r\n            this.extPoViewWithBalance = { ...this.pointf.extOrder, balanceInUSD : 0.0 }; // balance in USD is not used in client details\r\n        }\r\n        if (this.pointf.intOrder) {\r\n            this.intPoViewWithBalance = {...this.pointf.intOrder, balanceInUSD : 0.0} // balance in USD is not used in client details\r\n        }\r\n\r\n       \r\n        // show the tabs only if both the POs are present\r\n        this.showclienttab = this.clientpopresent && this.internalpopresent;\r\n        this.showinttab = this.showclienttab;\r\n\r\n        if (this.pointf.extOrder) {\r\n            this.clienttabclicked();\r\n        } else if (this.pointf.intOrder) {\r\n            this.internaltabclicked();\r\n        }\r\n    }\r\n    clienttabclicked() {\r\n        if (this.pointf.extOrder) {\r\n            this.clientabactive = true;\r\n            this.internaltablactive = false;\r\n        }\r\n    }\r\n    internaltabclicked() {\r\n        if (this.pointf.intOrder) {\r\n            this.clientabactive = false;\r\n            this.internaltablactive = true;\r\n        }\r\n    }\r\n    badgeValue(status: POStatus) {\r\n        return status === POStatus.FIRST_INVOICE_PENDING\r\n            || status === POStatus.LAST_INVOICE_LONG_AGO\r\n            || status === POStatus.NEGATIVE_BALANCE\r\n            || status === POStatus.NIL_BALANCE\r\n            ;\r\n    }\r\n    badgeWarn(status: POStatus) {\r\n        return status === POStatus.FIRST_INVOICE_PENDING\r\n            || status === POStatus.LAST_INVOICE_LONG_AGO\r\n            ;\r\n    }\r\n    clientPoStatus(status: POStatus) {\r\n        if (this.pointf.extOrder) {\r\n            setInterval(() => { // short delay to avoid the error that expression changed after checking\r\n                this.clientPOBadge = this.badgeValue(status);\r\n                this.clientPOWarn = this.badgeWarn(status);\r\n            }, 500);\r\n        }\r\n    }\r\n    internalPoStatus(status: POStatus) {\r\n        if (this.pointf.intOrder) {\r\n            setInterval(() => { // short delay to avoid the error that expression changed after checking\r\n                this.internalPOBadge = this.badgeValue(status);\r\n                this.internalPOWarn = this.badgeWarn(status);\r\n            }, 500);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ClientPOIntf {\r\n    extOrder: POViewInterface | undefined;\r\n    extInvoiceList: InvoiceViewObj[] = [];\r\n    intOrder: POViewInterface | undefined;\r\n    intInvoiceList: InvoiceViewObj[] = [];\r\n\r\n    canCreateInvoice = false;\r\n}\r\n","\r\n<div class='tabcontainer '>\r\n    <div *ngIf=\"showclienttab\" class='clienttab  tabitem' (click)='clienttabclicked()' \r\n                        [ngClass]=\"{'active': clientabactive}\" >Client\r\n                    <i   \r\n                         [ngClass]=\"{'warn': clientPOWarn, 'badge': clientPOBadge}\"\r\n                        class=\"material-icons\">\r\n                        error_outline\r\n\r\n                    </i>\r\n                    </div>\r\n    <div *ngIf=\"showinttab\"  class='internaltab  tabitem' (click)='internaltabclicked()'  \r\n                        [ngClass]=\"{'active': internaltablactive}\" >Internal\r\n                        <i  \r\n                            [ngClass]=\"{'warn': internalPOWarn, 'badge': internalPOBadge}\"\r\n                            class=\"material-icons\">\r\n                            error_outline\r\n\r\n                        </i>\r\n                    </div> \r\n   \r\n    <app-clientpo *ngIf=\"clientpopresent\" [ngClass]=\"{'active': clientabactive}\" class='po' \r\n            [order]=extPoViewWithBalance\r\n            [invoiceList]=pointf.extInvoiceList\r\n            [canCreateInvoice]=pointf.canCreateInvoice\r\n            (statusValueEvent)=clientPoStatus($event)  >\r\n    </app-clientpo>\r\n\r\n    <app-clientpo *ngIf=\"internalpopresent\"  [ngClass]=\"{'active': internaltablactive}\" class='po'\r\n            [order]=intPoViewWithBalance\r\n            [invoiceList]=pointf.intInvoiceList\r\n            [canCreateInvoice]=pointf.canCreateInvoice   \r\n            (statusValueEvent)=internalPoStatus($event)  >\r\n    </app-clientpo>\r\n</div>\r\n ","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Utils } from './utils';\r\n@Pipe({ name: 'dateStr' })\r\nexport class DateStrPipe implements PipeTransform {\r\n    transform(dt: Date): string {\r\n        return Utils.getDateStr(dt);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, PurchaseOrder } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { OrderInternalNewComponent } from './orderInternalNew.component';\r\nimport { UserService } from '../data/user.service';\r\n\r\n@Component({\r\n    selector: 'app-orderinternaledit',\r\n    templateUrl: './orderForm.component.html',\r\n    styleUrls: ['./orderForm.component.scss']\r\n})\r\nexport class OrderInternalEditComponent extends OrderInternalNewComponent implements OnInit {\r\n\r\n    externalPOId = 0;\r\n\r\n    isUpdating = false;\r\n    \r\n    get formTitle() { return 'Internal Purchase Order'; }\r\n\r\n\r\n    updateButtonTitle()\r\n    {\r\n        this.buttonTitle =\r\n            this.viewMode ? 'Edit this Purchase Order'\r\n            : this.isUpdating ? 'Updating ...'\r\n            : 'Update this Purchase Order';\r\n    }\r\n\r\n    constructor(data: DataService, protected router: Router, protected route: ActivatedRoute,\r\n        protected user: UserService,\r\n        protected location: Location) {\r\n        super(data, router, route, user, location);\r\n        this.updateButtonTitle();\r\n    }\r\n\r\n    // the id is the ID of the external PO OR the internal PO\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        this.externalPOId = idstr ? +idstr : 0; // assume it is external PO for now\r\n      \r\n        this.initialize();\r\n    }\r\n\r\n    getThePOs() {\r\n        this.setupAttachments(this.InternalPOId);\r\n        this.data.getPurchaseOrder(this.externalPOId).subscribe(\r\n            extpo => {\r\n                this.externalPO = extpo;\r\n                this.getExternalPODetails().then(\r\n                    () => {\r\n                        this.data.getPurchaseOrder(this.InternalPOId)\r\n                            .subscribe(\r\n                                cl => {\r\n                                    this.po = cl;\r\n                                    this.updating = true;\r\n                                    this.showIsCompleted = true; // internal PO can be closed separately from the end client PO\r\n                                    this.viewMode = true;\r\n                                    this.showUploadPOFile = false; // for internal PO form do not show upload PO prompt\r\n                                    this.updateButtonTitle();\r\n                                    this.showClientSelection = false;\r\n                                    this.updateFileblob();\r\n                                    this.data.getClient(this.po.clientId).then(cl => this.clientName = cl.name);\r\n                                    this.viewMode = true;\r\n                                    this.updateButtonTitle();\r\n                                }\r\n                                ,\r\n                                err => { console.log(err); this.setError('Error : Could not locate internal PO :', err); });\r\n                    }\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    // the id could be of the external PO or the internal PO\r\n    initialize() {\r\n        this.data.getInternalPOforEndPO(this.externalPOId).subscribe(\r\n            internal => {\r\n                if (internal <= 0) {  // id given to us is probably for the internal PO.\r\n                    internal = this.externalPOId;\r\n                    this.data.getEndPOforInternalPO(internal).subscribe(\r\n                        external => {\r\n                            if (external <= 0) {\r\n                                console.log('Error: Could not locate internal of external po for ' + this.externalPOId);\r\n                                this.errorMessage = ' Could not locate internal PO';\r\n                                this.resetForm();\r\n                                return;\r\n                            }\r\n                            this.InternalPOId = internal;\r\n                            this.externalPOId = external;\r\n                            this.getThePOs();\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.InternalPOId = internal;\r\n                    this.getThePOs();\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    onSubmit() {\r\n        if (this.viewMode) {\r\n            this.viewMode = undefined;\r\n            this.updateButtonTitle();\r\n            return;\r\n        }\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.po.isFixedPrice = this.po.isFixedPrice ? 1 : 0;\r\n        this.po.completed = this.po.completed ? 1 : 0;\r\n        console.log('Update internal PO' + this.po.clientId, this.po.amount, this.po.poDate, this.po.currencyId, this.po.description,\r\n            this.po.isFixedPrice, this.po.tandMBillRate, this.po.completed, '***');\r\n        try {\r\n            this.isUpdating = true;\r\n            this.updateButtonTitle();\r\n            this.data.updatePurchaseOrder(this.po)\r\n                .subscribe(p => {\r\n                    this.upLoadPOFile();\r\n                    this.successMessage = 'Internal PO updated';\r\n                    this.goToCurrentPO(this.po.id);\r\n                    this.isUpdating = false;\r\n                    this.updateButtonTitle();\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setError('Could not update PO: Error: ', e);\r\n            this.resetForm();\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n","<div class=\"pageTitle focus-in-expand\">{{formTitle}}\r\n    <span *ngIf='InternalPOEdit'>\r\n        <img src=\"assets/images/India_tricolor_icon.svg\" class=\"rounded internalPOImg\">\r\n    </span>\r\n</div>\r\n\r\n<div class=' focus-in-expand'>\r\n    \r\n    <form  *ngIf=\"showForm\" class='gridcontainer' autocomplete=\"off\" #poForm=\"ngForm\">\r\n\r\n    <fieldset class='fieldsetgroup'  [attr.disabled]=\"viewMode ? '' : null\"  >\r\n    <div class='poform'>\r\n      <div class='clientNamegroup'> \r\n                <div class='lead text-primary'><a routerLink=\"/clienttrack/{{po.clientId}}\"> {{clientName}} </a></div>\r\n      </div>\r\n\r\n        <div *ngIf='InternalPOEdit' class = 'externalPOInfogroup'>\r\n                <div class=\"small text-secondary\"> \r\n                    <span> original PO from \r\n                        <a routerLink=\"/clienttrack/{{endClient.id}}\"> {{endClient.name}} </a>\r\n                    </span>\r\n                    <span> with PO <a routerLink=\"/order/{{externalPO.id}}\" > {{externalPO.poNumber}} </a></span>\r\n                    <span>for {{extCurSymbol}} {{externalPO.amount}} </span>\r\n                    <span> on {{extVendor.name}} </span>\r\n                </div>\r\n                \r\n        </div>\r\n\r\n   \r\n\r\n        \r\n        <div class=\"ponumbergroup t4group\">\r\n            <label  class='t1elem'  for=\"poNumber\"> PO Number</label>\r\n            <input class=\"t2elem\"   required type=\"text\" name=\"poNumber\" id=\"poNumber\" [(ngModel)]=\"po.poNumber\" >\r\n        </div>\r\n       \r\n\r\n         \r\n        <div class=\"podategroup t4group\">\r\n                <label  class='t1elem formLabel' for=\"poDate\"> PO Date</label>\r\n                <input class=\"t2elem\" required type=\"date\" name=\"poDate\" id=\"poDate\" \r\n                            [ngModel]=\"po.poDate |  date:'yyyy-MM-dd' \" (ngModelChange)=\"po.poDate = $event\" >\r\n        </div>\r\n       \r\n\r\n    \r\n        <div class=\"descriptiongroup t4group\">\r\n            <label class='t1elem aligncenter'  for=\"description\"> Description</label>\r\n            <textarea class=\"t2elem description\" required type=\"text\" name=\"description\" \r\n                    rows=\"2\" cols=\"80\" maxlength=\"250\" [(ngModel)]=\"po.description\"></textarea>\r\n        </div>\r\n        \r\n            <div class=\"currencygroup t4group\">\r\n                <label  class='t1elem'  for=\"currency\"> Currency</label>\r\n                <select class=\"t2elem\" name=\"currency\" #currency=\"ngModel\" \r\n                        pattern=\"[1-9][0-9]*\"\r\n                        id=\"currency\" required [(ngModel)]=\"po.currencyId\" >\r\n                    <option *ngFor=\"let currency of currencies\" [value]=\"currency.id\">{{currency.name}}</option>\r\n                  </select>\r\n            </div>\r\n\r\n            <div class=\"amountgroup t4group\">\r\n                <label class='t1elem'  for=\"amount\"> Amount {{currencyName}}</label>\r\n                <input class=\"t2elem\" required type=\"number\" step=\"0.01\"   \r\n                        pattern=\"^\\s*(?=.*[0-9])\\d*(?:\\.\\d{1,2})?\\s*$\"\r\n                        name=\"amount\" id=\"amount\" [(ngModel)]=\"po.amount\" >\r\n            </div>\r\n        \r\n            <div class=\"expenseamountgroup t4group\">\r\n                    <label class='t1elem'  for=\"expense\"> Expense Budget {{currencyName}}</label>\r\n                    <input class=\"t2elem\" required type=\"number\" step=\"0.01\"   name=\"expense\" id=\"expense\" [(ngModel)]=\"po.expenseAmount\" >\r\n                    <span class='t4elem formLabel' > ( Expense budget is in addition to the PO amount. )</span>\r\n                </div>\r\n\r\n         \r\n            <div class=\"fixedpricegroup t4group\">\r\n                <input class=\"t2elem Checkbox mt-2\"  type=\"checkbox\" \r\n                            name=\"isfixedprice\" id=\"isfixedprice\" [(ngModel)]=\"po.isFixedPrice\" >\r\n                <label  class='t1elem'> Is Fixed Price </label>\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"!po.isFixedPrice\" class=\"tandmrategroup t4group\">\r\n                <label  class='t1elem' for=\"tandmrate\"> T&M Rate {{currencyName}}/hour</label>\r\n                <input class=\"t2elem \"  required type=\"number\" step=\"0.01\"   name=\"tandmrate\" id=\"tandmrate\" [(ngModel)]=\"po.tandMBillRate\" >\r\n            </div>\r\n        \r\n\r\n        \r\n            <div class=\"poplacedongroup t4group\">\r\n                <label class='t1elem'  for=\"vendor\"> PO is placed on </label>\r\n                <select class=\"t2elem\" id=\"vendor\" name=\"vendor\" \r\n                        pattern=\"[1-9][0-9]*\"\r\n                        required [(ngModel)]=\"po.vendorId\" #vendor=\"ngModel\" >\r\n                    <option *ngFor=\"let vendor of vendors\" [value]=\"vendor.id\">{{vendor.name}}</option>\r\n                  </select>\r\n            </div>\r\n\r\n            <div  class=\"paymenttermsgroup t4group\">\r\n                    <label  class='t1elem' for=\"paymentTerms\"> Payment terms in days </label>\r\n                    <input class=\"t2elem text-right\"  type=\"number\" step=\"0.01\"   required\r\n                            pattern=\"^[0-9]{1,3}$\"\r\n                            name=\"paymentTerms\" id=\"paymentTerms\" [(ngModel)]=\"po.paymentTerms\" >\r\n            </div>\r\n       \r\n\r\n       \r\n            <div class=\"remarksgroup t4group\">\r\n                <label  class='t1elem aligncenter ' for=\"remarks\" > Remarks </label>\r\n                        <textarea class=\"t2elem remarks\"   type=\"text\" \r\n                                name=\"remarks\" rows=\"2\"  cols=\"80\" maxlength=\"250\" \r\n                                [(ngModel)]=\"po.remarks\">\r\n                        </textarea>\r\n            </div>\r\n        \r\n    \r\n<!-- <a  *ngIf='POFileLink' target=\"_self\" href=\"{{POFileLink}}\" download=\"{{POFile}}\">   {{POFile}} </a> -->\r\n       \r\n                <div *ngIf='POFile' class=\"pofilegroup\">\r\n                            <div class='text-muted'>PO file \r\n                                <a *ngIf='POFileLink'  href=\"javascript:void(0);\"\r\n                                     (click)=\"downloadPOFileLinkClicked()\">{{POFile}}</a>\r\n\r\n                            </div>\r\n                </div>\r\n                <div *ngIf='showUploadPOFile && poFileToBeUploaded && !POFile' class=\"pofilegroup\">\r\n                        <div class='text-muted'>PO file \r\n                            <span>{{poFileToBeUploaded.name}}</span>\r\n                        </div>\r\n                </div>\r\n                <div *ngIf='showUploadPOFile && !poFileToBeUploaded && !POFile' class=\"pofilegroup\">\r\n                        <div class='align-right error-color'>  \r\n                            <span>Original PO file to be uploaded</span>\r\n                        </div>\r\n                </div>\r\n\r\n                <div *ngIf='showUploadPOFile'   class=\"uploadfilegroup \">\r\n                        <button  class=\"uploadfilegroup  btn btn-primary btn-sm\" onclick=\"document.getElementById('uploadfileInput').click()\" >\r\n                            {{POFile ? 'Change PO file' : 'PO file'}} \r\n                        </button>\r\n\r\n                        <input class=\"t2elem\" #file id='uploadfileInput' type=\"file\" (change)=\"fileUploadChanged(file.files)\"  /> \r\n                       \r\n                </div>\r\n       \r\n                <app-attachments class=\"attachments\" [attachmentIntf]=\"attachmentIntf\"></app-attachments>\r\n\r\n        \r\n                <div *ngIf=\"showIsCompleted\" class=\"iscompletedgroup t4group\">\r\n                    <input class=\"t2elem Checkbox\"  type=\"checkbox\" \r\n                            name=\"iscompleted\" id=\"iscompleted\" [(ngModel)]=\"po.completed\" >\r\n                    <span  class='t1elem small' for=\"iscompleted\"> Is Completed </span>\r\n                </div>\r\n       \r\n      \r\n    </div>\r\n    </fieldset>\r\n\r\n   \r\n        <div *ngIf=\"canModifyPO\" class=\"submitbuttongroup form-group\">\r\n                <button type=\"submit\" \r\n                 (click)=\"onSubmit()\"\r\n                  class=\"btn btn-success\" [disabled]=\"!poForm.form.valid\">{{buttonTitle}}</button>\r\n              \r\n        </div>\r\n         \r\n        <div *ngIf=\"showInternalPOEdit\" class=\"internalpoeditgroup\">\r\n            <button  class=\"btn btn-success\" \r\n            (click)=\"editInternalPO()\"\r\n            [disabled]=\"!poForm.form.valid\">{{InternalPOEditButtonTitle}}</button>\r\n        </div>\r\n         \r\n        \r\n   \r\n    </form>\r\n    <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\r\n    <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n\r\n</div>","export class FinancialYear {\r\n  rawmonths = [\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Q1',\r\n    'Q2',\r\n    'Q3',\r\n    'Q4',\r\n    'FY'\r\n  ];\r\n\r\n\r\n  get startYear() {\r\n    return this.financialYear;\r\n  }\r\n  get endYear() {\r\n    return this.startYear + 1;\r\n  }\r\n\r\n\r\n  constructor(public readonly financialYear: number) {\r\n  }\r\n\r\n  static GetCurrentFinancialYear(): FinancialYear {\r\n    const dt = new Date();\r\n    const yr = dt.getFullYear();\r\n    const mt = dt.getMonth(); // 0 for Jan\r\n    return mt < 3 ? new FinancialYear(yr - 1) : new FinancialYear(yr);\r\n  }\r\n\r\n   NextYear(): FinancialYear {\r\n    return new FinancialYear(this.financialYear + 1);\r\n  }\r\n\r\n  PrevYear(): FinancialYear {\r\n    return new FinancialYear(this.financialYear - 1);\r\n  }\r\n\r\n  toString() {\r\n        return 'FY ' + this.financialYear + '-' + ((this.financialYear + 1) % 2000);\r\n    } // FY 2018-19\r\n\r\n  // calendar month number from FY month index\r\n  // fyMonthIndex = 0 ==> April ==> calendar month 4\r\n  getCalMonthNumber(fyMonthIndex: number): number {\r\n    let mth = fyMonthIndex + 3;\r\n    mth = mth % 12; // wrap around\r\n    return mth + 1; // in 1 based calendar numbering\r\n  }\r\n\r\n  getFyMonthNumber(calMonthNumber: number): number {\r\n    let mth = calMonthNumber - 1; // make it first zero based\r\n    mth = mth - 3;\r\n    if (mth < 0) {\r\n      mth = mth + 12;\r\n    }\r\n    return mth;\r\n  }\r\n  getQuarterRange = (quarterNumber: number, year: number) =>\r\n    quarterNumber < 4 ? this.getCalMonthRange(quarterNumber * 3 + 1, 3, year) : this.getCalMonthRange(1, 3, year + 1)\r\n  // tslint:disable-next-line:semicolon\r\n  getCalMonthRange(startCalMonth: number, countMonths: number, year: number) {\r\n    let rng: MonthYear[] = [];\r\n    for (let mth = startCalMonth; mth < startCalMonth + countMonths; mth++) {\r\n      rng = rng.concat(new MonthYear(mth, year));\r\n    }\r\n    return rng;\r\n  }\r\n\r\n  getFyMonthAndQuarterRangeForFullYear(): MonthYear[] {\r\n    return this.getFyMonthRange(16);\r\n  }\r\n\r\n  getFyMonthRange(fyMonthIndex: number): MonthYear[] {\r\n    const nfinancialYear = this.financialYear;\r\n    if (fyMonthIndex < 9) {\r\n      // apr to dec\r\n      return this.getCalMonthRange(this.getCalMonthNumber(fyMonthIndex), 1, nfinancialYear);\r\n    }\r\n    if (fyMonthIndex < 12) {\r\n      // jan to mar calendar year is + 1\r\n      return this.getCalMonthRange(this.getCalMonthNumber(fyMonthIndex), 1, nfinancialYear + 1);\r\n    }\r\n    if (fyMonthIndex < 17) {\r\n      // q1, q2, q3, q4\r\n      switch (fyMonthIndex) {\r\n        case 12: // Q1\r\n          return this.getQuarterRange(1, nfinancialYear);\r\n        case 13: // Q2\r\n          return this.getQuarterRange(2, nfinancialYear);\r\n        case 14: // Q3\r\n          return this.getQuarterRange(3, nfinancialYear);\r\n        case 15: // Q4\r\n          return this.getQuarterRange(4, nfinancialYear);\r\n        case 16: // Q1 + Q2 + Q3 + Q4\r\n          return this.getQuarterRange(1, nfinancialYear)\r\n            .concat(this.getQuarterRange(2, nfinancialYear))\r\n            .concat(this.getQuarterRange(3, nfinancialYear))\r\n            .concat(this.getQuarterRange(4, nfinancialYear));\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n}\r\n\r\nexport class MonthYear {\r\n  constructor(public month: number, public year: number) {}\r\n}\r\n","import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data/data.service';\nimport { UserData } from '../data/data.service';\nimport { SupplierContact } from '../data/data.service';\nimport { Supplier } from '../data/data.service';\nimport { SPOViewInterface } from '../data/SPOViewInterface';\nimport { UserService } from '../data/user.service';\n\n@Component({\n  selector: 'app-supplier-details',\n  templateUrl: './supplierDetails.component.html',\n  styleUrls: ['./supplierDetails.component.scss'],\n  animations: [\n    trigger('slowAppear', [\n      transition('void => *', [style({ opacity: 0 }), animate('500ms ease-in-out', style({ opacity: 1 }))])\n    ])\n  ]\n})\nexport class SupplierDetailsComponent implements OnInit {\n\n  supplierId = 0;\n  supplier: Supplier | null = null;\n  contactList: SupplierContact[] = [];\n  successMessage = '';\n  errorMessage = '';\n  statusMessage = '';\n  userData = new UserData();\n  initover = false;\n  SPOList: SPOViewInterface[] = [];\n\n  get canCreatePO() {\n    return this.userData.purchaseorderPerm.add > 0 ? true : false;\n  }\n  canCreateInvoiceFn() {\n    return this.userData.invoicePerm.add > 0 ? true : false;\n  }\n\n  get canCreateContact() {\n    return this.userData.contactPerm.add > 0 ? true : false;\n  }\n\n\n  setError(err: string): void {\n    this.errorMessage = err;\n    this.statusMessage = '';\n    this.successMessage = '';\n  }\n\n  constructor(private data: DataService,\n    private user: UserService,\n    private route: ActivatedRoute,\n    private router: Router) { \n      this.user.currentUser.subscribe(ud => (this.userData = ud), err => this.setError(\"Connection Errors\"));\n    }\n\n  ngOnInit(): void {\n    const idstr = this.route.snapshot.paramMap.get('id');\n    this.supplierId = idstr ? +idstr : 0;\n    this.initialize();\n  }\n\n  initialize() {\n    this.initover = false;\n    this.statusMessage = 'Fetching Supplier information';\n    this.data\n      .getSupplier(this.supplierId)\n      .then(su => {\n        this.supplier = su;\n        if (this.supplier.id > 0) {\n          this.statusMessage = 'Fetching purchase order information';\n          this.getPoDetailsForSupplier()\n            .then(() => {\n              this.statusMessage = '';\n              this.initover = true;\n            })\n            .catch(err => this.setError('Connection Errors: '));\n\n          this.data\n            .getListOfContactsForSupplier(this.supplierId)\n            .subscribe(ls => {\n              this.contactList = ls;\n            },\n              err => {\n                this.setError('Connection Errors: ');\n              }\n            );\n        } else {\n          this.statusMessage = '';\n          this.errorMessage = 'Could not fetch client info.';\n        }\n\n      })\n      .catch(err => this.setError('Connection Errors: '));\n  }\n\n  async getPoDetailsForSupplier() {\n    this.SPOList = await this.data.getListOfPurchaseOrdersForSupplier(this.supplierId).toPromise();\n    // const extlist = this.poList.filter(po => !po.isInternalPO); // list of external pos only\n    // const intlist = this.poList.filter(po => po.isInternalPO); // list of internal pos only\n\n    // // associated external po with the internal po if it exists\n    // const comblist = extlist.map(extpo => ({ extpo: extpo, intpo: intlist.find(intpo => intpo.extPOId === extpo.id) }));\n\n    // // list of interna pos that has no associated external pos\n    // const noextpolist = intlist.filter(po => !comblist.find(c => c.intpo ? true : false));\n\n    // // create the ClientPOIntf object\n    // comblist.forEach(item => {\n    //   const bothpoitem = new ClientPOIntf();\n    //   bothpoitem.extOrder = item.extpo;\n    //   bothpoitem.intOrder = item.intpo;\n    //   bothpoitem.canCreateInvoice = this.canCreateInvoice;\n    //   this.bothPOList.push(bothpoitem);\n    //   this.data.getListOfInvoicesForPurchaseOrder(item.extpo.id)\n    //     .subscribe(invlist => bothpoitem.extInvoiceList = invlist);\n    //   if (item.intpo) {\n    //     this.data.getListOfInvoicesForPurchaseOrder(item.intpo.id)\n    //       .subscribe(invlist => bothpoitem.intInvoiceList = invlist);\n    //   }\n    // });\n  }\n\n}\n","<div *ngIf=\"supplier\" class='focus-in-expand'>\n\n    <div class='pageTitle'>{{supplier.name}}</div>\n    <div class='small text-secondary'>{{supplier.location}}</div>\n    <div class='small text-secondary'>Supplier code : {{supplier.supplierCode}}</div>\n    <!-- <div *ngIf=\"canUpdate\" class=\"editIcon small\">\n        <a routerLink=\"/client/{{client.id}}\">\n            <i class=\"material-icons\">edit </i>\n        </a>\n    </div> -->\n\n\n    <div>\n        <app-statusmsg *ngIf=\"statusMessage\" class='ml-4' message=\"{{statusMessage}}\"></app-statusmsg>\n        <div *ngIf=\"successMessage\" class=\"Success hrline\"> {{successMessage}} </div>\n        <div *ngIf=\"errorMessage\" class=\"Errors hrline\"> {{errorMessage}} </div>\n    </div>\n\n    <div *ngIf=\"initover\">\n        <div class='poTitle'>PurchaseOrders</div>\n        <div *ngIf=\"canCreatePO\" class='newpurchaseorderbtn'>\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" routerLink='/supplierneworder/{{supplierId}}'>\n                New Purchase Order </button>\n        </div>\n    </div>\n\n\n\n    <div class='focus-in-expand spocard' *ngFor=\"let spo of SPOList\">\n        <app-supplierpo [sporder]=spo ></app-supplierpo>\n    </div>\n\n\n\n    <div *ngIf=\"initover\">\n        <div class='poTitle'>Contacts</div>\n    </div>\n    <div *ngIf=\"initover\" class=' ml-4'>\n        <div class='col-sm-8' *ngFor=\"let contact of contactList\">\n            <div>\n                <a routerLink=\"/suppliereditcontact/{{contact.id}}\">{{contact.name}}</a>\n                <span>\n                    <small class='ml-2'>{{contact.title}}</small>\n                </span>\n                <span>\n                    <small class='ml-2'>{{contact.email}}</small>\n                </span>\n            </div>\n        </div>\n\n    </div>\n    <div *ngIf=\"initover && canCreateContact\" class=' ml-4'>\n        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" routerLink=\"/suppliernewcontact/{{supplierId}}\">\n            New Contact </button>\n    </div>\n\n\n</div>\n","import { DataService, Supplier, Currency, SupplierPurchaseOrder, Fileblob, UserData } from '../data/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { UserService } from '../data/user.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { AttachmentInterface } from '../attachments/attachments.component';\r\n\r\nexport class SupplierOrderBase {\r\n  suppliers: Supplier[] = [];\r\n  supplierName = '';\r\n  currencies: Currency[] = [];\r\n  spo = new SupplierPurchaseOrder();\r\n  get POFile() {\r\n    return this.fileblob.name;\r\n  }\r\n  POFileLink = '';\r\n  fileblob = new Fileblob();\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  showUploadPOFile = true; // the original PO upload button is shown always except for internal POs where it is created\r\n  userData = new UserData();\r\n  showForm = true;\r\n  attachmentIntf: AttachmentInterface = new AttachmentInterface();\r\n\r\n  updating = false; // internal po edit new\r\n  extCurSymbol = '';\r\n\r\n  get canModifyPO() {\r\n    return this.userData.purchaseorderPerm.update > 0 ? true : false;\r\n  }\r\n\r\n  spoFileToBeUploaded: File | undefined;\r\n\r\n  spoNumberPlaceHolder = '';\r\n  showSupplierSelection = true;\r\n  viewMode: boolean | undefined = undefined;\r\n  showIsCompleted: boolean | undefined = undefined;\r\n\r\n  get currencyName() {\r\n    if (!this.currencies || !this.spo.currencyId) {\r\n      return '';\r\n    }\r\n    const cur = this.currencies.find(c => c.id == this.spo.currencyId);\r\n    return cur ? cur.name : '';\r\n  }\r\n\r\n  constructor(\r\n    protected data: DataService,\r\n    protected router: Router,\r\n    protected user: UserService,\r\n    protected location: Location\r\n  ) {\r\n    this.spo.completed = 0;\r\n\r\n    this.user.currentUser.subscribe(ud => (this.userData = ud), err => this.setError('Connection Errors', err));\r\n\r\n    data.getListOfSuppliers().then(\r\n      res => (this.suppliers = res.sort((a, b) => (a.name > b.name ? 1 : -1))),\r\n      err => {\r\n        console.log('Error ' + err);\r\n        this.setError('Connection Error: ', err);\r\n      }\r\n    );\r\n\r\n    data.getListOfCurrencies().then(\r\n      cs => (this.currencies = cs),\r\n      err => {\r\n        console.log('Error ' + err);\r\n        this.setError('Connection Error: ', err);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  setError(msg: string, err: any) {\r\n    this.errorMessage = msg + err;\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n  }\r\n\r\n  goToCurrentSPO(spoid: number, delayTime: number = 2000) {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/')\r\n        .then(b => this.router.navigateByUrl('/supplierorder/' + spoid));\r\n    }, delayTime);\r\n  }\r\n\r\n  resetForm() {\r\n    setTimeout(() => {\r\n      this.spo = new SupplierPurchaseOrder();\r\n      this.successMessage = '';\r\n      this.errorMessage = '';\r\n      this.location.back();\r\n    }, 2000);\r\n  }\r\n\r\n  fileUploadChanged(files: any) {\r\n    if (files.length !== 1) {\r\n      return;\r\n    }\r\n    this.spoFileToBeUploaded = files[0];\r\n    this.fileblob = new Fileblob();\r\n    // this.upLoadPOFile();\r\n  }\r\n\r\n  setupAttachments(spoId: number) {\r\n    // console.log(`setting up attachment interface for ${poId}`);\r\n    const af = new AttachmentInterface();\r\n    af.id = spoId;\r\n    af.addAttachment = (id, file) => this.data.addSPOattachment(id, file);\r\n    af.getAttachmentDetails = id => this.data.getSPOAttachmentList(id);\r\n    af.getAttachmentLink = id => this.data.getSPOAttachmentLink(id);\r\n    af.downloadResource = str => this.data.downloadResource(str);\r\n    this.attachmentIntf = af;\r\n  }\r\n\r\n  updateFileblob(onCompletion: () => void = () => { }) {\r\n    if (this.spo.id > 0) {\r\n      this.data.getFileblobForSPO(this.spo.id).subscribe(fb => {\r\n        this.fileblob = fb;\r\n        this.POFileLink = this.data.getSPOFileLink(this.spo.id);\r\n        onCompletion();\r\n      });\r\n    }\r\n  }\r\n\r\n  async downloadSPOFileLinkClicked() {\r\n    if (this.spo.id <= 0) {\r\n      console.log('spo id is zero');\r\n      return;\r\n    }\r\n    const urlstr = this.data.getSPOFileLink(this.spo.id);\r\n    const res = await this.data.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, this.POFile);\r\n  }\r\n\r\n  upLoadSPOFile() {\r\n    if (this.spoFileToBeUploaded) {\r\n      if (this.spo.id !== 0) {\r\n        console.log('Uploading PO file ' + this.spoFileToBeUploaded.name);\r\n        this.data.uploadSPO(this.spo.id, this.spoFileToBeUploaded).subscribe(\r\n          async e => {\r\n            await this.updateFileblob();\r\n            // this.successMessage = 'PO file uploaded';\r\n          },\r\n          err => {\r\n            this.errorMessage = 'PO file could not be uploaded ' + err;\r\n            throw err;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService, UserData } from '../data/data.service';\r\n\r\nimport { UserService } from '../data/user.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-navmenu',\r\n  templateUrl: './navmenu.component.html',\r\n  styleUrls: ['./navmenu.component.scss']\r\n})\r\nexport class NavMenuComponent {\r\n  @Output() collapseChanged: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  isCollapsed = false;\r\n  isAdmin = false;\r\n  isAccounts = false;\r\n  isMgmt = false;\r\n  \r\n  errorMessage = '';\r\n  userName = '';\r\n\r\n  currentSelection = '';\r\n\r\n  showAccountingMenus = false;\r\n\r\n  constructor(protected router: Router, protected data: DataService, protected user: UserService) {\r\n\r\n    this.init();\r\n    this.user.currentUser.subscribe(currentUser => {\r\n      this.userName = currentUser.user;\r\n      this.isAdmin = currentUser.isadmin > 0;\r\n      this.isAccounts = currentUser.isaccounting > 0;\r\n      this.isMgmt = currentUser.ismgmt > 0;\r\n      this.showAccountingMenus = this.isAccounts || this.isAdmin || this.isMgmt;\r\n    });\r\n\r\n   \r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  onClientsClicked() {\r\n    this.currentSelection = 'Clients';\r\n  }\r\n  onOrderBookClicked() {\r\n    this.currentSelection = 'OrderBook';\r\n  }\r\n  onProjectsClicked() {\r\n    this.currentSelection = 'Projects';\r\n  }\r\n  onInvoicesClicked() {\r\n    this.currentSelection = 'Invoices';\r\n  }\r\n  onCreateUserClicked() {\r\n    this.currentSelection = 'CreateUser';\r\n  }\r\n  onSuppliersClicked() {\r\n    this.currentSelection = 'Suppliers';\r\n  }\r\n\r\n  onDashboardClick() {\r\n    this.currentSelection = 'Dashboard';\r\n  }\r\n\r\n  onLogout() {\r\n    this.user.logout();\r\n  }\r\n  onHomeClick() {\r\n    this.isCollapsed = this.isCollapsed ? false : true;\r\n    this.collapseChanged.emit(this.isCollapsed);\r\n    this.init();\r\n  }\r\n  onMainNavClick() {\r\n    // it should work only when it is in collapsed state\r\n    this.isCollapsed = false;\r\n    this.collapseChanged.emit(this.isCollapsed);\r\n    this.init();\r\n  }\r\n}\r\n","<div class=\"main-nav\" [ngClass]=\"{ collapsed: isCollapsed }\">\r\n  <div>\r\n    <div class=\"home\">\r\n      <a [routerLink]=\"['/dashboard']\" (click)=\"onDashboardClick()\"   > <img class=\"logoImg\" src=\"/assets/images/Tismologogray.png\"/></a>\r\n\r\n      <div *ngIf=\"!isCollapsed\" class=\"caret-left\" (click)=\"onHomeClick()\">\r\n        <img src=\"assets/images/leftCaret.png\" class=\"caretImg\" />\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isCollapsed\" class=\" caret-right\" (click)=\"onHomeClick()\">\r\n      <img src=\"assets/images/rightCaret.png\" class=\"caretImg\" />\r\n    </div>\r\n\r\n    <div *ngIf=\"userName && !isCollapsed\">\r\n      <div class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='Clients'}\" >\r\n          <a  class=\"menuItem\"  [routerLink]=\"['/clientlist']\"  (click)=\"onClientsClicked()\"  > Clients </a>\r\n      </div>\r\n      <div class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='OrderBook'}\" >\r\n          <a  class=\"menuItem\"  [routerLink]=\"['/orderbook']\" (click)=\"onOrderBookClicked()\"  > Order book </a>\r\n      </div>\r\n\r\n      <div class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='Projects'}\" >\r\n          <a  class=\"menuItem\"  [routerLink]=\"['/projectlist']\" (click)=\"onProjectsClicked()\"  > Projects </a>\r\n      </div>\r\n\r\n      <div class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='Invoices'}\" >\r\n          <a  class=\"menuItem\" [routerLink]=\"['/invoicelist']\"  (click)=\"onInvoicesClicked()\"  > Invoices </a>\r\n      </div>\r\n\r\n      <div *ngIf='currentSelection==\"Invoices\"' class='menuItem submenu'> \r\n        <a *ngIf='showAccountingMenus' class=\"menuItem submenu\" [routerLink]=\"['/receivables']\" > Receivables</a>\r\n        <a *ngIf='showAccountingMenus' class=\"menuItem submenu\" [routerLink]=\"['/softeximport']\" > Softex Import</a>\r\n        <a *ngIf='showAccountingMenus' class=\"menuItem submenu\" [routerLink]=\"['/ebrcimport']\"> eBRC Import</a>\r\n      </div>\r\n      \r\n      <div class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='Suppliers'}\" >\r\n        <a  class=\"menuItem\"  [routerLink]=\"['/supplierlist']\" (click)=\"onSuppliersClicked()\"  > Suppliers </a>\r\n    </div>\r\n\r\n      <div *ngIf='isAdmin' class=\"menuItem\" [ngClass]=\"{'active': currentSelection=='CreateUser'}\">\r\n        <a class=\"menuItem\" [routerLink]=\"['/createuser']\"(click)=\"onCreateUserClicked()\"  > Create User </a>\r\n      </div>\r\n\r\n      <div class=\"userName\">{{ userName }}</div>\r\n\r\n      <div>\r\n          <a class=\"logout\" [routerLink]=\"['/login']\" (click)=\"onLogout()\">Logout </a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"!userName && !isCollapsed\"><a class=\"login\" [routerLink]=\"['/login']\">Login</a></div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Utils } from '../utils/utils';\r\nimport { POViewInterface, POViewWithBalance } from '../data/POViewInterface';\r\nimport { DataService } from '../data/data.service';\r\n\r\nexport const enum POStatus {\r\n    NONE = 0,\r\n    NIL_BALANCE = -1,\r\n    NEGATIVE_BALANCE = -2,\r\n    FIRST_INVOICE_PENDING = -3,\r\n    LAST_INVOICE_LONG_AGO = -4,\r\n\r\n    COMPLETED = 100\r\n}\r\n\r\n@Component({\r\n    selector: 'app-order',\r\n    templateUrl: './order.component.html',\r\n    styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n    @Input()\r\n    order!: POViewWithBalance | null\r\n\r\n    @Output()\r\n    headerClicked: EventEmitter<string> = new EventEmitter();\r\n\r\n\r\n    clientName = 'Client';\r\n    clientId = 0;\r\n    vendorName = 'Vendor';\r\n    description = 'Description';\r\n    poNumber = 'PO Number';\r\n    poDate = 'Dated';\r\n    orderId = 0;\r\n    amountStr = 'Amount';\r\n    billedStr = 'Billed';\r\n    balanceStr = 'Balance';\r\n\r\n    balanceInUSDStr = 'Balance (USD)';\r\n    expenseBudgetStr = 'Expense Budget';\r\n    expenseStr = 'Expensed';\r\n    expenseBalanceStr = 'Expense Balance';\r\n    receivedStr = 'Received';\r\n    bankChargesStr = 'Bank Charges';\r\n    dueAmountStr = 'Due';\r\n    status = 'Remarks';\r\n    nobalance = false;\r\n    notInvoicedRecently = false;\r\n    header = false;\r\n    completed = '';\r\n    statusValue = POStatus.NONE;\r\n\r\n\r\n    OnHeaderClicked(headerName: string) {\r\n        if (this.header) {\r\n            this.headerClicked.emit(headerName);\r\n        }\r\n    }\r\n\r\n    constructor(protected data: DataService) {\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(): void {\r\n        if (!this.order) {\r\n            this.header = true;\r\n            return;\r\n        }\r\n\r\n        this.clientName = this.order.clientName;\r\n        this.clientId = this.order.clientID;\r\n        this.vendorName = this.order.vendorName;\r\n        this.description = this.order.description;\r\n        this.poNumber = this.order.poNumber;\r\n        this.orderId = this.order.id;\r\n        this.poDate = Utils.getDateStr(this.order.poDate);\r\n\r\n        this.amountStr = Utils.getAmountStr(this.order.curSymbol, this.order.amount);\r\n        this.billedStr = Utils.getAmountStr(this.order.curSymbol, this.order.billed);\r\n        this.balanceStr = Utils.getAmountStr(this.order.curSymbol, this.order.balance);\r\n        this.expenseBudgetStr = Utils.getAmountStr(this.order.curSymbol, this.order.expenseBudget);\r\n        this.expenseStr = Utils.getAmountStr(this.order.curSymbol, this.order.expense);\r\n        this.expenseBalanceStr = Utils.getAmountStr(this.order.curSymbol, this.order.expenseBalance);\r\n        this.receivedStr = Utils.getAmountStr(this.order.curSymbol, this.order.received);\r\n        this.bankChargesStr = Utils.getAmountStr(this.order.curSymbol, this.order.bankCharges);\r\n        this.dueAmountStr = Utils.getAmountStr(this.order.curSymbol, this.order.dueAmount);\r\n        this.completed = this.order.completed ? 'Completed' : '';\r\n\r\n        this.status = '';\r\n        this.nobalance = false;\r\n        this.notInvoicedRecently = false;\r\n\r\n        const curSymbol = '$';\r\n        \r\n        if( this.order.balanceInUSD) // this field is not present in clientpo.component.ts\r\n            this.balanceInUSDStr = Utils.getAmountStr(curSymbol, this.order.balanceInUSD);\r\n        else \r\n            this.balanceInUSDStr = Utils.getAmountStr(curSymbol, 0);\r\n\r\n        if (this.order.balance <= 10 && !this.order.completed) { // nil balance and order is open\r\n            this.nobalance = true;\r\n            if (this.order.balance < 0) {\r\n                this.status = 'Negative balance';\r\n                this.statusValue = POStatus.NEGATIVE_BALANCE;\r\n            } else if (this.order.balance === 0) {\r\n                this.status = 'Nil balance';\r\n                this.statusValue = POStatus.NIL_BALANCE;\r\n            } else {\r\n                this.status = 'Low balance';\r\n                this.statusValue = POStatus.NIL_BALANCE;\r\n            }\r\n            if ( this.order.dueAmount <= 0) { // if no dues, then po can be closed\r\n                this.status += ', PO completed ?';\r\n            }\r\n        } else if (this.isFirstInvoicePending(this.order)) { // never billed on this PO\r\n            this.notInvoicedRecently = true;\r\n            this.status = 'First invoice pending';\r\n            this.statusValue = POStatus.FIRST_INVOICE_PENDING;\r\n        } else if (this.isNoRecentInvoice(this.order)) {\r\n            this.notInvoicedRecently = true;\r\n            this.status = 'Last invoice ' + Utils.getDateStr(this.order.lastInvoicedOn);\r\n            this.statusValue = -3;\r\n        } else if (this.order.completed) {\r\n            this.status = 'Completed';\r\n            this.statusValue = POStatus.COMPLETED;\r\n        }\r\n\r\n    }\r\n\r\n    isNoRecentInvoice(po: POViewInterface): boolean {\r\n        if (!this.order) return false\r\n        if (this.order.completed) { return false; } // completed order - don't check\r\n        if (this.order.balance < 10) { return false; } // less balance - don't check\r\n        const threeMonths = 3;\r\n\r\n        // po is not recent and last invoice was before 3 months\r\n        return !this.isRecentPO(threeMonths) && this.isLastInvoiceBefore(threeMonths);\r\n    }\r\n\r\n    isFirstInvoicePending(po: POViewInterface): boolean {\r\n        if (this.order) {\r\n            if (this.order.completed) { return false; } // completed order - don't check\r\n            const povalue = this.order.amount + this.order.expenseBudget;\r\n            const totalbilled = this.order.billed + this.order.expense;\r\n            if (povalue > 0 && totalbilled === 0) { return true; }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRecentPO(months: number): boolean {\r\n        return !Utils.isOlderThanNMonths(this.order!.poDate, months);\r\n    }\r\n\r\n    isLastInvoiceBefore(months: number): boolean {\r\n        return Utils.isOlderThanNMonths(this.order!.lastInvoicedOn, months);\r\n    }\r\n}\r\n","    <div  class='order' \r\n            [ngClass]=\"{  'header text-secondary': header }\" >\r\n\r\n\r\n        <div class=\"clientname\">\r\n            <div *ngIf='!clientId' (click)=\"OnHeaderClicked('clientName')\" > Client </div>\r\n            <a *ngIf='clientId' routerLink=\"/clienttrack/{{clientId}}\">{{clientName}} </a>  \r\n        </div>\r\n        \r\n        <div class=\"projectName small\" (click)=\"OnHeaderClicked('description')\"  >{{description}}</div>\r\n\r\n        <div class=\"poNumber small\" >\r\n            <div *ngIf='!orderId' (click)=\"OnHeaderClicked('poNumber')\"  > PO Number </div>\r\n            <a  *ngIf='orderId' routerLink=\"/order/{{orderId}}\"> {{poNumber}} </a>\r\n        </div>\r\n\r\n\r\n        \r\n        <div class=\"poDate\" (click)=\"OnHeaderClicked('poDate')\"  > {{poDate}}</div>\r\n    \r\n       \r\n        <div class=\"amount\"    (click)=\"OnHeaderClicked('amount')\"  > {{amountStr}} </div>\r\n        <div class='billed'    (click)=\"OnHeaderClicked('billed')\"   >{{billedStr}}</div>\r\n        <div class='balance'   (click)=\"OnHeaderClicked('balance')\"   >{{balanceStr}}</div>\r\n        <div class='balanceUSD'   (click)=\"OnHeaderClicked('balanceInUSD')\"   >{{balanceInUSDStr}}</div>\r\n        <div class='expenses'  (click)=\"OnHeaderClicked('expense')\" >{{expenseStr}}</div>\r\n        \r\n        <div class='dueamount  pr-2' (click)=\"OnHeaderClicked('dueAmount')\"  >{{dueAmountStr}}</div>\r\n        \r\n        <div class='orderstatus ' [ngClass]=\"{  'notInvoiced' : notInvoicedRecently,  'nobalance' : nobalance}\"  \r\n                (click)=\"OnHeaderClicked('status')\"> {{status}}</div>\r\n\r\n     \r\n    </div>\r\n","import { Component } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { SBAssignmentMgr } from './SBAssignmentMgr';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-softeximport',\r\n    templateUrl: './softexImport.component.html',\r\n    styleUrls: ['./softexImport.component.scss'],\r\n    animations: [\r\n        trigger(\r\n            'inOutAnimation',\r\n            [\r\n                transition(\r\n                    ':enter',\r\n                    [\r\n                        style({ opacity: 0 }),\r\n                        animate('0.25s ease-out',\r\n                            style({ opacity: 1 }))\r\n                    ]\r\n                ),\r\n                transition(\r\n                    ':leave',\r\n                    [\r\n                        style({ opacity: 1 }),\r\n                        animate('0.25s ease-in',\r\n                            style({ opacity: 0 }))\r\n                    ]\r\n                )\r\n            ]\r\n        )\r\n    ]\r\n})\r\n\r\nexport class SEBRCImportComponent {\r\n\r\n    sbm: SBAssignmentMgr\r\n\r\n\r\n    pageTitle = 'eBRC Import'\r\n\r\n    instruction = 'Copy entire eBRC No - Softex No columns from Excel and paste it here in the box.'\r\n\r\n\r\n    constructor(protected data: DataService) {\r\n\r\n        this.sbm = new SBAssignmentMgr()\r\n        this.sbm.placeholder =\r\n`009BC73210970037\tS19000240117\r\n009BC73210970049\tS19000240111\r\n009BC73210970025\tS20001528300\r\n009BC73210970042\tS19000240097`\r\n\r\n        this.sbm.isThisTheCorrectInvoice = (p, inv) => p.invReference == inv.softexNumber // in this case invoice is referred by softex\r\n        this.sbm.alreadyAssigned = (p, inv) => p.numToAssign == inv.ebrcNumber\r\n        this.sbm.fetchInvoice = p => this.data.getInvoiceForSoftexNumber(p.invReference)\r\n        this.sbm.assignAndUpdate = (p, inv) => {\r\n            inv.ebrcNumber = p.numToAssign\r\n            return this.data.updateInvoice(inv)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","<div class='pageTitle title'> {{pageTitle}}</div>\r\n \r\n\r\n\r\n<div class='gridContainer'>\r\n\r\n   <div *ngIf='!sbm.tuplepairs'  [@inOutAnimation] class='pastelabel '> \r\n       {{instruction}}\r\n       \r\n    </div>\r\n   \r\n   <textarea *ngIf='!sbm.tuplepairs'  class='txt ' #myText (paste)=\"sbm.onPaste($event)\" [(ngModel)]=\"sbm.txt\" \r\n             placeholder=\"{{sbm.placeholder}}\"></textarea>\r\n\r\n    \r\n   <div *ngIf='sbm.tuplepairs' [@inOutAnimation] class='buttons'>\r\n        <button *ngIf='sbm.showClearBtn' class=\"btn btn-success\" (click)=\"sbm.onClearButton()\">\r\n            Clear\r\n        </button>\r\n        <button *ngIf='sbm.showProceedBtn' class=\"btn btn-success\" (click)=\"sbm.onProceedButton()\">\r\n            Proceed\r\n        </button>\r\n       \r\n   </div>\r\n\r\n   <div *ngIf='sbm.message && sbm.tuplepairs'  [@inOutAnimation] [ngClass]=\"{'messageError': sbm.showMessageAsError}\"  class='message'  >\r\n    <span *ngIf='sbm.completed' class=\"material-icons\">\r\n        done_all\r\n    </span>\r\n       {{sbm.message}}\r\n    \r\n   </div>\r\n   <progress *ngIf='sbm.message && sbm.tuplepairs' class=\"progress\" value={{sbm.updated}} max={{sbm.total}}> </progress>\r\n \r\n    <div *ngIf='sbm.tuplepairs' class='tuplelist' >\r\n        \r\n        <div *ngFor=\"let pair of sbm.tuplepairs\"  >\r\n            <div>\r\n                <span class='softex'>{{pair.numToAssign}}</span> \r\n                <i class=\"material-icons alignbottom arrow\"> arrow_right_alt</i> \r\n\r\n                <a *ngIf='pair.invoiceId' routerLink=\"/invoice/{{pair.invoiceId}}\" class='invnumber'>{{pair.invReference}}</a>\r\n                <span *ngIf='!pair.invoiceId' class='invnumber'>{{pair.invReference}}</span>\r\n                <span class='status' [ngClass]=\"{'messageError': pair.status=='ERROR'}\" > {{pair.status}} </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService} from '../data/data.service';\r\nimport { OrderBase } from './orderBase';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { UserService } from '../data/user.service';\r\n\r\n@Component({\r\n    selector: 'app-ordernew',\r\n    templateUrl: './orderForm.component.html',\r\n    styleUrls: ['./orderForm.component.scss']\r\n})\r\nexport class OrderNewComponent extends OrderBase implements OnInit {\r\n\r\n    buttonTitleStr = 'Create this Purchase Order';\r\n    get buttonTitle() { return this.buttonTitleStr  }\r\n    get formTitle() { return 'New Purchase Order'; }\r\n\r\n    constructor(data: DataService, protected router: Router, protected user: UserService,\r\n        protected location: Location, private route: ActivatedRoute) {\r\n        super(data, router, user, location);\r\n    }\r\n\r\n    // client id may be specified as a route parameter\r\n    async ngOnInit() {\r\n        const clientIdstr = this.route.snapshot.paramMap.get('clientId');\r\n        const clientId = clientIdstr ? + clientIdstr : 0;\r\n        if ( clientId > 0) {\r\n            this.po.clientId = clientId;\r\n            this.clientName = (await this.data.getClient(clientId)).name;\r\n            this.showClientSelection = false;\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n\r\n        this.po.isFixedPrice = this.po.isFixedPrice ? 1 : 0;\r\n        this.po.completed = this.po.completed ? 1 : 0;\r\n        console.log(\r\n            'Submitting new PO' + this.po.clientId,\r\n            this.po.amount,\r\n            this.po.poDate,\r\n            this.po.currencyId,\r\n            this.po.description,\r\n            this.po.isFixedPrice,\r\n            this.po.completed\r\n        );\r\n        this. buttonTitleStr = \"Creating PO...\";\r\n        this.data.addPurchaseOrder(this.po).subscribe(\r\n            poid => {\r\n                this.po.id = poid;\r\n                this.setupAttachments(this.po.id);\r\n                this.successMessage = 'Uploading PO file ' + this.po.poNumber;\r\n                this.upLoadPOFile();\r\n                this.successMessage = 'Created PO ' + this.po.poNumber;\r\n                this.goToCurrentPO(poid);\r\n            },\r\n            err => {\r\n                console.log(err);\r\n                this.setError('Could not create PO: Error: ', err);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data/data.service';\nimport { SPOViewClass, SPOViewInterface } from '../data/SPOViewInterface';\n\n@Component({\n  selector: 'app-supplierpo',\n  templateUrl: './supplierpo.component.html',\n  styleUrls: ['./supplierpo.component.scss']\n})\nexport class SupplierpoComponent implements OnInit {\n\n  @Input()\n  sporder = new SPOViewClass();\n\n  canCreateInvoice = true;\n  showthispo = true;\n  showNewInvoiceButton = true;\n  constructor(private router: Router, protected data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  onNewInvoice() {\n    this.router.navigate(['/newsupplierinvoice', { spoid: this.sporder!.id, supplierId: this.sporder!.supplierId }]);\n}\n\n}\n","<div class='gridcontainer card ' >\n    <!-- <div class='lblponumber'>PO: <a routerLink=\"/order/{{orderId}}\"> {{poNumber}} </a> </div>\n    <div class='ponumber'> </div>\n    <div class='podescription'> {{description}}</div>\n    <div class='podate'> {{poDate}} on {{vendorName}}       \n            <img *ngIf='order!.isInternalPO' src=\"assets/images/India_tricolor_icon.svg\" class=\"rounded internalPOImg\">\n    </div>\n\n    <div class='postatus' [ngClass]=\"{  'notInvoiced' : notInvoicedRecently }\">{{status}}</div>\n\n\n    <div  class='showthispo'(click)=\"toggleShowThisPO()\" >\n        <i *ngIf=\"!showthispo\" class=\"material-icons\"  style=\"cursor:pointer; color:gray\">\n            arrow_drop_down_circle\n        </i>\n        <i  *ngIf=\"showthispo\" class=\"material-icons\" style=\"cursor:pointer; color:black\">\n            arrow_drop_up\n        </i>\n    </div>\n   \n\n    <div *ngIf=\"showthispo\" class='posummary' >\n        <div class='revenuesummary summarylayout'>\n            <div class='lblamount'> PO Amount </div>\n            <div class='amount'> {{amountStr}} </div>\n\n            <div class='lblbilled'> Billed </div>\n            <div class='billed'>{{billedStr}}</div>\n\n            <div class='lblbalance'> Balance </div>\n            <div class='balanceamt'  [ngClass]=\"{  'negativebalance' : negativebalance }\"    > {{balanceStr}} </div>\n           \n        </div>\n        <div class='expensesummary  summarylayout'>\n            <div  class='lblamount'> Expense Budget </div>\n            <div class='amount'>{{expenseBudgetStr}}</div>\n\n            <div  class='lblbilled'> Billed </div>\n            <div class='billed'>{{expenseStr}}</div>\n\n            <div  class='lblbalance'> Balance </div>\n            <div class='balanceamt'>{{expenseBalanceStr}}</div>\n        </div>\n        <div class='recvsummary  summarylayout'>\n           \n\n            <div class='lblbilled'> Received </div>\n            <div class='billed'> {{receivedStr}} </div>\n\n            <div class='lblbalance'> Due </div>\n            <div class='balanceamt'> {{dueAmountStr}} </div>\n        </div>\n\n       \n    </div>\n    -->\n    <div *ngIf=\"showthispo\" class='poinvoices'>\n        <!-- <app-clientinvoice  *ngIf=\"invoiceList\"  >   </app-clientinvoice>\n        <div *ngFor=\"let inv of invoiceList\">\n            <app-clientinvoice [inview]=inv></app-clientinvoice>\n        </div> -->\n    \n        <div *ngIf=\"canCreateInvoice\">\n            <button *ngIf='showNewInvoiceButton' type=\"button\" class=\"btn btn-success btn-sm mt-2\" (click)=\"onNewInvoice()\">\n                New Invoice</button>\n        </div>\n    \n    </div>\n</div>\n\n","import { BaseIntf } from './data.service';\r\nimport { invalid } from '@angular/compiler/src/render3/view/util';\r\n\r\nexport class Invoice implements BaseIntf {\r\n    id = 0;\r\n    invoiceNumber = '';\r\n    purchaseOrderId = 0;\r\n    projectId = 0;\r\n    description = '';\r\n    amount = 0;\r\n\r\n    tds = 0; // tax deducted at source\r\n    invoiceDate: Date = new Date();\r\n    isExpenseInvoice = 0;\r\n    paymentTerms = -1;\r\n    status = 0;\r\n    receivedAmount = 0;\r\n    receivedDate = new Date();\r\n    bankTransaction = '';\r\n    bankCharges = 0;\r\n    remarks = '';\r\n\r\n    softexNumber = '';\r\n    ebrcNumber = '';\r\n\r\n    static isReceived(inv: Invoice): boolean {\r\n        return inv.status === 1 || inv.status === 5;\r\n    }\r\n\r\n    static isPartlyReceived(inv: Invoice): boolean {\r\n        return inv.status === 5;\r\n    }\r\n\r\n    static isFullyReceived(inv: Invoice): boolean {\r\n        return inv.status === 1 ;\r\n    }\r\n\r\n    static getStatusStr(inv: Invoice): string {\r\n        const st = Invoice.getStatusOptions().find(opt => opt.value === inv.status);\r\n        return st ? st.key : '';\r\n    }\r\n\r\n\r\n    static isOverdue(inv: Invoice) {\r\n        return inv.status === 4;\r\n   }\r\n\r\n    static getStatusOptions() {\r\n        return [\r\n            { key: 'Review awaited', value: 0 },\r\n            { key: 'Approved', value: 2 },\r\n            { key: 'Sent', value: 3 },\r\n            { key: 'Overdue', value: 4 },\r\n            { key: 'Partly received', value: 5 },\r\n            { key: 'Received', value: 1 },\r\n            { key: 'Balance written Off', value: 6 },\r\n            { key: 'Canceled', value: 7 },\r\n        ];\r\n    }\r\n\r\n    getPath() { return 'Invoice'; }\r\n}\r\n\r\n// status field enumeration\r\n// 0 —> No Status\r\n// 1 —> Received\r\n// 2 —> Requested : Request to prepare and send this invoice to the client\r\n// 3 —> Sent\r\n// 4 —> Overdue\r\n// 5 —> Partly Received\r\n\r\n","import { DataService, PurchaseOrder, Vendor, Fileblob, Client } from '../data/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Project } from '../data/project';\r\nimport { Invoice } from '../data/invoice';\r\nimport * as FileSaver from 'file-saver';\r\nimport { OnInit, Directive } from '@angular/core';\r\nimport { AttachmentInterface } from '../attachments/attachments.component';\r\n\r\n@Directive()\r\nexport class InvoiceBase implements OnInit {\r\n  buttonTitle = 'Create Invoice';\r\n  formTitle = 'New Invoice';\r\n  clientId = 0;\r\n  clientName = '';\r\n  selectedPo: PurchaseOrder | undefined; // selected PO\r\n  selectedProject: Project | undefined;\r\n  vendor: Vendor = new Vendor();\r\n  showForm = true;\r\n\r\n  get vendorName() {\r\n    return this.vendor.name;\r\n  } // selected vendor\r\n  curSymbol: string | undefined; // selected currency symbol\r\n\r\n  //  purchaseOrders: PurchaseOrder[] | undefined;\r\n  projects: Project[] | undefined;\r\n\r\n  client: Client | undefined;\r\n  isInternalCustomer: boolean = false;\r\n  attachments: Fileblob[] | undefined;\r\n  attachmentmsg: string | undefined;\r\n  showAttachmentButton = false;\r\n  doFadeIn = false;\r\n  doFadeOut = false;\r\n\r\n\r\n  // following for invoice internal edit new\r\n  externalInvoice = new Invoice();\r\n  externalPO = new PurchaseOrder();\r\n  externalVendor = new Vendor();\r\n  extCurSymbol = '';\r\n  updating = false;\r\n  endClient = new Client();\r\n\r\n  // -----\r\n\r\n  showPeriodOfServiceTip = false;\r\n\r\n  get showTDS() {\r\n    return this.client ? this.client.country == 'India' : false;\r\n  }\r\n\r\n  get balanceAmount() {\r\n    var bal = this.invoice.amount - this.invoice.receivedAmount - this.invoice.bankCharges - this.invoice.tds;\r\n    return bal > 0 ? bal : 0;\r\n  }\r\n  get invoicestatus() {\r\n    return this.invoice.status.toString();\r\n  }\r\n  set invoicestatus(val: string) {\r\n    this.invoice.status = parseInt(val, 10);\r\n  }\r\n  invoice: Invoice = new Invoice();\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  viewMode: boolean | undefined = undefined;\r\n  showReceived: boolean | undefined = undefined;\r\n  showInternalInvoiceEdit = false;\r\n  InternalInvoiceEditTitle = '';\r\n  InternalInvoiceId = 0;\r\n  InternalInvoiceEdit = false;\r\n  showClientSelection = true;\r\n  singlePO = false;\r\n  fileblob = new Fileblob();\r\n  StatusOptions: any[] = [];\r\n  attachmentIntf: AttachmentInterface = new AttachmentInterface();\r\n\r\n  get PDFlink() {\r\n    return this.fileblob.id > 0 ? this.data.getInvoicePDFlink(this.invoice.id) : '';\r\n  }\r\n  get PDFFileName() {\r\n    return this.fileblob.name;\r\n  }\r\n\r\n  enableRefreshInvoiceNumber = false;\r\n\r\n  // enum StatusEnum { ReviewAwaited = 0, Received = 1, Requested = 2, Sent = 3, Overdue = 4, \r\n  //PartlyReceived = 5, WrittenOff = 6, Canceled = 7 }\r\n\r\n  get received() {\r\n    return this.invoice.status === 1 || this.invoice.status === 5 || this.invoice.status == 6 || this.invoice.status == 7;\r\n  }\r\n  get selectedPoNumber() {\r\n    return this.selectedPo ? this.selectedPo.poNumber : '';\r\n  }\r\n\r\n  //  get singlePO() { return this.purchaseOrders && this.purchaseOrders.length === 1; }\r\n  get singleProject() {\r\n    return this.projects && this.projects.length === 1;\r\n  }\r\n\r\n  getAttachmentLink(attachmentId: number): string {\r\n    return this.data.getBaseInvoiceAttachmentLink(attachmentId);\r\n  }\r\n  ngOnInit() {}\r\n  updateTitles() {}\r\n\r\n  constructor(protected data: DataService, protected router: Router) {\r\n    this.StatusOptions = Invoice.getStatusOptions();\r\n  }\r\n\r\n  async attachmentLinkClicked(attachmentId: number, filename: string) {\r\n    if (attachmentId <= 0 || !filename) {\r\n      console.log('attachment id is zero');\r\n      return;\r\n    }\r\n    console.log(`attachment id is ${attachmentId} and filename is ${filename}`);\r\n    const urlstr = this.data.getBaseInvoiceAttachmentLink(attachmentId);\r\n    const res = await this.data.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, filename);\r\n  }\r\n\r\n  async pdflinkClicked() {\r\n    if (this.fileblob.id <= 0) {\r\n      console.log('fileblob id is zero');\r\n      return;\r\n    }\r\n    const urlstr = this.data.getInvoicePDFlink(this.invoice.id);\r\n    const res = await this.data.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, this.PDFFileName);\r\n  }\r\n\r\n  \r\n\r\n  async onClientSelected() {\r\n    if (this.clientId) {\r\n      this.resetUserInputs();\r\n      this.client = await this.data.getClient(this.clientId);\r\n      this.isInternalCustomer = this.data.isInternalCustomer(this.client);\r\n      console.log('InternalCustomer', this.isInternalCustomer)\r\n      this.clientName = this.client.name;\r\n      await this.data\r\n        .getListOfProjectsForClient(this.clientId)\r\n        .toPromise()\r\n        .then(\r\n          res => {\r\n            this.projects = res.filter(proj => proj.completed <= 0); // show only not completed projects\r\n            if (this.projects.length === 1) {\r\n              const project = this.projects[0];\r\n              this.invoice.projectId = project.id;\r\n              this.onProjectSelected();\r\n            }\r\n          },\r\n          err => this.setError('Error : unable to fetch project info ', err)\r\n        );\r\n    }\r\n  }\r\n\r\n  async onPOSelected() {\r\n    if (this.invoice.purchaseOrderId) {\r\n      // && this.purchaseOrders) {\r\n      // Note : this should be == the browser makes this.selectedPoId as string so === fails\r\n      // tslint:disable-next-line:triple-equals\r\n      //  this.purchaseOrders.find(order => order.id == this.invoice.purchaseOrderId);\r\n      this.selectedPo = await this.data.getPurchaseOrder(this.invoice.purchaseOrderId).toPromise();\r\n      if (this.selectedPo) {\r\n        this.invoice.paymentTerms = this.selectedPo.paymentTerms;\r\n        await this.data.getcurSymbol(this.selectedPo.currencyId).then(sym => (this.curSymbol = sym));\r\n        await this.data.getVendor(this.selectedPo.vendorId).then(v => (this.vendor = v));\r\n      }\r\n    }\r\n  }\r\n\r\n  onProjectSelected() {\r\n    if (this.invoice.projectId && this.projects) {\r\n      // tslint:disable-next-line:triple-equals\r\n      this.selectedProject = this.projects.find(p => p.id == this.invoice.projectId);\r\n    }\r\n  }\r\n\r\n  async fileUploadChanged(files: any) {}\r\n\r\n  async refreshInvoiceNumberClicked() {}\r\n\r\n  async generateInvoiceNumber() {\r\n    if (this.selectedPo) {\r\n      this.invoice.invoiceNumber = 'Generating...';\r\n      this.data\r\n        .getNextInvoiceNumber(this.selectedPo.vendorId, new Date((this.invoice.invoiceDate as Date)), this.invoice.isExpenseInvoice)\r\n        .subscribe(invNumber => this.invoice.invoiceNumber = invNumber)\r\n        ;\r\n    }\r\n  }\r\n\r\n  setError(msg: string, err: any) {\r\n    this.errorMessage = msg + err\r\n  }\r\n\r\n  OnBankChargesFocus() {\r\n    if (this.invoice.bankCharges === 0) {\r\n      if (this.invoice.receivedAmount > 0) {\r\n        const delta = this.invoice.amount - this.invoice.receivedAmount;\r\n        if (delta > 0 && delta < 100) {\r\n          this.invoice.bankCharges = delta;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateFileblob() {\r\n    if (this.invoice.id > 0) {\r\n      this.data\r\n        .getFileblobForInvoice(this.invoice.id)\r\n        .subscribe(fb => this.fileblob = fb);\r\n    } else {\r\n      this.fileblob.name = '';\r\n      this.fileblob.id = 0;\r\n      this.fileblob.size = 0;\r\n    }\r\n  }\r\n\r\n  resetUserInputs() {\r\n    // this.purchaseOrders = undefined;\r\n    this.projects = undefined;\r\n    // this.clientId = undefined;\r\n    this.selectedProject = undefined;\r\n    this.selectedPo = undefined;\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    this.vendor = new Vendor(); //  = '';\r\n    this.curSymbol = '';\r\n    this.fileblob = new Fileblob();\r\n  }\r\n\r\n  // resetForm(reInit: boolean) {\r\n  //   setTimeout(async () => {\r\n  //     console.log('resetForm');\r\n  //     const invNumber = this.invoice.invoiceNumber;\r\n  //     this.invoice = new Invoice();\r\n  //     this.attachmentmsg = '';\r\n  //     this.resetUserInputs();\r\n  //     const invoice = await this.data.getInvoiceForInvoiceNumber(invNumber).toPromise();\r\n  //     this.viewMode = true;\r\n  //     this.updateTitles();\r\n  //     this.router.navigateByUrl('/invoice/' + invoice.id);\r\n  //     if (reInit) {\r\n  //       console.log('with reInit');\r\n  //       this.ngOnInit();\r\n  //     }\r\n  //     // setTimeout(() => this.router.navigateByUrl('/invoice/' + invoice.id), 10);\r\n  //     // If the router is given the same URL the page does not refresh\r\n  //     // this is hack to first go to some other page and then come back\r\n  //     // the  onSameUrlNavigation?: 'reload' | 'ignore' on router does not seem\r\n  //     // to work on this version of angular\r\n  //   }, 500);\r\n  // }\r\n  editInternalInvoice() {}\r\n  OnFocusInvoiceNumber() {}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Utils } from '../utils/utils';\r\n\r\nexport class ChartInput {\r\n  chartTitle = '';\r\n  isRate = false;\r\n  months: Month[] = [];\r\n  financialYear: () => string = () => '';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-monthchart',\r\n  templateUrl: './monthchart.component.html',\r\n  styleUrls: ['./monthchart.component.scss']\r\n})\r\nexport class MonthchartComponent implements OnInit {\r\n  @Input()\r\n  chartinput: ChartInput = new ChartInput();\r\n\r\n  @Input()\r\n  chartinput2: ChartInput = new ChartInput();\r\n\r\n  get months() {\r\n    return this.chartinput.months;\r\n  }\r\n  get isRate() {\r\n    return this.chartinput.isRate;\r\n  }\r\n  get chartTitle() {\r\n    return this.chartinput.chartTitle;\r\n  }\r\n  get financialYear() {\r\n    return this.chartinput.financialYear();\r\n  }\r\n\r\n  get financialYear2() {\r\n    return this.chartinput2.financialYear();\r\n  }\r\n\r\n  monthsdisplay: MonthDisp[] = [];\r\n\r\n  monthStrs = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n  maxHeight = 150; // 200 pixels;\r\n  minHeight = 1; // pixels\r\n  progress = '';\r\n  errorMessage = '';\r\n  fytotal = '';\r\n  fytotal2 = '';\r\n\r\n  constructor() {\r\n    console.log('MonthChart constructed');\r\n  }\r\n  ngOnInit() {\r\n    try {\r\n      // this.chartinput.refresh = () => this.initCard();\r\n      console.log('MonthChart ngOnInit');\r\n      this.initCard();\r\n    } catch (e) {\r\n      this.errorMessage = 'Error while fetching information.';\r\n    }\r\n  }\r\n\r\n  getValueStr(val: number) {\r\n    if (val <= 0) {\r\n      return ' ';\r\n    }\r\n    if (!this.isRate) {\r\n      return Utils.getAmountStr('', val / 1000) + 'k';\r\n    }\r\n    return Utils.toStr(val, 2);\r\n  }\r\n\r\n  initCard() {\r\n    console.log('monthchart initCard()');\r\n    const allmonths = this.chartinput.months.concat(this.chartinput2.months);\r\n    let min = allmonths.reduce((a, m) => (m.monthValue > 0 && m.monthValue < a.monthValue ? m : a)).monthValue;\r\n    const max = allmonths.reduce((a, m) => (a.monthValue > m.monthValue ? a : m)).monthValue;\r\n    // console.log(`${this.chartTitle} min value = ${min} and max = ${max}`);\r\n    min = this.isRate ? min * 0.9 : 0;\r\n    // max = this.isRate ? max * 1.0 : max;\r\n    const mulfactor = (this.maxHeight - this.minHeight) / (max - min); // = m\r\n    const constant = this.minHeight - mulfactor * min; // = c\r\n    const mlist: MonthDisp[] = this.months.map((pmth, i) => {\r\n      return {\r\n        name: this.monthStrs[pmth.monthNumber - 1],\r\n        value: pmth.monthValue > 0 ? constant + mulfactor * pmth.monthValue : 1,\r\n        valuestr: this.getValueStr(pmth.monthValue),\r\n\r\n        value2: this.financialYear2\r\n          ? this.chartinput2.months[i].monthValue > 0\r\n            ? constant + mulfactor * this.chartinput2.months[i].monthValue\r\n            : 1\r\n          : 0,\r\n        valuestr2: this.financialYear2 ? this.getValueStr(this.chartinput2.months[i].monthValue) : ''\r\n      };\r\n    });\r\n\r\n    if (!this.isRate) {\r\n      const total = this.months.reduce((a, v) => a + v.monthValue, 0);\r\n        this.fytotal = total > 0 ? Utils.getAmountStr('$ ', total / 1000) + 'k' : '';\r\n\r\n      const total2 = this.chartinput2.months.reduce((a, v) => a + v.monthValue, 0);\r\n        this.fytotal2 = total2 > 0 ? Utils.getAmountStr('$ ', total2 / 1000) + 'k' : '';\r\n    }\r\n    this.monthsdisplay = mlist;\r\n  }\r\n}\r\n\r\nexport class Month {\r\n  monthNumber = 0;\r\n  monthValue = 0;\r\n}\r\n\r\nclass MonthDisp {\r\n  name = '';\r\n  value = 0.0;\r\n  valuestr = '';\r\n\r\n  value2 = 0.0;\r\n  valuestr2 = '';\r\n}\r\n","\r\n <div class='monthchart card focus-in-expand'>\r\n        <div class='finyear text-muted lead'>{{financialYear}}</div>\r\n        <div *ngIf='financialYear2' class='finyear2 text-muted lead'>{{financialYear2}}</div>\r\n        <div class='yaxis text-muted '> {{chartTitle}} </div>\r\n        <div class='month ' *ngFor=\"let month of monthsdisplay\">\r\n            <div class='bar firstbar'>\r\n                <div class='monthvaluetext small text-muted '> {{month.valuestr}} </div>\r\n                <div class='monthvalue prevyearcolor animateBars ' [style.height]=\"month.value + 'px'  \" > </div>\r\n            </div>\r\n           \r\n\r\n            <div *ngIf='financialYear2' class='bar secondbar'>\r\n                <div class='monthvaluetext small '> {{month.valuestr2}} </div>\r\n                <div class='monthvalue currentyearcolor animateBars ' [style.height]=\"month.value2 + 'px'  \"> </div>\r\n            </div>\r\n\r\n            <div class='monthname small text-muted '>{{month.name}}</div>\r\n           \r\n        </div>\r\n        <div *ngIf=\"fytotal\" class='fytotal text-muted lead'>Total : {{fytotal}}</div>\r\n        <div *ngIf=\"fytotal2\" class='fytotal2 text-muted lead'>Total : {{fytotal2}}</div>\r\n </div>","import { BaseIntf } from \"./data.service\";\r\n\r\nexport class SupplierInvoice implements BaseIntf {\r\n    \r\n    id = 0;\r\n    invoiceNumber = '';\r\n    supplierPOId = 0;\r\n    invoiceDate: Date = new Date();\r\n    projectId = 0;\r\n    description = '';\r\n    currencyId = 0;\r\n    amount = 0;\r\n    techTeamReview = 0;\r\n    projectManagerReview = 0;\r\n    paymentDate = new Date();\r\n    status = 0;\r\n    clientInvoiceid = 0;\r\n    clientInvoiceStatus = 0;\r\n    remarks = ''\r\n    fileBlobId = 0;\r\n\r\n\r\n    static isPartlySent(inv: SupplierInvoice): boolean {\r\n        return inv.status === 4;\r\n    }\r\n\r\n    static isFullySent(inv: SupplierInvoice): boolean {\r\n        return inv.status === 2 ;\r\n    }\r\n\r\n    static getStatusStr(inv: SupplierInvoice): string {\r\n        const st = SupplierInvoice.getStatusOptions().find(opt => opt.value === inv.status);\r\n        return st ? st.key : '';\r\n    }\r\n\r\n\r\n    static isOverdue(inv: SupplierInvoice) {\r\n        return inv.status === 3;\r\n   }\r\n\r\n    static getStatusOptions() {\r\n        return [\r\n            { key: 'Review awaited', value: 0 },\r\n            { key: 'Approved', value: 1 },\r\n            { key: 'Sent', value: 2 },\r\n            { key: 'Overdue', value: 3 },\r\n            { key: 'Partly Sent', value: 4 },\r\n            { key: 'Balance written Off', value: 5 },\r\n            { key: 'Cancelled', value: 6 },\r\n        ];\r\n    }\r\n\r\n    getPath() {\r\n        return 'SupplierInvoice';\r\n    }\r\n}","'use strict';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Client, DataService, PurchaseOrder, Contact, UserData } from '../data/data.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Utils } from '../utils/utils';\r\nimport { trigger, transition, style, animate } from '@angular/animations';\r\nimport { Invoice } from '../data/invoice';\r\nimport { UserService } from '../data/user.service';\r\nimport { ProjectViewModel } from '../data/ProjectViewModel';\r\nimport { POViewInterface } from '../data/POViewInterface';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { ClientPOIntf } from './clientpoboth.component';\r\n\r\ninterface Dictionary<T> {\r\n  [key: number]: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-client-detail',\r\n  templateUrl: './clientDetail.component.html',\r\n  styleUrls: ['./clientDetail.component.scss'],\r\n  animations: [\r\n    trigger('slowAppear', [\r\n      transition('void => *', [style({ opacity: 0 }), animate('500ms ease-in-out', style({ opacity: 1 }))])\r\n    ])\r\n  ]\r\n})\r\nexport class ClientDetailComponent implements OnInit {\r\n  clientId = 0;\r\n\r\n  client: Client | null = null;\r\n  // purchaseOrders: POViewInterface[] = [];\r\n  projectViewModels: ProjectViewModel[] = [];\r\n\r\n  invoices: Invoice[] = [];\r\n  contactList: Contact[] = [];\r\n\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  statusMessage = '';\r\n  userData = new UserData();\r\n  initover = false;\r\n\r\n  poList: POViewInterface[] = [];\r\n  poinvList: Dictionary<InvoiceViewObj[]> = {};\r\n  canCreateInvoice = false;\r\n\r\n  bothPOList: ClientPOIntf[] = [];\r\n\r\n  get canCreatePO() {\r\n    return this.userData.purchaseorderPerm.add > 0 ? true : false;\r\n  }\r\n  canCreateInvoiceFn() {\r\n    return this.userData.invoicePerm.add > 0 ? true : false;\r\n  }\r\n\r\n  get canCreateProject() {\r\n    return this.userData.projectPerm.add > 0 ? true : false;\r\n  }\r\n\r\n  get canCreateContact() {\r\n    return this.userData.contactPerm.add > 0 ? true : false;\r\n  }\r\n\r\n\r\n\r\n\r\n  setError(err: string): void {\r\n    this.errorMessage = err;\r\n    this.statusMessage = '';\r\n    this.successMessage = '';\r\n  }\r\n\r\n\r\n  constructor(\r\n    private data: DataService,\r\n    private user: UserService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.user.currentUser.subscribe(ud => (this.userData = ud), err => this.setError('Connection Errors'));\r\n  }\r\n\r\n  ngOnInit() {\r\n    const idstr = this.route.snapshot.paramMap.get('id');\r\n    this.clientId = idstr ? +idstr : 0;\r\n    this.initialize();\r\n    this.canCreateInvoice = this.canCreateInvoiceFn();\r\n  }\r\n\r\n  initialize() {\r\n    this.initover = false;\r\n    this.statusMessage = 'Fetching client information';\r\n    this.data\r\n      .getClient(this.clientId)\r\n      .then(cl => {\r\n        this.client = cl;\r\n        if (this.client.id > 0) {\r\n          this.statusMessage = 'Fetching purchase order information';\r\n          this.getPoDetailsForClient()\r\n            .then(() => {\r\n              this.statusMessage = '';\r\n              this.initover = true;\r\n            })\r\n            .catch(err => this.setError('Connection Errors: '));\r\n\r\n          this.data\r\n            .getListOfContactsForClient(this.clientId)\r\n            .subscribe(ls => {\r\n              this.contactList = ls;\r\n            },\r\n              err => {\r\n                this.setError('Connection Errors: ');\r\n              }\r\n            );\r\n        } else {\r\n          this.statusMessage = '';\r\n          this.errorMessage = 'Could not fetch client info.';\r\n        }\r\n\r\n      })\r\n      .catch(err => this.setError('Connection Errors: '));\r\n  }\r\n\r\n  async getPoDetailsForClient() {\r\n    // both external end client po + any internal pos\r\n    this.poList = await this.data.getListOfPurchaseOrdersForClient(this.clientId).toPromise();\r\n    const extlist = this.poList.filter(po => !po.isInternalPO); // list of external pos only\r\n    const intlist = this.poList.filter(po => po.isInternalPO); // list of internal pos only\r\n\r\n    // associated external po with the internal po if it exists\r\n    const comblist = extlist.map(extpo => ({ extpo: extpo, intpo: intlist.find(intpo => intpo.extPOId === extpo.id) }));\r\n\r\n    // list of interna pos that has no associated external pos\r\n    const noextpolist = intlist.filter(po => !comblist.find(c => c.intpo ? true : false));\r\n\r\n    // create the ClientPOIntf object\r\n    comblist.forEach(item => {\r\n      const bothpoitem = new ClientPOIntf();\r\n      bothpoitem.extOrder = item.extpo;\r\n      bothpoitem.intOrder = item.intpo;\r\n      bothpoitem.canCreateInvoice = this.canCreateInvoice;\r\n      this.bothPOList.push(bothpoitem);\r\n      this.data.getListOfInvoicesForPurchaseOrder(item.extpo.id)\r\n        .subscribe(invlist => bothpoitem.extInvoiceList = invlist);\r\n      if (item.intpo) {\r\n        this.data.getListOfInvoicesForPurchaseOrder(item.intpo.id)\r\n          .subscribe(invlist => bothpoitem.intInvoiceList = invlist);\r\n      }\r\n    });\r\n\r\n    noextpolist.forEach(item => {\r\n      const bothpoitem = new ClientPOIntf();\r\n      bothpoitem.extOrder = undefined;\r\n      bothpoitem.extInvoiceList = [];\r\n      bothpoitem.intOrder = item;\r\n      this.bothPOList.push(bothpoitem);\r\n      this.data.getListOfInvoicesForPurchaseOrder(item.id)\r\n        .subscribe(invlist => bothpoitem.intInvoiceList = invlist);\r\n    });\r\n\r\n    // this.poList.forEach(po => {\r\n    //   if (po) {\r\n    //     const bothpoitem = new ClientPOIntf();\r\n    //     this.bothPOList.push(bothpoitem);\r\n    //     if (!po.isInternalPO) {\r\n\r\n    //     }\r\n    //     this.data.getListOfInvoicesForPurchaseOrder(po.id)\r\n    //       .subscribe(invlist => this.poinvList[po.id] = invlist);\r\n    //   }\r\n    // });\r\n\r\n    this.projectViewModels = await this.data.getProjectViewListForClient(this.clientId).toPromise();\r\n    this.projectViewModels = this.projectViewModels.sort((a, b) => (a.project.startDate > b.project.startDate ? 1 : -1));\r\n\r\n  }\r\n\r\n  toggleShowThisPO(po: any) {\r\n    po.showThisPO = po.showThisPO ? false : true;\r\n  }\r\n\r\n\r\n  onNewInvoice(po: any) {\r\n    // PO view object\r\n    this.router.navigate(['/newinvoice', { poid: po.id, clientId: this.clientId }]);\r\n  }\r\n}\r\n","<div *ngIf=\"client\" class='focus-in-expand'>\r\n\r\n    <div class='pageTitle'>{{client.name}}</div>\r\n    <div class='small text-secondary'>{{client.country}}</div>\r\n    <div class='small text-secondary'>Customer code : {{client.customerCode}}</div>\r\n    <!-- <div *ngIf=\"canUpdate\" class=\"editIcon small\">\r\n        <a routerLink=\"/client/{{client.id}}\">\r\n            <i class=\"material-icons\">edit </i>\r\n        </a>\r\n    </div> -->\r\n\r\n\r\n    <div>\r\n        <app-statusmsg *ngIf=\"statusMessage\" class='ml-4' message=\"{{statusMessage}}\"></app-statusmsg>\r\n        <div *ngIf=\"successMessage\" class=\"Success hrline\"> {{successMessage}} </div>\r\n        <div *ngIf=\"errorMessage\" class=\"Errors hrline\"> {{errorMessage}} </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"initover\">\r\n        <div class='poTitle'>PurchaseOrders</div>\r\n        <div *ngIf=\"canCreatePO\" class='newpurchaseorderbtn'>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" routerLink='/neworder/{{clientId}}'>\r\n                New Purchase Order </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <div class='focus-in-expand pocard' *ngFor=\"let po of poList\">\r\n        <div >\r\n            <app-clientpo [order]=po [invoiceList]=poinvList[po.id] [canCreateInvoice]=canCreateInvoice ></app-clientpo>\r\n        </div>\r\n    </div> -->\r\n\r\n    <div class='focus-in-expand pocard' *ngFor=\"let bothpo of bothPOList\">\r\n        <app-clientpoboth [pointf]=bothpo ></app-clientpoboth>\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"initover\">\r\n        <div class='poTitle'>Projects</div>\r\n    </div>\r\n\r\n    <div *ngIf=\"initover\">\r\n        <div class='col-sm-8'>\r\n            <app-clientproject></app-clientproject>\r\n            <div *ngFor=\"let projectviewmodel of projectViewModels\">\r\n                <app-clientproject [projview]=projectviewmodel></app-clientproject>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"initover\" class=' ml-4'>\r\n        <div *ngIf=\"canCreateProject\" class='col-sm-2'>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" routerLink=\"/newproject/{{clientId}}\">\r\n                New Project </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div *ngIf=\"initover\">\r\n        <div class='poTitle'>Contacts</div>\r\n    </div>\r\n    <div *ngIf=\"initover\" class=' ml-4'>\r\n        <div class='col-sm-8' *ngFor=\"let contact of contactList\">\r\n            <div>\r\n                <a routerLink=\"/editcontact/{{contact.id}}\">{{contact.name}}</a>\r\n                <span>\r\n                    <small class='ml-2'>{{contact.title}}</small>\r\n                </span>\r\n                <span>\r\n                    <small class='ml-2'>{{contact.email}}</small>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div *ngIf=\"initover && canCreateContact\" class=' ml-4'>\r\n        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" routerLink=\"/newcontact/{{clientId}}\">\r\n            New Contact </button>\r\n    </div>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { DataService, Supplier, UserData } from \"../data/data.service\";\nimport { UserService } from \"../data/user.service\";\n\n@Component({\n  selector: \"app-supplier-list\",\n  templateUrl: \"./supplierList.component.html\",\n  styleUrls: [\"./supplierList.component.scss\"],\n})\nexport class SupplierListComponent {\n  supplierList: Supplier[] = [];\n  fullSupplierList: Supplier[] = [];\n  serverError = false;\n  filterTerm = \"\";\n  userData = new UserData();\n  get canAddNewSuppliers() {\n    return this.userData.supplierPerm.add ? true : false;\n  }\n  get canUpdateSuppliers() {\n    return this.userData.supplierPerm.update ? true : false;\n  }\n\n  constructor(data: DataService, private user: UserService) {\n    user.currentUser.subscribe(\n      (ud) => {\n        (this.userData = ud);\n        console.log(ud)\n      },\n      (err) => {\n        console.log(err);\n        this.serverError = true;\n      }\n    );\n\n    data.getListOfSupplierObs().subscribe(\n      (res) => {\n        this.fullSupplierList = res.sort((a, b) =>\n          a.name.toUpperCase() >= b.name.toUpperCase() ? 1 : -1\n        );\n        this.updateSupplierList();\n      },\n      (err) => {\n        console.log(\"Error \" + err);\n        this.serverError = true;\n      }\n    );\n  }\n  updateSupplierList() {\n    this.supplierList = this.fullSupplierList.filter(\n      this.filterForSearchTerm()\n    );\n  }\n\n  filterTermChanged(newSrchTerm: string) {\n    this.filterTerm = newSrchTerm;\n    this.updateSupplierList();\n  }\n\n  filterForSearchTerm(): (su: Supplier) => boolean {\n    if (this.filterTerm === \"\" || this.filterTerm.length < 2) {\n      return (su: Supplier) => true;\n    }\n    const srchTarget = (su: Supplier) =>\n      [su.name, su.supplierCode, su.location].join(\" \");\n    const regEx = new RegExp(this.filterTerm, \"i\");\n    return (su: Supplier) => regEx.test(srchTarget(su));\n  }\n}\n","\n<div class='gridcontainer focus-in-expand' >\n    \n    <div class=\"pageTitle\"> Suppliers </div>\n      \n   <div *ngIf=\"serverError\" class=\"Errors message\"> Connection Errors. </div>\n  \n \n   <div class='filter'>\n       <span class='text-secondary small'>Filter \n       <input class='filterInput'  type=\"text\" [ngModel]=\"filterTerm\" \n                           (ngModelChange)=\"filterTermChanged($event)\" /></span>\n   </div>\n\n   <div *ngIf=\"canAddNewSuppliers\" class='newsupplier'>\n       <button type=\"button\" class=\"tbisbutton\"  routerLink='/newsupplier'>\n           New Supplier </button>\n   </div>\n  \n\n   <div class='supplierlist' >\n       <div *ngFor=\"let supplier of supplierList\">\n           <app-suppliers [supplier]=\"supplier\"  [canUpdate]=\"canUpdateSuppliers\"  > </app-suppliers>\n       </div>\n   </div>\n      \n\n   \n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Utils } from '../utils/utils';\r\nimport { ProjectViewModel } from '../data/ProjectViewModel';\r\n\r\n@Component({\r\n    selector: 'app-clientproject',\r\n    templateUrl: './clientproject.component.html',\r\n    styleUrls: ['./clientproject.component.scss'],\r\n})\r\nexport class ClientProjectComponent implements OnInit {\r\n    @Input()\r\n    projview: ProjectViewModel | undefined;\r\n\r\n    header = false;\r\n    projectCode = 'Project Code';\r\n    name = 'Name';\r\n    start = 'Start';\r\n    status = 'Status';\r\n    billingStatus = '';\r\n    projid = 0;\r\n    noInvoiceInLongTime = false;\r\n    constructor() {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        if (!this.projview) {\r\n            this.header = true;\r\n            return;\r\n        }\r\n\r\n        this.header = false;\r\n\r\n        this.projectCode = this.projview.project.projectCode;\r\n        this.projid = this.projview.project.id;\r\n        this.name = this.projview.project.name;\r\n        this.start = Utils.getDateStr(this.projview.project.startDate);\r\n        this.status = this.projview.project.completed ? 'Completed' : 'On going';\r\n\r\n        if (ProjectViewModel.firstInvoiceIsOverdue(this.projview, 0)) {\r\n            this.noInvoiceInLongTime = true;\r\n            this.billingStatus = 'First invoice pending';\r\n        } else if (ProjectViewModel.nextInvoiceOverdue(this.projview, 3)) {\r\n            this.noInvoiceInLongTime = true;\r\n            this.billingStatus = 'Last invoiced ' + ProjectViewModel.lastInvoicedDateStr(this.projview);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class='projview' [ngClass]=\"{'header text-secondary': header}\">\r\n\r\n    <div class=\"projectcode\">\r\n        <a *ngIf='!header' routerLink=\"/project/{{projid}}\">{{projectCode}} </a>\r\n        <div *ngIf='header'>{{projectCode}}</div>\r\n    </div>\r\n    <div class=\"name\"> {{name}}</div>\r\n    <div class=\"start\">{{start}}</div>\r\n    <div class=\"status\">{{status}}</div>\r\n    <div *ngIf=\"noInvoiceInLongTime\" class=\"billingStatus\"> {{billingStatus}}</div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { DataService, Supplier } from \"../data/data.service\";\n\n@Component({\n  selector: \"app-supplier-new\",\n  templateUrl: \"./supplierNew.component.html\",\n  styleUrls: [\"./supplierNew.component.scss\"],\n})\nexport class SupplierNewComponent {\n  supplier: Supplier = new Supplier();\n  supplierList: Supplier[] = [];\n\n  formTitle = \"New Supplier\";\n  btnTitle = \"Add this Supplier\";\n  successMessage = \"\";\n  errorMessage = \"\";\n\n  constructor(private data: DataService) {\n    data.getListOfSuppliers().then(\n      (res) => (this.supplierList = res),\n      (err) => {\n        console.log(\"Error \" + err);\n        this.setError(err);\n      }\n    );\n    this.init();\n  }\n\n  init() {\n    //this.data.getNextSupplierCode().subscribe(sc => this.supplier.supplierCode = sc);\n    this.supplier = new Supplier();\n    this.successMessage = \"\";\n    this.errorMessage = \"\";\n  }\n\n  setError(err: any) {\n    this.errorMessage = \"Error: Could not update: \" + err;\n  }\n\n  onSubmit() {\n    this.successMessage = \"\";\n    this.errorMessage = \"\";\n    console.log(\"Creating new Supplier\" + this.supplier.name);\n    const nameDuplicate = this.supplierList.findIndex(\n      (s, i) => s.name === this.supplier.name\n    );\n    const codeDuplicate = this.supplierList.findIndex(\n      (s, i) => s.supplierCode === this.supplier.supplierCode\n    );\n    if (nameDuplicate !== -1) {\n      this.errorMessage = \"Supplier with same name already exists!\";\n    } else if (codeDuplicate !== -1) {\n      this.errorMessage = \"Duplicate Supplier code.\";\n    } else {\n      console.log(this.supplier)\n      this.data.addSupplier(this.supplier).subscribe(\n        (s) => {\n          console.log(s);\n          this.supplierList.concat(this.supplier);\n          this.successMessage = \"Added new supplier \" + this.supplier.name;\n          this.resetForm();\n        },\n        (err) => {\n          console.log(err);\n          this.setError(err);\n        }\n      );\n    }\n  }\n\n  resetForm() {\n    setTimeout(() => {\n      this.init();\n    }, 1000);\n  }\n}\n","import { OnInit, Directive } from '@angular/core';\r\nimport { DataService, Client, Contact, PurchaseOrder, Manager } from '../data/data.service';\r\nimport { Project } from '../data/project';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { POViewInterface } from '../data/POViewInterface';\r\nimport { ProjectListComponent } from './projectList.component';\r\n\r\ntype Some<T> = { tag:'some', result: T }\r\ntype None = { tag: 'none' }\r\nconst NONE : None = {tag: 'none'}\r\ntype Option<T> = Some<T> | None;\r\n\r\nfunction toOption<T>(some: T | undefined): Option<T> {\r\n    if (some) return { tag: 'some', result: some }\r\n    return NONE;\r\n}\r\n\r\nfunction action<T>(operand: Option<T>, someAction: (sm:T) => void): void {\r\n    if (operand.tag == 'some') someAction(operand.result);\r\n}\r\n\r\nfunction func<T, U>(operand: Option<T>, someFunc: (sm: T) => Option<U>): Option<U> {\r\n    switch (operand.tag) {\r\n        case 'some': return someFunc(operand.result); \r\n        case 'none' : return NONE\r\n    }\r\n}\r\n\r\n\r\n// match<T, U>(option < T >, someFunc, noneFunc) : option < U >\r\n// {\r\n        \r\n\r\n// }\r\n\r\n@Directive()\r\nexport class ProjectBase implements OnInit {\r\n    clients: Client[] = [];\r\n    clientName = '';\r\n    clientId = 0;\r\n    project = new Project();\r\n    successMessage = '';\r\n    errorMessage = '';\r\n\r\n    viewMode: boolean | undefined = undefined;\r\n    showIsCompleted = false;\r\n    showClientSelection = true;\r\n\r\n    get projectcompleted() { return this.project.completed; }\r\n    set projectcompleted(val) { this.project.completed = val ? 1 : 0; }\r\n\r\n    effort = 0; // in person months\r\n    duration = 0; // in calendar months\r\n\r\n    workTypeOptions: any[] = [];\r\n\r\n    stpOptions: any[] = [];\r\n    medClassOptions: any[] = [];\r\n    billingTypes: any[] = [];\r\n    purchaseOrderOptions: POViewInterface[] = [];\r\n    mgrOptions: Manager[] = [];\r\n    electronics = false;\r\n    firmware = false;\r\n    software = false;\r\n    mechanical = false;\r\n    contacts: Contact[] = [];\r\n    showForm = false;\r\n\r\n    get buttonTitle() { return 'Create this Project'; }\r\n    get formTitle() { return 'New Project'; }\r\n\r\n\r\n    constructor(protected data: DataService, protected route: ActivatedRoute, protected location: Location) {\r\n        this.workTypeOptions = Project.WorkTypeOptions();\r\n        this.stpOptions = Project.STPServiceTypeOptions();\r\n        this.medClassOptions = Project.MedicalClassOptions();\r\n        this.billingTypes = Project.BillingTypes();\r\n        \r\n        this.data.getListOfClients()\r\n                .then(res => this.clients = res.sort((a, b) => a.name > b.name ? 1 : -1),\r\n                    err => this.setError(err));\r\n        this.getManagerList();\r\n    }\r\n\r\n    getManagerList()\r\n    {\r\n        this.data.getListOfManagers().subscribe(lst => this.mgrOptions = lst.filter(m => Manager.canManageProjects(m)));\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n    setError(err: any) {\r\n        this.errorMessage = 'Error: Could not update. ';\r\n    }\r\n    OnProjectCodeFocus() {\r\n    }\r\n\r\n    onClientSelected() {\r\n        if (this.project.clientId) {\r\n            this.data.getListOfContactsForClient(this.project.clientId)\r\n                     .subscribe(lst => this.contacts = lst);\r\n            this.data.getClient(this.project.clientId)\r\n                .then(cl => {\r\n                    this.clientId = cl.id;\r\n                    this.clientName = cl.name;\r\n                    this.data.getListOfPurchaseOrdersForClient(this.clientId)\r\n                             .subscribe(polist => this.purchaseOrderOptions = polist); // .filter(po => !po.isCompleted()));\r\n                });\r\n        }\r\n    }\r\n\r\n    onPOChanged() {\r\n        let po = toOption(this.purchaseOrderOptions.find(por => por.id == this.project.poId));\r\n        action(po, p => this.project.billingType = p.isFixedPrice ? 2 : 1 )\r\n    }\r\n\r\n    prepareProject() {\r\n        this.project.setEffortInPM(this.effort);\r\n        this.project.setdurationInMonths(this.duration);\r\n        this.project.setElectronics(this.electronics);\r\n        this.project.setFirmware(this.firmware);\r\n        this.project.setSoftware(this.software);\r\n        this.project.setMechanical(this.mechanical);\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n            this.location.back();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MonthYear, FinancialYear } from './financialYear';\r\n\r\n\r\n@Component({\r\n    selector: 'app-dateselect',\r\n    templateUrl: './dateselect.component.html',\r\n    styleUrls: ['./dateselect.component.scss']\r\n})\r\nexport class DateselectComponent implements OnInit {\r\n\r\n    @Output() DurationChanged: EventEmitter<MonthYear[]> = new EventEmitter();\r\n\r\n    finy = FinancialYear.GetCurrentFinancialYear();\r\n\r\n    get finYear() { return this.finy.toString(); } // FY 2018-19\r\n    get startYear() { return this.finy.startYear; }\r\n    get endYear() { return this.finy.endYear; }\r\n\r\n\r\n\r\n    // currentYearIndex = (new Date()).getFullYear() - 2018;\r\n\r\n    monthIndex = 0; // Note: The user interface assigns a string value to this !!\r\n    months!: string[];\r\n\r\n    constructor() {\r\n                    this.updateMonths();\r\n                    const dt = new Date();\r\n                    const yr = dt.getFullYear();\r\n                    const mt = dt.getMonth(); // 0 for Jan\r\n                    const currentMonth = mt;\r\n                    this.monthIndex = this.finy.getFyMonthNumber(currentMonth + 1); // calendar month number to financial month index\r\n                  }\r\n\r\n    ngOnInit(): void {\r\n        this.onMonthChanged();\r\n    }\r\n\r\n\r\n    updateMonths() {\r\n        this.months = this.finy.rawmonths.map(\r\n            (mth, index) => {\r\n                if (index < 9) {\r\n                    return mth + ' ' + this.finy.financialYear;   //  Apr 2018, May 2018 ...\r\n                } else if (index < 12) {\r\n                    return mth + ' ' + (this.finy.financialYear + 1); // Jan 2019, Feb 2019, Mar 2019, ...\r\n                } else {\r\n                    return mth;                 //  Q1, Q2, Q3, Q4, FY\r\n                }\r\n            });\r\n    }\r\n\r\n    onMonthChanged() {\r\n        this.DurationChanged.emit(this.finy.getFyMonthRange(Number(this.monthIndex) ));\r\n    }\r\n\r\n    decrementFY() {\r\n        this.finy = this.finy.PrevYear();\r\n        this.monthIndex = 11; // decrement FY, show March\r\n        this.updateMonths();\r\n        this.onMonthChanged();\r\n    }\r\n\r\n    incrementFY() {\r\n        this.finy = this.finy.NextYear();\r\n        this.monthIndex = 0; // increment FY, show April\r\n        this.updateMonths();\r\n        this.onMonthChanged();\r\n    }\r\n}\r\n\r\n\r\n\r\n","\r\n\r\n<div class='dateselect'>\r\n\r\n\r\n    <div class='decrementYear' (click)='decrementFY()'> \r\n            <img  src=\"assets/images/leftCaret.png\" class=\"caretImg\" >   \r\n    </div>\r\n    <div class='year'>{{finYear}}</div>\r\n    <div class='incrementYear' (click)='incrementFY()'> \r\n            <img  src=\"assets/images/rightCaret.png\" class=\"caretImg\" >\r\n    </div>\r\n\r\n\r\n    <select  class=\"form-control selection\" name=\"month\" \r\n                required [(ngModel)]=\"monthIndex\" (ngModelChange)=\"onMonthChanged()\">\r\n        <option *ngFor=\"let month of months; index as i\" [value]=\"i\">{{month}}</option>\r\n    </select>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FinancialYear, MonthYear } from '../utils/financialYear';\r\nimport { DataService, UserData } from '../data/data.service';\r\nimport { Month, ChartInput } from './monthchart.component';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { timeInterval } from 'rxjs/operators';\r\nimport { UserService } from '../data/user.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  prevSalesChartInput = new ChartInput();\r\n  saleschartinput = new ChartInput();\r\n\r\n  prevPoChartInput = new ChartInput();\r\n  pochartinput = new ChartInput();\r\n\r\n  prevInrChartInput = new ChartInput();\r\n  inrchartinput = new ChartInput();\r\n  company = 'Group';\r\n\r\n  get potitle() {\r\n    return this.prevPoChartInput.chartTitle;\r\n  }\r\n  set potitle(v: string) {\r\n    this.prevPoChartInput.chartTitle = v;\r\n  }\r\n  get inrtitle() {\r\n    return this.inrchartinput.chartTitle;\r\n  }\r\n  set inrtitle(v: string) {\r\n    this.inrchartinput.chartTitle = v;\r\n  }\r\n\r\n  finYear = FinancialYear.GetCurrentFinancialYear();\r\n  prevFinYear = this.finYear.PrevYear();\r\n\r\n  get progress() {\r\n    const st = this.salesstatus + this.postatus + this.currencystatus;\r\n    return st ? 'Fetching ' + st : '';\r\n  }\r\n  errorMessage = '';\r\n\r\n  salesstatus = '';\r\n  postatus = '';\r\n  currencystatus = '';\r\n\r\n  constructor(private data: DataService, private user: UserService) {\r\n\r\n  }\r\n\r\n  getSalesChartInput(title: string, year: FinancialYear): ChartInput {\r\n    const ch = new ChartInput();\r\n    ch.chartTitle = title;\r\n    ch.financialYear = () => year.toString();\r\n    return ch;\r\n  }\r\n\r\n  initChartInputs() {\r\n    this.prevPoChartInput = new ChartInput();\r\n    this.pochartinput = new ChartInput();\r\n    this.prevSalesChartInput = new ChartInput();\r\n    this.saleschartinput = new ChartInput();\r\n    this.inrchartinput = new ChartInput();\r\n    this.prevInrChartInput = new ChartInput();\r\n\r\n    this.prevSalesChartInput.chartTitle = 'Tismo Group Revenue';\r\n    this.prevSalesChartInput.financialYear = () => this.prevFinYear.toString();\r\n    this.saleschartinput.financialYear = () => this.finYear.toString();\r\n\r\n    this.prevPoChartInput.chartTitle = 'Tismo Group New Purchase Orders';\r\n    this.prevPoChartInput.financialYear = () => this.prevFinYear.toString();\r\n    this.pochartinput.financialYear = () => this.finYear.toString();\r\n\r\n    this.prevInrChartInput.chartTitle = 'USD to INR';\r\n    this.prevInrChartInput.isRate = true;\r\n    this.prevInrChartInput.financialYear = () => this.prevFinYear.toString();\r\n\r\n    this.inrchartinput.financialYear = () => this.finYear.toString();\r\n  }\r\n\r\n  ngOnInit() {\r\n    try {\r\n      console.log('dashboard ngOnInit ');\r\n      this.init();\r\n    } catch (e) {\r\n      this.errorMessage = 'Error while fetching information.';\r\n    }\r\n  }\r\n\r\n  // refresh() {\r\n  //   this.ref.detectChanges();\r\n  // }\r\n\r\n  clearStatus() {\r\n    this.salesstatus = '';\r\n    this.postatus = '';\r\n    this.currencystatus = '';\r\n  }\r\n\r\n  init() {\r\n    try {\r\n      this.errorMessage = '';\r\n      this.clearStatus();\r\n\r\n      this.initChartInputs();\r\n\r\n      const sc = this.salesCard();\r\n      const poc = this.poCard();\r\n\r\n      sc.then(() => poc.then(() => { this.INRCurrencyCard(); }));\r\n\r\n\r\n    } catch (err) {\r\n      this.errorMessage = 'Connection Errors';\r\n      this.clearStatus();\r\n    }\r\n  }\r\n\r\n  OnCompanyChange() {\r\n    this.init();\r\n  }\r\n\r\n  getTismoSales(month: number, year: number, company: string): Promise<number> {\r\n    switch (company) {\r\n      case 'Germany':\r\n        return this.data.getTismoGermanySales(month, year).toPromise();\r\n      case 'USA':\r\n        return this.data.getTismoUSSales(month, year).toPromise();\r\n      case 'Group':\r\n        return this.data.getTismoGroupSales(month, year).toPromise();\r\n      default:\r\n      case 'India':\r\n        return this.data.getTismoIndiaSales(month, year).toPromise();\r\n    }\r\n  }\r\n\r\n  getSalesTitle(): string {\r\n    switch (this.company) {\r\n      case 'Germany':\r\n        return 'Tismo Germany Revenues';\r\n      case 'USA':\r\n        return 'Tismo US Revenues';\r\n      case 'Group':\r\n        return 'Tismo Group Revenues';\r\n      default:\r\n      case 'India':\r\n        return 'Tismo India Revenues';\r\n    }\r\n  }\r\n\r\n  async salesCard() {\r\n    this.salesstatus = ' Sales ';\r\n\r\n    const prevchartinput = this.getSalesChartInput(this.getSalesTitle(), this.prevFinYear);\r\n    const chartinput = this.getSalesChartInput(this.getSalesTitle(), this.finYear);\r\n\r\n    const prevMonthYear = this.prevFinYear.getFyMonthAndQuarterRangeForFullYear();\r\n    prevchartinput.months = await this.salesMonthValueList(this.company, prevMonthYear);\r\n\r\n    const monthyear = this.finYear.getFyMonthAndQuarterRangeForFullYear();\r\n    chartinput.months = await this.salesMonthValueList(this.company, monthyear);\r\n\r\n    this.saleschartinput = chartinput;\r\n    this.prevSalesChartInput = prevchartinput;\r\n\r\n    this.salesstatus = '';\r\n\r\n  }\r\n\r\n  async poCard() {\r\n    this.postatus = ' POs ';\r\n    this.potitle = this.getPOTitle();\r\n\r\n    const prevMonthYear = this.prevFinYear.getFyMonthAndQuarterRangeForFullYear();\r\n    this.prevPoChartInput.months = await this.poMonthValueList(this.company, prevMonthYear);\r\n\r\n    const monthyear = this.finYear.getFyMonthAndQuarterRangeForFullYear();\r\n    this.pochartinput.months = await this.poMonthValueList(this.company, monthyear);\r\n\r\n    this.postatus = '';\r\n\r\n  }\r\n\r\n  salesMonthValueList(company: string, monthRange: MonthYear[]): Promise<Month[]> {\r\n    return this.getMonthValuesForFullYear(company, monthRange, (m, y, s) => this.getTismoSales(m, y, s));\r\n  }\r\n\r\n  poMonthValueList(company: string, monthRange: MonthYear[]): Promise<Month[]> {\r\n    return this.getMonthValuesForFullYear(company, monthRange, (m, y, c) => this.getTismoPO(m, y, c));\r\n  }\r\n\r\n  getMonthValuesForFullYear(\r\n    company: string,\r\n    monthRange: MonthYear[],\r\n    fn: (m: number, y: number, c: string) => Promise<number>\r\n  ): Promise<Month[]> {\r\n    // const monthRange = this.finYear.getFyMonthRangeForFullYear();\r\n    return this.getMonthValues(monthRange, company, fn);\r\n  }\r\n\r\n  getMonthValues(\r\n    monthRange: MonthYear[],\r\n    company: string,\r\n    fn: (m: number, y: number, c: string) => Promise<number>\r\n  ): Promise<Month[]> {\r\n    const lst = monthRange.map(async mth => {\r\n      const m: Month = {\r\n        monthNumber: mth.month,\r\n        monthValue: await fn(mth.month, mth.year, company)\r\n      };\r\n      return m;\r\n    });\r\n    return Promise.all(lst);\r\n  }\r\n\r\n  getPOTitle(): string {\r\n    switch (this.company) {\r\n      case 'Germany':\r\n        return 'Tismo Germany New Purchase Orders';\r\n      case 'USA':\r\n        return 'Tismo US New Purchase Orders';\r\n      case 'Group':\r\n        return 'Tismo Group New Purchase Orders';\r\n      default:\r\n      case 'India':\r\n        return 'Tismo India New Purchase Orders';\r\n    }\r\n  }\r\n\r\n  getTismoPO(month: number, year: number, company: string): Promise<number> {\r\n    switch (company) {\r\n      case 'Germany':\r\n        return this.data.getTismoGermanyPOamount(month, year).toPromise();\r\n      case 'USA':\r\n        return this.data.getTismoUSPOamount(month, year).toPromise();\r\n      case 'Group':\r\n        return this.data.getTismoGroupPOamount(month, year).toPromise();\r\n      default:\r\n      case 'India':\r\n        return this.data.getTismoIndiaPOamount(month, year).toPromise();\r\n    }\r\n  }\r\n\r\n  INRCurrencyCard() {\r\n    this.user.currentUser.subscribe(\r\n      ud => {\r\n        //if (ud.ismgmt) {\r\n          // show INR chart only for mgmt users\r\n          this.currencystatus = ' USD-INR ';\r\n\r\n          this.data.getINRCurrency().then((inr) => {\r\n            this.GetCurrencyCard(inr.id, this.prevFinYear, true).then(mthdata => {\r\n              this.prevInrChartInput.months = mthdata;\r\n              this.GetCurrencyCard(inr.id, this.finYear, true).then(mdata => {\r\n                this.inrchartinput.months = mdata;\r\n                this.currencystatus = '';\r\n              });\r\n            });\r\n          });\r\n\r\n        },\r\n    //  },\r\n      err => {\r\n        console.log(err);\r\n\r\n      }\r\n    );\r\n  }\r\n  // async EurCurrencyCard() {\r\n  //     this.progress = 'Fetching EUR currency rate information ...';\r\n  //     const eur = await this.data.getEURCurrency();\r\n  //     this.eurMonths = await this.GetCurrencyCard(eur.id, false);\r\n  //     this.progress = '';\r\n  // }\r\n  // async GBPCurrencyCard() {\r\n  //     this.progress = 'Fetching GBP currency rate information ...';\r\n  //     const gbp = await this.data.getGBPCurrency();\r\n  //     this.gbpMonths = await this.GetCurrencyCard(gbp.id, false);\r\n  //     this.progress = '';\r\n  // }\r\n  async GetCurrencyCard(currencyId: number, yr: FinancialYear, flip: boolean) {\r\n    const monthRange = yr.getFyMonthAndQuarterRangeForFullYear();\r\n    const now = new Date();\r\n    const lst = monthRange.map(async mth => {\r\n      let rate = 0;\r\n      if (new Date(mth.year, mth.month - 1, 1) <= now) {\r\n        // our months are 1 based, Date constructor takes 0 based\r\n        rate = await this.data.getCurrencyRate(currencyId, mth.month, mth.year);\r\n        rate = flip ? (rate > 0 ? 1.0 / rate : 0) : rate;\r\n      }\r\n      const m: Month = {\r\n        monthNumber: mth.month,\r\n        monthValue: rate\r\n      };\r\n      return m;\r\n    });\r\n    return Promise.all(lst);\r\n  }\r\n}\r\n","<div class='pageTitle'>\r\n    Tismo Business Information System\r\n</div>\r\n\r\n<div class='gridContainer'>\r\n\r\n\r\n    <div class=\"form-control companySelector small text-secondary\">\r\n        <input type=\"radio\"  name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\"\r\n            value=\"India\">Tismo India\r\n        <input type=\"radio\"  name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\"\r\n            value=\"USA\">Tismo US\r\n        <input type=\"radio\"  name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\"\r\n            value=\"Germany\">Tismo Germany\r\n        <input type=\"radio\"  name=\"company\" [(ngModel)]=\"company\" (ngModelChange)=\"OnCompanyChange()\"\r\n            value=\"Group\">Tismo Group\r\n    </div>\r\n\r\n    <app-monthchart *ngIf=\"prevSalesChartInput.months.length > 0\" class='saleschart'\r\n        [chartinput]=\"prevSalesChartInput\" \r\n        [chartinput2]='saleschartinput'\r\n        > \r\n    </app-monthchart>\r\n\r\n    <app-monthchart *ngIf=\"pochartinput.months.length > 0\" class='pochart' \r\n        [chartinput]=\"prevPoChartInput\"\r\n        [chartinput2]='pochartinput'\r\n        >\r\n    </app-monthchart>\r\n\r\n    <app-monthchart *ngIf=\"inrchartinput.months.length > 0\" class='inrchart' \r\n        [chartinput]='prevInrChartInput'\r\n        [chartinput2]=\"inrchartinput\"\r\n        >\r\n    </app-monthchart>\r\n   \r\n<!--     \r\n    <app-monthchart *ngIf=\"eurMonths.length > 0\" class='eurusdchart' [months]=\"eurMonths\" [chartTitle]=\"eurTitle\"\r\n        [financialYear]=\"financialYear\" [isRate]=\"eurIsRate\">\r\n    </app-monthchart>\r\n\r\n\r\n    <app-monthchart *ngIf=\"gbpMonths.length > 0\" class='gbpchart' [months]=\"gbpMonths\" [chartTitle]=\"gbpTitle\"\r\n        [financialYear]=\"financialYear\" [isRate]=\"gbpIsRate\">\r\n    </app-monthchart>\r\n\r\n     -->\r\n\r\n    <div *ngIf=\"progress\" class=\"Success focus-in-expand message\"> {{progress}} </div>\r\n    <div *ngIf=\"errorMessage\" class=\"Errors focus-in-expand message\"> {{errorMessage}} </div>\r\n\r\n</div>","import { Invoice } from '../data/invoice';\r\nimport { Observable } from 'rxjs';\r\nimport { SBAssignment } from './softexImport.component';\r\n\r\n// helper class for doing the softex and ebrc number assignment to invoices\r\n// this class has the common code for both\r\nexport class SBAssignmentMgr {\r\n\r\n    public isThisTheCorrectInvoice: (arg0: SBAssignment, arg1: Invoice) => boolean = (a, b) => false;\r\n\r\n    public alreadyAssigned: (arg0: SBAssignment, arg1: Invoice) => boolean = (a, b) => false;\r\n\r\n    public assignAndUpdate!: (arg0: SBAssignment, arg1: Invoice) => Observable<number>;\r\n\r\n    public fetchInvoice!: (p: SBAssignment) => Observable<Invoice>;\r\n\r\n    txt = '';\r\n\r\n    placeholder = '';\r\n\r\n    tuplepairs: SBAssignment[] | undefined;\r\n    showClearBtn = true;\r\n    showProceedBtn = true;\r\n\r\n    message = '';\r\n    showMessageAsError = false;\r\n\r\n    count = 0;\r\n    aborted = false;\r\n\r\n    statusUpdated = 'Updated';\r\n    statusUpdating = 'Updating Invoice';\r\n    statusNoUpdateRequired = 'No updation required';\r\n    statusError = 'ERROR';\r\n\r\n    completed = false;\r\n\r\n    sanityCheckOnInput() {\r\n        if (this.tuplepairs) {\r\n            let allok = this.tuplepairs.every(p => p.invReference && p.numToAssign);\r\n            if (!allok) {\r\n                let ls = this.tuplepairs.filter(p => !p.invReference || !p.numToAssign);\r\n                if (ls) {\r\n                    this.message = 'Errors :' + ls[0].numToAssign + ' ' + ls[0].invReference;\r\n                    this.showMessageAsError = true;\r\n                    this.showProceedBtn = false;\r\n                    ls.forEach(p => p.status = 'ERROR');\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onReceivedList() {\r\n        if (this.tuplepairs) {\r\n            this.showProceedBtn = true;\r\n            this.showClearBtn = true;\r\n\r\n            this.showMessageAsError = false;\r\n            this.aborted = false;\r\n            this.sanityCheckOnInput();\r\n            this.updateMessage();\r\n        }\r\n\r\n    }\r\n    onPaste(event: ClipboardEvent) {\r\n        if (event.clipboardData != null) {\r\n            let items = event.clipboardData.getData('text');\r\n            if (items != undefined) {\r\n                this.tuplepairs = this.parse(items)\r\n                    .filter(p => p && p.numToAssign && p.invReference) // remove undefined elements\r\n                    .filter(p => !p.numToAssign.includes('Softex') && !p.invReference.includes('Invoice')); // header included ?\r\n\r\n                this.onReceivedList();\r\n            }\r\n        }\r\n    }\r\n    // str =\r\n    // S21002110983\tTD21AA001\r\n    // S21002110983\tTD21AA001\r\n    // S21002110984\tTD21AA002\r\n    // S21002110985\tTD21AA003\r\n    parse(str: string): SBAssignment[] {\r\n        let m = str.split(/[\\r\\n]+/) // split on \\r \\n occurring 1 or more times\r\n            .map(s => s.trim().split(/[ ,\\t]+/)) // split on space comma tab occurring 1 or more times\r\n            .map(p => {\r\n                return {\r\n                    numToAssign: p[0],\r\n                    invReference: p[1],\r\n                    invoiceId: 0,\r\n                    status: ''\r\n                };\r\n            });\r\n        return m;\r\n    }\r\n\r\n\r\n\r\n    onClearButton() {\r\n        this.tuplepairs = undefined;\r\n        this.txt = '';\r\n        this.showMessageAsError = false;\r\n        this.aborted = false;\r\n        this.completed = false;\r\n    }\r\n\r\n\r\n    onProceedButton() {\r\n        if (this.tuplepairs) {\r\n            this.showProceedBtn = false;\r\n\r\n            this.message = 'Processing';\r\n            this.showMessageAsError = false;\r\n            this.aborted = false;\r\n            this.tuplepairs.forEach(p => {\r\n                if (!this.aborted)\r\n                    this.doAssignment(p);\r\n            });\r\n        }\r\n    }\r\n\r\n    abort(str: string) {\r\n        this.message = 'Aborting : ' + str;\r\n        this.showMessageAsError = true;\r\n\r\n        this.showProceedBtn = false;\r\n        this.aborted = true;\r\n    }\r\n\r\n    OnCompleted() {\r\n        this.showProceedBtn = false;\r\n        this.completed = true;\r\n        this.message = 'Completed : ' + this.message;\r\n        this.showMessageAsError = false;\r\n        this.aborted = false;\r\n    }\r\n\r\n    total = 0\r\n    updated = 0\r\n    updating = 0\r\n    error = 0\r\n    updateMessage() {\r\n        if (this.tuplepairs) {\r\n            let updated = 0;\r\n            let updating = 0;\r\n            let total = 0;\r\n            let error = 0;\r\n\r\n            this.tuplepairs.forEach(p => {\r\n                total++;\r\n                switch (p.status) {\r\n                    case this.statusUpdated: updated++; break;\r\n                    case this.statusUpdating: updating++; break;\r\n                    case this.statusNoUpdateRequired: updated++; break;\r\n                    case this.statusError: error++;\r\n                }\r\n            }\r\n            );\r\n\r\n            this.total = total\r\n            this.updated = updated\r\n            this.updating = updating\r\n            this.error = error\r\n            this.message = `${total} Invoices `;\r\n            if (updated > 0) {\r\n                this.message += `, ${updated} updated`;\r\n            }\r\n            if (updating > 0) {\r\n                this.message += `, ${updating} in progress`;\r\n            }\r\n            if (error > 0) {\r\n                this.message += `, ${error} errors`;\r\n                this.showMessageAsError = true;\r\n            }\r\n            if (total == updated) {\r\n                this.OnCompleted();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doAssignment(p: SBAssignment) {\r\n        if (this.aborted)\r\n            return;\r\n        this.count++;\r\n        p.status = 'Fetching Invoice';\r\n        if (!p.numToAssign)\r\n            return this.abort(`Softex number not present for record ${this.count}`);\r\n        if (!p.invReference)\r\n            return this.abort(`Invoice number  not present for record ${this.count}`);\r\n        this.fetchInvoice(p)\r\n            .subscribe(\r\n                inv => { this.updateInvoice(p, inv); },\r\n                err => {\r\n                    console.log(`Error while fetching Invoice  ${p.invReference} ${err}`);\r\n                    p.status = this.statusError;\r\n                    this.abort(err);\r\n                },\r\n                () => { }\r\n            );\r\n\r\n    }\r\n\r\n    updateInvoice(p: SBAssignment, inv: Invoice) {\r\n        if (!this.isThisTheCorrectInvoice(p, inv)) {\r\n            this.abort(`Invoice number mismatch ${p.invReference}  and ${inv.invoiceNumber}`);\r\n            return;\r\n        }\r\n        p.invoiceId = inv.id\r\n        if (this.alreadyAssigned(p, inv)) {\r\n            p.status = this.statusNoUpdateRequired;\r\n            this.updateMessage();\r\n            return;\r\n        }\r\n        p.status = this.statusUpdating;\r\n        this.assignAndUpdate(p, inv)\r\n            .subscribe(\r\n                n => { },\r\n                err => {\r\n                    console.log(`Error while updating Invoice  ${inv.invoiceNumber} ${err}`);\r\n                    p.status = this.statusError;\r\n                    this.abort(err);\r\n                },\r\n                () => {\r\n\r\n                    p.status = this.statusUpdated;\r\n                    this.updateMessage();\r\n                }\r\n            );\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  collapsedState = false;\r\n\r\n  onCollapseChanged(collapsedVal: boolean) {\r\n    if (collapsedVal) { // while collapsing move the main content after 250ms\r\n      setTimeout(() => {\r\n        this.collapsedState = collapsedVal;\r\n      }, 250);\r\n    } else {\r\n      this.collapsedState = collapsedVal; // while expanding move the main content immediately\r\n    }\r\n  }\r\n}\r\n","\r\n\r\n<div class=\"gridContainer\">\r\n   \r\n        <div class=\"sidemenu\" [ngClass]=\"{'collapsed': collapsedState}\"    >\r\n            <app-navmenu (collapseChanged)='onCollapseChanged($event)' ></app-navmenu>\r\n        </div>\r\n        <div class=\"main\" [ngClass]=\"{'collapsed': collapsedState}\" >\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n   \r\n</div>","import { Injectable } from '@angular/core';\r\nimport { DataService, UserData } from './data.service';\r\nimport { map, catchError, switchMap } from 'rxjs/operators';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private currentUserSubject: BehaviorSubject<UserData>;\r\n  currentUser: Observable<UserData>;\r\n\r\n  private localStorageKey = 'currentuserdata';\r\n\r\n  constructor(protected data: DataService) {\r\n    // first check if the local storage has previous login information\r\n    const json = localStorage.getItem(this.localStorageKey);\r\n    const olduserdata = json ? (JSON.parse(json) as UserData) : new UserData();\r\n\r\n    this.currentUserSubject = new BehaviorSubject<UserData>(olduserdata);\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n\r\n    this.currentUser.subscribe(userdata => {\r\n      this.data.setHttpAuthorizationHeader(userdata.token);\r\n      localStorage.setItem(this.localStorageKey, JSON.stringify(userdata));\r\n      if (userdata.user) {\r\n        console.log(`${userdata.user} logged in.`);\r\n      } else {\r\n        console.log('Awaiting login');\r\n      }\r\n    });\r\n  }\r\n\r\n  createUser(username: string, fullname:string, password: string, email: string, role: string) {\r\n    return this.data.createUser(username, fullname, password, email, role);\r\n  }\r\n\r\n  updateUser(username: string, fullname:string,  password: string, email: string, role: string) {\r\n    return this.data.updateUser(username, fullname, password, email, role);\r\n  }\r\n\r\n  login(username: string, password: string): Observable<UserData> {\r\n    return this.data.login(username, password).pipe(\r\n      map(userdata => {\r\n        this.currentUserSubject.next(userdata);\r\n        return userdata;\r\n      }),\r\n      catchError(err => {\r\n        console.log(err);\r\n        this.logout();\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.currentUserSubject.next(new UserData());\r\n  }\r\n}\r\n","export interface SPOViewInterface {\r\n    supplierId: number;\r\n    supplierName: string;\r\n    currencyId: number;\r\n    curSymbol: string;\r\n    mantisId: string;\r\n    projectCode: string;\r\n    projectManager: string;\r\n    id: number;\r\n    poIssueDate: Date;\r\n    amount: number;\r\n    description: string;\r\n    poNumber: string;\r\n    completed: number;\r\n  }\r\n  \r\n  export class SPOViewClass implements SPOViewInterface{\r\n    supplierId = 0;\r\n    supplierName = '';\r\n    currencyId = 0;\r\n    curSymbol = '';\r\n    mantisId = '';\r\n    projectCode = '';\r\n    projectManager = '';\r\n    id = 0;\r\n    poIssueDate = new Date();\r\n    amount = 0;\r\n    description = '';\r\n    poNumber = '';\r\n    completed = 0;\r\n\r\n  }\r\n\r\n  export interface SPOView extends SPOViewInterface {\r\n\r\n  }\r\n  ","import { DataService, Client, Currency, Vendor, PurchaseOrder, Fileblob, UserData } from '../data/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { UserService } from '../data/user.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { AttachmentInterface } from '../attachments/attachments.component';\r\nexport class OrderBase {\r\n  clients: Client[] = [];\r\n  clientName = '';\r\n  currencies: Currency[] = [];\r\n  vendors: Vendor[] = [];\r\n  po = new PurchaseOrder();\r\n  get POFile() {\r\n    return this.fileblob.name;\r\n  }\r\n  POFileLink = '';\r\n  fileblob = new Fileblob();\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  showInternalPOEdit = false;\r\n  showUploadPOFile = true; // the original PO upload button is shown always except for internal POs where it is created\r\n  InternalPOEditButtonTitle = '';\r\n  InternalPOEdit = false;\r\n  userData = new UserData();\r\n  showForm = true;\r\n  attachmentIntf: AttachmentInterface = new AttachmentInterface();\r\n\r\n\r\n  InternalPOId = 0; // internal po edit / new\r\n  externalPO: PurchaseOrder = new PurchaseOrder();  // internal po edit / new\r\n  updating = false; // internal po edit new\r\n  extVendor = new Vendor();  // internal po edit new\r\n  endClient = new Client(); // internal po edit new\r\n  extCurSymbol = '';\r\n\r\n  get canModifyPO() {\r\n    return this.userData.purchaseorderPerm.update > 0 ? true : false;\r\n  }\r\n\r\n  poFileToBeUploaded: File | undefined;\r\n\r\n  poNumberPlaceHolder = '';\r\n  showClientSelection = true;\r\n  viewMode: boolean | undefined = undefined;\r\n  showIsCompleted: boolean | undefined = undefined;\r\n\r\n  get currencyName() {\r\n    if (!this.currencies || !this.po.currencyId) {\r\n      return '';\r\n    }\r\n    // tslint:disable-next-line:triple-equals\r\n    const cur = this.currencies.find(c => c.id == this.po.currencyId);\r\n    return cur ? cur.name : '';\r\n  }\r\n\r\n  constructor(\r\n    protected data: DataService,\r\n    protected router: Router,\r\n    protected user: UserService,\r\n    protected location: Location\r\n  ) {\r\n    this.po.isFixedPrice = 0;\r\n    this.po.tandMBillRate = 0;\r\n    this.po.completed = 0;\r\n    this.po.paymentTerms = 15;\r\n\r\n    this.user.currentUser.subscribe(ud => (this.userData = ud), err => this.setError('Connection Errors', err));\r\n\r\n    data.getListOfClients().then(\r\n      res => (this.clients = res.sort((a, b) => (a.name > b.name ? 1 : -1))),\r\n      err => {\r\n        console.log('Error ' + err);\r\n        this.setError('Connection Error: ', err);\r\n      }\r\n    );\r\n\r\n    data.getListOfCurrencies().then(\r\n      cs => (this.currencies = cs),\r\n      err => {\r\n        console.log('Error ' + err);\r\n        this.setError('Connection Error: ', err);\r\n      }\r\n    );\r\n\r\n    data.getListOfVendors().then(\r\n      vs => (this.vendors = vs),\r\n      err => {\r\n        console.log('Error ' + err);\r\n        this.setError('Connection Error: ', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  setError(msg: string, err: any) {\r\n    this.errorMessage = msg + err;\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n  }\r\n\r\n  goToCurrentPO(poid: number, delayTime: number = 2000) {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/')\r\n        .then(b => this.router.navigateByUrl('/order/' + poid));\r\n    }, delayTime);\r\n  }\r\n\r\n  resetForm() {\r\n    setTimeout(() => {\r\n      this.po = new PurchaseOrder();\r\n      this.successMessage = '';\r\n      this.errorMessage = '';\r\n      this.location.back();\r\n    }, 2000);\r\n  }\r\n\r\n  editInternalPO() { }\r\n\r\n  fileUploadChanged(files: any) {\r\n    if (files.length !== 1) {\r\n      return;\r\n    }\r\n    this.poFileToBeUploaded = files[0];\r\n    this.fileblob = new Fileblob();\r\n    // this.upLoadPOFile();\r\n  }\r\n\r\n  setupAttachments(poId: number) {\r\n    // console.log(`setting up attachment interface for ${poId}`);\r\n    const af = new AttachmentInterface();\r\n    af.id = poId;\r\n    af.addAttachment = (id, file) => this.data.addPOattachment(id, file);\r\n    af.getAttachmentDetails = id => this.data.getPOAttachmentList(id);\r\n    af.getAttachmentLink = id => this.data.getPOAttachmentLink(id);\r\n    af.downloadResource = str => this.data.downloadResource(str);\r\n    this.attachmentIntf = af;\r\n  }\r\n\r\n  updateFileblob(onCompletion: () => void = () => { }) {\r\n    if (this.po.id > 0) {\r\n      this.data.getFileblobForPO(this.po.id).subscribe(fb => {\r\n        this.fileblob = fb;\r\n        this.POFileLink = this.data.getPOFileLink(this.po.id);\r\n        onCompletion();\r\n      });\r\n    }\r\n  }\r\n\r\n  async downloadPOFileLinkClicked() {\r\n    if (this.po.id <= 0) {\r\n      console.log('po id is zero');\r\n      return;\r\n    }\r\n    const urlstr = this.data.getPOFileLink(this.po.id);\r\n    const res = await this.data.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, this.POFile);\r\n  }\r\n\r\n  upLoadPOFile() {\r\n    if (this.poFileToBeUploaded) {\r\n      if (this.po.id !== 0) {\r\n        console.log('Uploading PO file ' + this.poFileToBeUploaded.name);\r\n        this.data.uploadPO(this.po.id, this.poFileToBeUploaded).subscribe(\r\n          async e => {\r\n            await this.updateFileblob();\r\n            // this.successMessage = 'PO file uploaded';\r\n          },\r\n          err => {\r\n            this.errorMessage = 'PO file could not be uploaded ' + err;\r\n            throw err;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Client, PurchaseOrder, Vendor } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { InvoiceBase } from './invoiceBase';\r\nimport { Invoice } from '../data/invoice';\r\n\r\n@Component({\r\n  selector: 'app-invoiceinternalnew',\r\n  templateUrl: './invoiceForm.component.html',\r\n  styleUrls: ['./invoiceForm.component.scss']\r\n})\r\nexport class InvoiceInternalNewComponent extends InvoiceBase implements OnInit {\r\n \r\n\r\n  constructor(\r\n    data: DataService,\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    protected location: Location\r\n  ) {\r\n    super(data, router);\r\n    this.viewMode = undefined;\r\n    this.InternalInvoiceEdit = true;\r\n    this.showReceived = false;\r\n    this.buttonTitle = 'Create this Invoice';\r\n    this.formTitle = 'Internal Invoice';\r\n  }\r\n\r\n  ngOnInit() {\r\n    const idstr = this.route.snapshot.paramMap.get('id');\r\n    const id = idstr ? +idstr : 0;\r\n    //  console.log('NG On Init called - invoiceInternalNewComponent');\r\n    this.initialize(id);\r\n    this.isInternalCustomer = true;\r\n  }\r\n\r\n  async initialize(externalInvoiceId: number) {\r\n    try {\r\n      await this.prefillData(externalInvoiceId);\r\n    } catch (e) {\r\n      this.errorMessage = 'Error: Unable to get invoice details ' + e;\r\n      this.resetForm(false);\r\n    }\r\n  }\r\n\r\n  async prefillData(externalInvoiceId: number) {\r\n    // get everything else from invoice Id\r\n    this.externalInvoice = await this.data.getInvoice(externalInvoiceId).toPromise();\r\n    this.InternalInvoiceId = await this.data.getInternalInvoiceForEndInvoice(this.invoice.id).toPromise();\r\n    this.externalPO = await this.data.getPurchaseOrder(this.externalInvoice.purchaseOrderId).toPromise();\r\n    this.externalVendor = await this.data.getVendor(this.externalPO.vendorId);\r\n    if (this.InternalInvoiceId > 0) {\r\n      // there is an internal invoice, so we are updating it now\r\n      this.router.navigateByUrl('/editinternalinvoice/' + externalInvoiceId);\r\n    } else {\r\n      // creating a new internal invoice\r\n      // find the purchase order for this internal invoice\r\n      this.updating = false;\r\n      this.viewMode = false;\r\n      const externalPO = await this.data.getPurchaseOrder(this.externalInvoice.purchaseOrderId).toPromise();\r\n      const internalPOId = await this.data.getInternalPOforEndPO(externalPO.id).toPromise();\r\n      if (internalPOId <= 0) {\r\n        this.errorMessage = 'Internal PO to Tismo India has to be created first.';\r\n        setTimeout(() => {\r\n          this.router.navigateByUrl(`/newinternalpo/${this.externalInvoice.purchaseOrderId}`);\r\n        }, 1500);\r\n        return;\r\n      }\r\n      const internalPO = await this.data.getPurchaseOrder(internalPOId).toPromise();\r\n\r\n      let transferRate = internalPO.amount / externalPO.amount; // fraction transferred to Tismo India - usually 0.90 or 0.75 or 1.0\r\n      if (transferRate > 1.0) {\r\n        transferRate = 1.0\r\n      }\r\n\r\n      this.selectedPo = internalPO;\r\n      this.clientId = this.selectedPo.clientId; // Tismo Inc or Tismo GmbH\r\n      this.client = await this.data.getClient(this.clientId);\r\n      this.clientName = this.client.name;\r\n      //  this.purchaseOrders = [this.selectedPo];\r\n      this.curSymbol = await this.data.getcurSymbol(this.selectedPo.currencyId);\r\n      this.vendor = await this.data.getVendor(this.selectedPo.vendorId); // Tismo India\r\n\r\n      // Only for Tismo India to Tismo GmbH invoices show the tip \r\n      // Period of service should be included in the description\r\n      this.showPeriodOfServiceTip = this.data.isClientTismoGermany(this.client) && this.data.isTismoIndia(this.vendor.id); \r\n\r\n      this.projects = await this.data.getListOfProjectsForClient(this.externalPO.clientId).toPromise();\r\n      this.selectedProject = this.projects.find(p => p.id === this.externalInvoice.projectId);\r\n      this.invoice.receivedDate = new Date(this.externalInvoice.receivedDate);\r\n\r\n      this.invoice.invoiceDate = this.externalInvoice.invoiceDate;\r\n      this.invoice.isExpenseInvoice = this.externalInvoice.isExpenseInvoice;\r\n\r\n      await this.generateInvoiceNumber();\r\n      // this.invoice.invoiceNumber\r\n      //     = await this.data.getNextInvoiceNumber(internalPO.vendorId,\r\n      //         this.invoice.invoiceDate as Date,\r\n      //         this.invoice.isExpenseInvoice).toPromise();\r\n\r\n      this.invoice.amount = this.externalInvoice.amount * (this.externalInvoice.isExpenseInvoice ? 1.0 : transferRate);\r\n      this.invoice.description = this.externalInvoice.description;\r\n      this.invoice.projectId = this.externalInvoice.projectId;\r\n      this.invoice.purchaseOrderId = internalPO.id;\r\n      await this.getExternalInvoiceDetails();\r\n      this.showClientSelection = false;\r\n      this.enableRefreshInvoiceNumber = true;\r\n      this.invoice.paymentTerms = 30; // internal invoice payment terms\r\n    }\r\n  }\r\n\r\n  async getExternalInvoiceDetails() {\r\n    this.endClient = await this.data.getClient(this.externalPO.clientId);\r\n    this.extCurSymbol = await this.data.getcurSymbol(this.externalPO.currencyId);\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    const oldButtonTitle = this.buttonTitle;\r\n    this.buttonTitle = 'Creating Invoice...';\r\n    await this.data\r\n      .addInternalInvoiceForEndInv(this.invoice, this.externalInvoice.id)\r\n      .toPromise()\r\n      .then(\r\n        c => {\r\n          this.successMessage = 'Created internal Invoice ' + this.invoice.invoiceNumber;\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.resetForm(false); // ngOnInit is called when creating new invoice => viewing it\r\n        },\r\n        er => {\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.setError('Could not create internal Invoice', er);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetForm(reInit: boolean) {\r\n    const tout = reInit ? 500 : 2000;\r\n    setTimeout(async () => {\r\n      //    console.log('resetForm-internalNew');\r\n      this.resetUserInputs();\r\n      let invId = this.invoice.id;\r\n      if (this.invoice.id <= 0) {\r\n        const inv = await this.data.getInvoiceForInvoiceNumber(this.invoice.invoiceNumber).toPromise();\r\n        invId = inv.id;\r\n      }\r\n      this.router.navigateByUrl('/editinternalinvoice/' + invId);\r\n      if (reInit) {\r\n        this.ngOnInit();\r\n      }\r\n    }, tout);\r\n  }\r\n\r\n  async refreshInvoiceNumberClicked() {\r\n    await this.generateInvoiceNumber();\r\n  }\r\n\r\n  // resetForm() {\r\n  //     setTimeout(() => {\r\n  //         this.location.back();\r\n  //         this.successMessage = '';\r\n  //         this.errorMessage = '';\r\n  //     }, 2000);\r\n  // }\r\n\r\n  editInternalInvoice() {}\r\n}\r\n","import { BaseIntf } from './data.service';\r\n\r\nexport class Project implements BaseIntf {\r\n    id = 0; // = proj.Id,\r\n    name = ''; // = proj.Name,\r\n    clientId = 0; // = clientMgr.GetClientById(proj.ClientId).Name,\r\n    projectCode = '';\r\n    startDate: Date = new Date(); // = proj.StartDate,\r\n    effort = 0; // in person hours -- 160 person hours in a person month\r\n    duration = 0; // in calendar days -- 30 days in a month\r\n    completed = 0; // = proj.Closed,\r\n    workType = 1; // 1 is development, 2 Maintenance, 4 Testing\r\n    serviceType = 0; // 1 => Electronics 2 => Firmware 4 => Software 8 => Mechanical\r\n\r\n    stpServiceType = 0;\r\n    // 1 => Application Software, 7 => Embedded Software, 8 => Engineering & Design,\r\n    // 14 => Internet Of Things, 15 => IT Enabled services, 22 => Web development, 23 => Others\r\n    billingType = 0; // 0 => not specified, 1 => T and M, 2 => fixed prices\r\n    poId = 0; // purchase order id 0 => not assigned\r\n    medicalClass = 0; // 0 is not medical project, \r\n                     // 1 -> Class A,         2 -> class B,        3 -> class C\r\n                     // 4 —> Class 1 Resuable 5 —> Class 1 Sterile 6 —> Class 1 Measure \r\n                     // 7 —> Class 2A         8 —> Class 2B        9 —> Class 3\r\n    projectManagerId = 0;\r\n    mgmtId = 0;\r\n    clientSponsorId = 0;\r\n    clientManagerId = 0;\r\n    clientCommercialId = 0;\r\n    invoiceCopyTo = '';\r\n    remarks = '';\r\n\r\n    static STPServiceTypeOptions() {\r\n        return [\r\n            { val: 0, str: 'Unknown' },\r\n            { val: 14, str: 'Internet Of Things' },\r\n            { val: 7, str: 'Embedded Software' },\r\n            { val: 8, str: 'Engineering and Design' },\r\n            { val: 1, str: 'Application Software' },\r\n            { val: 22, str: 'Web development' },\r\n            { val: 15, str: 'IT Enabled Services' },\r\n            { val: 23, str: 'Others' },\r\n        ];\r\n    }\r\n\r\n    static getSTPServiceStr( val: number) {\r\n        const t = this.STPServiceTypeOptions().find(s => s.val === val);\r\n        return t ? t.str : '';\r\n    }\r\n\r\n\r\n    static WorkTypeOptions() {\r\n        return [\r\n            { val: 1, str: 'Development' },\r\n            { val: 2, str: 'Maintenance' },\r\n            { val: 4, str: 'Testing' },\r\n        ];\r\n    }\r\n\r\n    // 0 is not medical project, \r\n    // 1 -> Class A,         2 -> class B,        3 -> class C\r\n    // 4 —> Class 1 Reusable 5 —> Class 1 Sterile 6 —> Class 1 Measure \r\n    // 7 —> Class 2A         8 —> Class 2B        9 —> Class 3\r\n    static MedicalClassOptions() {\r\n        return [\r\n            { val: 0, str: 'Non-Medical' },\r\n            { val: 1, str: 'Class A' },\r\n            { val: 2, str: 'Class B' },\r\n            { val: 3, str: 'Class C' },\r\n            { val: 4, str: 'Class 1 Reusable' },\r\n            { val: 5, str: 'Class 1 Sterile' },\r\n            { val: 6, str: 'Class 1 Measure' },\r\n            { val: 7, str: 'Class 2A' },\r\n            { val: 8, str: 'Class 2B' },\r\n            { val: 9, str: 'Class 3' },\r\n        ];\r\n    }\r\n\r\n    static BillingTypes() {\r\n        return [\r\n            { val: 1, str: 'Time and Materials' },\r\n            { val: 2, str: 'Fixed Price'},\r\n        ];\r\n    }\r\n    static getServiceType(electronics: boolean, firmware: boolean,\r\n        software: boolean, mechanical: boolean) {\r\n        let x = 0x00;\r\n        x |= (electronics ? 1 : 0);\r\n        x |= (firmware ? 2 : 0);\r\n        x |= (software ? 3 : 0);\r\n        x |= (mechanical ? 8 : 0);\r\n    }\r\n\r\n    isFixedPrice() {\r\n        return this.billingType === 2;\r\n    }\r\n    isTandM() {\r\n        return this.billingType === 1;\r\n    }\r\n\r\n    isMedical() {\r\n        return (this.medicalClass > 0);\r\n    }\r\n\r\n    // isClassA() {\r\n    //     return (this.medicalClass & 0x01) === 0x01;\r\n    // }\r\n    // isClassB() {\r\n    //     return (this.medicalClass & 0x02) === 0x02;\r\n    // }\r\n    // isClassC() {\r\n    //     return (this.medicalClass & 0x03) === 0x03;\r\n    // }\r\n\r\n    isDevelopment() {\r\n        return (this.workType & 0x01) > 0;\r\n    }\r\n    isMaintenance() {\r\n        return (this.workType & 0x02) > 0;\r\n    }\r\n    isTesting() {\r\n        return (this.workType & 0x04) > 0;\r\n    }\r\n\r\n    setElectronics(electronics: boolean) {\r\n        return (electronics) ? this.serviceType |= 0x01 : this.serviceType &= ~0x01;\r\n    }\r\n    isElectronics() {\r\n        return (this.serviceType & 0x01) > 0;\r\n    }\r\n    setFirmware(firmware: boolean) {\r\n        return (firmware) ? this.serviceType |= 0x02 : this.serviceType &= ~0x02;\r\n    }\r\n    isFirmware() {\r\n        return (this.serviceType & 0x02) > 0;\r\n    }\r\n    setSoftware(software: boolean) {\r\n        return (software) ? this.serviceType |= 0x04 : this.serviceType &= ~0x04;\r\n    }\r\n    isSoftware() {\r\n        return (this.serviceType & 0x04) > 0;\r\n    }\r\n    setMechanical(mechanical: boolean) {\r\n        return (mechanical) ? this.serviceType |= 0x08 : this.serviceType &= ~0x08;\r\n    }\r\n    isMechanical() {\r\n        return (this.serviceType & 0x08) > 0;\r\n    }\r\n\r\n    getEffortInPM(): number { // returns up to 3 decimal places\r\n        return Math.round(this.effort * 1000 / 160.0) / 1000;\r\n    }\r\n    setEffortInPM(personMonths: number): number {\r\n        return (this.effort =  Math.round( personMonths * 160.0 ) );\r\n    }\r\n    getdurationInMonths(): number { // returns up to 2 decimal places\r\n        return Math.round(this.duration * 100 / 30.0) / 100;\r\n    }\r\n    setdurationInMonths(months: number): number {\r\n        return this.duration = Math.round (months * 30.0);\r\n    }\r\n    getPath(): string { return 'Project'; }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SortPipe } from './utils/sort.pipe';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { OrderBookComponent } from './orderbook/orderbook.component';\r\nimport { OrderComponent } from './orderbook/order.component';\r\nimport { OrderNewComponent } from './orderbook/orderNew.component';\r\nimport { NavMenuComponent } from './navmenu/navmenu.component';\r\nimport { DataService } from './data/data.service';\r\nimport { InvoiceService } from './invoices/invoice.service';\r\nimport { ProjectNewComponent } from './projects/projectNew.component';\r\nimport { ProjectListComponent } from './projects/projectList.component';\r\nimport { ProjectComponent } from './projects/project.component';\r\nimport { ClientListComponent } from './clients/clientList.component';\r\nimport { ClientComponent } from './clients/client.component';\r\nimport { ClientNewComponent } from './clients/clientNew.component';\r\nimport { ClientEditComponent } from './clients/clientEdit.component';\r\nimport { InvoiceComponent } from './invoices/invoice.component';\r\nimport { InvoiceListComponent } from './invoices/invoiceList.component';\r\nimport { InvoiceNewComponent } from './invoices/invoiceNew.component';\r\nimport { ProjectEditComponent } from './projects/projectEdit.component';\r\nimport { OrderEditComponent } from './orderbook/orderEdit.component';\r\nimport { InvoiceEditComponent } from './invoices/invoiceEdit.component';\r\nimport { ClientDetailComponent } from './clients/clientDetail.component';\r\n// import { PODetailComponent } from './orderbook/poDetail.component';\r\nimport { OrderInternalNewComponent } from './orderbook/orderInternalNew.component';\r\nimport { OrderInternalEditComponent } from './orderbook/orderInternalEdit.component';\r\nimport { InvoiceInternalNewComponent } from './invoices/invoiceInternalNew.component';\r\nimport { InvoiceInternalEditComponent } from './invoices/invoiceInternalEdit.component';\r\nimport { ContactNewComponent } from './contacts/contactNew.component';\r\nimport { ContactEditComponent } from './contacts/contactEdit.component';\r\nimport { DateselectComponent } from './utils/dateselect.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MonthchartComponent } from './dashboard/monthchart.component';\r\nimport { TwoDigitDateStrPipe } from './utils/TwoDigitDateStrPipe';\r\nimport { DateStrPipe } from './utils/DateStrPipe';\r\nimport { StatusMsgComponent } from './utils/statusmg.component';\r\nimport { ProjectPinComponent } from './projects/projectpin.component';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserService } from './data/user.service';\r\nimport { Authguard } from './data/authguard.service';\r\nimport { ErrorInterceptor } from './data/errorInterceptor.service';\r\nimport { UserComponent } from './user/user.component';\r\nimport { ReceivablesComponent } from './receivables/receivables.component';\r\nimport { ReceivableItemComponent } from './receivables/receivableItem.component';\r\nimport { ClientInvoiceComponent } from './clients/clientinvoice.component';\r\nimport { ClientProjectComponent } from './clients/clientproject.component';\r\nimport { AngularDateHttpInterceptor } from './utils/angulardateinterceptor';\r\nimport { ClientpoComponent } from './clients/clientpo.component';\r\nimport { AttachmentsComponent } from './attachments/attachments.component';\r\nimport { ClientpobothComponent } from './clients/clientpoboth.component';\r\nimport { ProjectEmailComponent } from './projects/projectEmail.component';\r\nimport { SoftexImportComponent } from './invoices/softexImport.component';\r\nimport { SEBRCImportComponent } from './invoices/sebrcImport.component';\r\nimport { SuppliersComponent } from './suppliers/suppliers.component';\r\nimport { SupplierListComponent } from './suppliers/supplierList.component';\r\nimport { SupplierNewComponent } from './suppliers/supplierNew.component';\r\nimport { SupplierContactNewComponent } from './supplierContacts/supplierContactsForm.component';\r\nimport { SupplierContactEditComponent } from './supplierContacts/supplierContactEdit.component';\r\nimport { SupplierDetailsComponent } from './suppliers/supplierDetails.component';\r\nimport { SupplierEditComponent } from './suppliers/supplierEdit.component';\r\nimport { SupplierpoComponent } from './suppliers/supplierpo.component';\r\nimport { SupplierOrderFormComponent } from './supplierOrders/supplierOrderForm.component';\r\nimport { SupplierEditOrderComponent } from './supplierOrders/supplierEditOrder.component';\r\nimport { SupplierInvoiceFormComponent } from './supplierInvoices/supplierInvoiceForm.component';\r\nimport { SupplierInvoiceEditComponent } from './supplierInvoices/supplierInvoiceEdit.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'orderbook', component: OrderBookComponent, canActivate: [Authguard] },\r\n  { path: 'neworder', component: OrderNewComponent, canActivate: [Authguard] },\r\n  { path: 'neworder/:clientId', component: OrderNewComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'order/:id', component: OrderEditComponent, canActivate: [Authguard] },\r\n  { path: 'newinternalpo/:id', component: OrderInternalNewComponent, canActivate: [Authguard] },\r\n  { path: 'editinternalpo/:id', component: OrderInternalEditComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'projectlist', component: ProjectListComponent, canActivate: [Authguard] },\r\n  { path: 'newproject', component: ProjectNewComponent, canActivate: [Authguard] },\r\n  { path: 'newproject/:clientId', component: ProjectNewComponent, canActivate: [Authguard] }, // new project on an existing client\r\n  { path: 'project/:id', component: ProjectEditComponent, canActivate: [Authguard] },\r\n  { path: 'projectpin/:id', component: ProjectPinComponent, canActivate: [Authguard] }, // view project pin\r\n\r\n  { path: 'clientlist', component: ClientListComponent, canActivate: [Authguard] },\r\n  { path: 'newclient', component: ClientNewComponent, canActivate: [Authguard] },\r\n  { path: 'client/:id', component: ClientEditComponent, canActivate: [Authguard] },\r\n  { path: 'clienttrack/:id', component: ClientDetailComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'invoicelist', component: InvoiceListComponent, canActivate: [Authguard] },\r\n  { path: 'newinvoice', component: InvoiceNewComponent, canActivate: [Authguard] },\r\n  { path: 'invoice/:id', component: InvoiceEditComponent, canActivate: [Authguard] },\r\n  { path: 'newinternalinvoice/:id', component: InvoiceInternalNewComponent, canActivate: [Authguard] },\r\n  { path: 'editinternalinvoice/:id', component: InvoiceInternalEditComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'receivables', component: ReceivablesComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'softeximport', component: SoftexImportComponent, canActivate: [Authguard] },\r\n  { path: 'ebrcimport', component: SEBRCImportComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'newcontact/:id', component: ContactNewComponent, canActivate: [Authguard] }, // id of the client\r\n  { path: 'editcontact/:id', component: ContactEditComponent, canActivate: [Authguard] }, // id of the contact to edie\r\n\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [Authguard] },\r\n\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'createuser', component: UserComponent, canActivate: [Authguard] },\r\n  { path: 'suppliers', component: SuppliersComponent, canActivate: [Authguard] },\r\n  { path: 'supplierlist', component: SupplierListComponent, canActivate: [Authguard] },\r\n  { path: 'newsupplier', component: SupplierNewComponent, canActivate: [Authguard] },\r\n  { path: 'supplier/:id', component: SupplierEditComponent , canActivate: [Authguard] },\r\n  { path: 'suppliernewcontact/:id', component: SupplierContactNewComponent, canActivate: [Authguard] }, // id of the supplier\r\n  { path: 'suppliereditcontact/:id', component: SupplierContactEditComponent, canActivate: [Authguard] }, // id of the supplierContact\r\n  { path: 'suppliertrack/:id', component: SupplierDetailsComponent, canActivate: [Authguard] },\r\n  { path: 'supplierneworder/:supplierId', component: SupplierOrderFormComponent, canActivate: [Authguard] },\r\n  { path: 'supplierorder/:id', component: SupplierEditOrderComponent, canActivate: [Authguard] },   \r\n  { path: 'newsupplierinvoice', component: SupplierInvoiceFormComponent, canActivate: [Authguard] },\r\n  { path: 'supplierinvoice/:id', component: SupplierInvoiceEditComponent, canActivate: [Authguard] },\r\n\r\n\r\n  { path: '**', component: ClientListComponent, canActivate: [Authguard] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    OrderBookComponent,\r\n    OrderComponent,\r\n    OrderNewComponent,\r\n    OrderEditComponent,\r\n    OrderInternalNewComponent,\r\n    OrderInternalEditComponent,\r\n\r\n    ProjectNewComponent,\r\n    ProjectListComponent,\r\n    ProjectEditComponent,\r\n    ProjectComponent,\r\n    ProjectPinComponent,\r\n    ProjectEmailComponent,\r\n\r\n    ClientListComponent,\r\n    ClientComponent,\r\n    ClientInvoiceComponent,\r\n    ClientNewComponent,\r\n    ClientEditComponent,\r\n    ClientDetailComponent,\r\n    ClientProjectComponent,\r\n    ClientpoComponent,\r\n    ClientpobothComponent,\r\n\r\n    InvoiceComponent,\r\n    InvoiceListComponent,\r\n    InvoiceNewComponent,\r\n    InvoiceEditComponent,\r\n    InvoiceInternalNewComponent,\r\n    InvoiceInternalEditComponent,\r\n\r\n    ContactNewComponent,\r\n    ContactEditComponent,\r\n    SortPipe,\r\n    DateStrPipe,\r\n    TwoDigitDateStrPipe,\r\n\r\n    DateselectComponent,\r\n    DashboardComponent,\r\n    MonthchartComponent,\r\n\r\n    StatusMsgComponent,\r\n    LoginComponent,\r\n    UserComponent,\r\n    ReceivablesComponent,\r\n    ReceivableItemComponent,\r\n    SoftexImportComponent,\r\n    SEBRCImportComponent,\r\n    AttachmentsComponent,\r\n    SuppliersComponent,\r\n    SupplierListComponent,\r\n    SupplierNewComponent,\r\n    SupplierEditComponent,\r\n    SupplierContactNewComponent,\r\n    SupplierContactEditComponent,\r\n    SupplierDetailsComponent,\r\n    SupplierpoComponent,\r\n    SupplierOrderFormComponent,\r\n    SupplierEditOrderComponent,\r\n    SupplierInvoiceFormComponent,\r\n    SupplierInvoiceEditComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes, { enableTracing: false, onSameUrlNavigation: 'reload' })\r\n  ],\r\n\r\n  providers: [\r\n    HttpClientModule,\r\n    DataService,\r\n    UserService,\r\n    InvoiceService,\r\n    SortPipe,\r\n    Authguard,\r\n    { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] },\r\n\r\n    { provide: HTTP_INTERCEPTORS, useClass: AngularDateHttpInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data/data.service';\nimport { UserService } from '../data/user.service';\nimport { Location } from '@angular/common';\nimport { SupplierOrderBase } from './supplierOrderBase';\n\n@Component({\n  selector: 'app-supplier-order-form',\n  templateUrl: './supplierOrderForm.component.html',\n  styleUrls: ['./supplierOrderForm.component.scss']\n})\nexport class SupplierOrderFormComponent extends SupplierOrderBase implements OnInit {\n\n  buttonTitleStr = 'Create this Purchase Order';\n  get buttonTitle() { return this.buttonTitleStr }\n  get formTitle() { return 'New Purchase Order' }\n\n  constructor(data: DataService, protected router: Router, protected user: UserService,\n    protected location: Location, private route: ActivatedRoute) {\n    super(data, router, user, location);\n   }\n\n  async ngOnInit() {\n    const supplierIdStr = this.route.snapshot.paramMap.get('supplierId');\n    const supplierId = supplierIdStr ? + supplierIdStr : 0;\n    if(supplierId>0){\n      this.spo.supplierId = supplierId;\n      this.supplierName = (await this.data.getSupplier(supplierId)).name;\n      this.showSupplierSelection = false;\n    }\n  }\n  onSubmit() {\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.spo.completed = this.spo.completed ? 1 : 0;\n    console.log(\n        'Submitting new PO' + this.spo.supplierId,\n        this.spo.amount,\n        this.spo.poIssueDate,\n        this.spo.currencyId,\n        this.spo.description,\n        this.spo.completed\n    );\n    this. buttonTitleStr = \"Creating PO...\";\n    console.log(this.spo)\n    this.data.addSupplierPurchaseOrder(this.spo).subscribe(\n        spoid => {\n            this.spo.id = spoid;\n            this.setupAttachments(this.spo.id);\n            this.successMessage = 'Uploading PO file ' + this.spo.poNumber;\n            this.upLoadSPOFile();\n            this.successMessage = 'Created PO ' + this.spo.poNumber;\n            this.goToCurrentSPO(spoid);\n        },\n        err => {\n            console.log(err);\n            this.setError('Could not create PO: Error: ', err);\n        }\n    );\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Project } from '../data/project';\r\nimport { DataService, Manager, PurchaseOrder, Contact } from '../data/data.service';\r\n\r\n@Component({\r\n    selector: 'app-projectemail',\r\n    templateUrl: './projectemail.component.html',\r\n    styleUrls: ['./projectemail.component.scss']\r\n})\r\nexport class ProjectEmailComponent implements OnInit {\r\n    @Input()\r\n    project!: Project \r\n\r\n    get clientEmailStr() {\r\n        return this.strs.join(', ')\r\n    }\r\n    get ccEmailStr() {\r\n        let set = new Set( [this.managerEmail, this.mgmtEmail, ...this.ccEmails ].map(str => str.trim()) )\r\n        let lst = Array.from(set)\r\n        lst = lst.filter(s => s)\r\n        return lst.join(', ')\r\n    }\r\n\r\n    mgmtEmail = '';\r\n    managerEmail = '';\r\n    ccEmails:string[] = [];\r\n\r\n    strs:string[] = []\r\n    ngOnInit(): void {\r\n        let ids = new Set( [this.project.clientSponsorId, this.project.clientManagerId, this.project.clientCommercialId] )\r\n        ids.forEach(id => this.getContactEmailStr(id, str => this.strs.push(str)) )\r\n\r\n        this.data.getListOfManagers()\r\n            .subscribe(mgrs => this.processMgrs(mgrs))\r\n    \r\n        this.ccEmails = this.project.invoiceCopyTo.trim().split(',')\r\n        console.log(this.ccEmails)\r\n            \r\n    }\r\n\r\n    getContactEmailStr(contactId: number,  action: (str:string) => void ): void {\r\n        if (contactId > 0) {\r\n            this.data.getContact(contactId)\r\n                .subscribe(c => action(this.contactEmailStr(c)))\r\n        }\r\n    }\r\n\r\n    processMgrs(mgrs: Manager[]): void {\r\n        if (this.project) {\r\n            let pmid = this.project.projectManagerId\r\n            let mgmtid = this.project.mgmtId\r\n            let mgr = mgrs.find(m => m.id == pmid )\r\n            if (mgr) {\r\n                this.managerEmail = mgr.email; // this.emailStr(mgr.name, mgr.email);\r\n            }\r\n            let mgmt = mgrs.find(m => m.id ==  mgmtid)\r\n            if (mgmt) {\r\n                this.mgmtEmail = mgmt.email; // this.emailStr(mgmt.name, mgmt.email);\r\n            }\r\n        }\r\n    }\r\n\r\n    contactEmailStr(contact: Contact): string {\r\n        return this.emailStr(contact.name, contact.email);\r\n    }\r\n\r\n    emailStr(name: string, email: string): string {\r\n        return `${name}<${email}>`;\r\n    }\r\n\r\n    constructor(protected data: DataService) {\r\n       \r\n    }\r\n    \r\n}\r\n\r\n","<div class='gridcontainer'  >\r\n    <span class=\"material-icons emailicon\">\r\n    mail_outline\r\n    </span>\r\n    <div class=\"clientemails\">\r\n          To:  {{clientEmailStr}}\r\n    </div>\r\n\r\n    <div class=\"tismoemails \">\r\n       Cc:  {{ccEmailStr}}\r\n    </div>\r\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Utils } from '../utils/utils';\r\nimport { ProjectViewModel } from '../data/ProjectViewModel';\r\n\r\n\r\n@Component({\r\n    selector: 'app-project',\r\n    templateUrl: './project.component.html',\r\n    styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n\r\n    @Input()\r\n    pvmodel: ProjectViewModel | null = null;\r\n\r\n    @Output()\r\n    headerClicked: EventEmitter<string> = new EventEmitter();\r\n\r\n    noInvoiceInLongTime = false;\r\n    status = '';\r\n\r\n    OnHeaderClicked(headerName: string) {\r\n        this.headerClicked.emit(headerName);\r\n    }\r\n    ngOnInit(): void {\r\n        if (this.pvmodel) {\r\n            if (ProjectViewModel.firstInvoiceIsOverdue(this.pvmodel, 0)) {\r\n                this.noInvoiceInLongTime = true;\r\n                this.status = 'First invoice pending';\r\n            } else if (ProjectViewModel.nextInvoiceOverdue(this.pvmodel, 3)) {\r\n                this.noInvoiceInLongTime = true;\r\n                this.status = 'Last invoiced ' + ProjectViewModel.lastInvoicedDateStr(this.pvmodel);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class='gridContainer' [ngClass]=\"{'header text-secondary': !pvmodel}\" >\r\n    <div class=\"clientName text-secondary \">\r\n        <a *ngIf=\"pvmodel\" routerLink=\"/clienttrack/{{pvmodel.client.id}}\">\r\n            {{pvmodel.client.name}}, {{pvmodel.client.country}}</a>\r\n            <div *ngIf=\"!pvmodel\" (click)=\"OnHeaderClicked('client')\">Client</div>\r\n        </div>\r\n\r\n    <div class=\"projectCode text-secondary \">\r\n        <a *ngIf=\"pvmodel\" routerLink=\"/project/{{pvmodel.project.id}}\">\r\n            {{pvmodel.project.projectCode}}\r\n        </a>\r\n        <div *ngIf=\"!pvmodel\" (click)=\"OnHeaderClicked('projectCode')\" >Project</div>\r\n    </div>\r\n\r\n    <div *ngIf=\"pvmodel\" class=\"projectName text-secondary \"> {{pvmodel.project.name}}</div>\r\n    <div *ngIf=\"!pvmodel\" class=\"projectName text-secondary \" (click)=\"OnHeaderClicked('projectname')\"  >Description</div>\r\n\r\n    <div *ngIf=\"pvmodel\" class=\"projectStart text-secondary \"> {{pvmodel.project.startDate | date: 'dd MMM yyyy'}}</div>\r\n    <div *ngIf=\"!pvmodel\" class=\"projectStart text-secondary \" (click)=\"OnHeaderClicked('startdate')\"  >Start Date</div>\r\n\r\n    <div *ngIf=\"pvmodel\" class=\"accountManager text-secondary \"> {{pvmodel.accountManager}}</div>\r\n    <div *ngIf=\"!pvmodel\" class=\"accountManager text-secondary \" (click)=\"OnHeaderClicked('accountManager')\">Account Manager</div>\r\n\r\n    <div *ngIf=\"pvmodel\" class=\"projectManager text-secondary \"> {{pvmodel.projectManager}}</div>\r\n    <div *ngIf=\"!pvmodel\" class=\"projectManager text-secondary \" (click)=\"OnHeaderClicked('projectManager')\">Project Manager</div>\r\n\r\n    <div class='invoicingstatus' [ngClass]=\"{  'notInvoiced' : noInvoiceInLongTime }\" (click)=\"OnHeaderClicked('invoicingstatus')\">\r\n        {{status}}</div>\r\n\r\n</div>","import { Project } from './project';\r\nimport { Invoice } from './invoice';\r\nimport { Client } from './data.service';\r\nimport { Utils } from '../utils/utils';\r\n\r\nexport class ProjectViewModel {\r\n  project: Project = new Project();\r\n  client: Client = new Client();\r\n  invoices: Invoice[] = [];\r\n\r\n  accountManager = '';\r\n  projectManager = '';\r\n\r\n  static lastInvoicedDateStr(pv: ProjectViewModel): string {\r\n    const inv = ProjectViewModel.lastInvoice(pv);\r\n    return inv ? Utils.getDateStr(inv.invoiceDate) : '';\r\n  }\r\n  static lastInvoice(pv: ProjectViewModel ): Invoice | null {\r\n    if (pv.invoices.length <= 0) { return null; }\r\n    pv.invoices = pv.invoices.sort((a, b) => a.invoiceDate > b.invoiceDate ? -1 : 1);\r\n    return pv.invoices[0];\r\n  }\r\n  static hasNoInvoice(pv: ProjectViewModel): boolean {\r\n    return (pv.invoices.length <= 0);\r\n  }\r\n\r\n  static firstInvoiceIsOverdue(pv: ProjectViewModel, months: number): boolean {\r\n    if (pv.project.completed) { return false; } // for completed projects nothing is due\r\n    if (this.hasNoInvoice(pv)) {\r\n      return Utils.isOlderThanNMonths(pv.project.startDate, months);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static nextInvoiceOverdue(pv: ProjectViewModel, months: number): boolean {\r\n    if (pv.project.completed) { return false; } // for completed projects nothing is due\r\n    const lastInvoice = ProjectViewModel.lastInvoice(pv);\r\n    if (lastInvoice != null) {\r\n      return Utils.isOlderThanNMonths(lastInvoice.invoiceDate, months);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Project } from '../data/project';\r\nimport { DataService, Manager, PurchaseOrder, Contact } from '../data/data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Utils } from '../utils/utils';\r\nimport html2pdf from 'html2pdf.js';\r\n\r\n@Component({\r\n    selector: 'app-projectpin',\r\n    templateUrl: './projectpin.component.html',\r\n    styleUrls: ['./projectpin.component.scss']\r\n})\r\nexport class ProjectPinComponent implements OnInit {\r\n    project = <Project>{\r\n        id: 0,\r\n        name: 'projectName',\r\n        clientId: 0,\r\n        projectCode: 'TDummy',\r\n        startDate: new Date(),\r\n        effort: 10,\r\n        duration: 30,\r\n        completed: 0,\r\n        workType: 1,\r\n        serviceType: 0,\r\n        stpServiceType: 0,\r\n        medicalClass: 0,\r\n        projectManagerId: 0,\r\n        mgmtId: 0,\r\n        clientSponsorId: 0,\r\n        clientManagerId: 0,\r\n        clientCommercialId: 0,\r\n    };\r\n\r\n    effort = '';\r\n    duration = '';\r\n    development = ' ';\r\n    maintenance = ' ';\r\n    testing = ' ';\r\n\r\n    electronics = ' ';\r\n    firmware = ' ';\r\n    software = ' ';\r\n    mechanical = ' ';\r\n    fixedprice = ' ';\r\n    tandm = ' ';\r\n    // classA = ' ';\r\n    // classB = ' ';\r\n    // classC = ' ';\r\n\r\n    isMedicalProject = false;\r\n    medicalClass = ' ';\r\n\r\n    companyName = '';\r\n    webSite = '';\r\n    poNumber = '';\r\n    poDate = '';\r\n    customerId = '';\r\n\r\n    projectManager = '';\r\n    managementRep = '';\r\n    errorMessage = '';\r\n    successMessage = '';\r\n\r\n    invoicePaymentTerms = 15;\r\n    dateOfInitiation = '';\r\n\r\n    initiatedBy = '';\r\n    contactList: ContactInfoView[] = [];\r\n    invoiceCopyTo = '';\r\n\r\n    constructor(protected data: DataService, protected route: ActivatedRoute) {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        if (idstr) {\r\n            const id = +idstr;\r\n            this.data.getProject(id)\r\n                .subscribe(proj => this.setupProject(proj),\r\n                    err => { console.log(err); this.setError(err); });\r\n        }\r\n\r\n    }\r\n\r\n    getMedicalClassString(proj: Project) {\r\n        let t = Project.MedicalClassOptions()\r\n                       .find(item => item.val == proj.medicalClass)\r\n      \r\n        return t ? t.str\r\n                 : Project.MedicalClassOptions()[0].str\r\n        // Non-medical\r\n    }\r\n    setupProject(proj: Project) {\r\n        const tickmark = 'done'; // for material icons 'done' is the text to show a tickmark\r\n        const notapplicable = 'remove'; // for material icons 'remove' is the text to show a dash\r\n        this.project = new Project();\r\n        Object.assign(this.project, proj);\r\n        this.effort = this.project.getEffortInPM().toString() + ' person-months';\r\n        this.duration = this.project.getdurationInMonths().toString() + ' calendar-months';\r\n        this.electronics = this.project.isElectronics() ? tickmark : ' ';\r\n        this.firmware = this.project.isFirmware() ? tickmark : ' ';\r\n        this.software = this.project.isSoftware() ? tickmark : ' ';\r\n        this.mechanical = this.project.isMechanical() ? tickmark : ' ';\r\n        this.development = this.project.isDevelopment() ? tickmark : ' ';\r\n        this.maintenance = this.project.isMaintenance() ? tickmark : ' ';\r\n        this.testing = this.project.isTesting() ? tickmark : ' ';\r\n\r\n        this.isMedicalProject = this.project.isMedical();\r\n        this.medicalClass = this.getMedicalClassString(this.project);\r\n        // this.classA = this.project.isMedical() ? (this.project.isClassA() ? tickmark : ' ') : notapplicable;\r\n        // this.classB = this.project.isMedical() ? (this.project.isClassB() ? tickmark : ' ') : notapplicable;\r\n        // this.classC = this.project.isMedical() ? (this.project.isClassC() ? tickmark : ' ') : notapplicable;\r\n        this.fixedprice = this.project.isFixedPrice() ? tickmark : ' ';\r\n        this.tandm = this.project.isTandM() ? tickmark : ' ';\r\n        this.invoiceCopyTo = this.project.invoiceCopyTo;\r\n\r\n        if (this.project.projectManagerId > 0) {\r\n            this.data.getById<Manager>(Manager, this.project.projectManagerId)\r\n                .subscribe(mgr => this.projectManager = mgr.name);\r\n        }\r\n\r\n        if (this.project.mgmtId > 0) {\r\n            this.data.getById<Manager>(Manager, this.project.mgmtId)\r\n                .subscribe(mgr => { this.managementRep = mgr.name; this.initiatedBy = mgr.name; });\r\n        }\r\n        this.dateOfInitiation = Utils.getDateStr(this.project.startDate);\r\n        if (this.project.poId > 0) {\r\n            this.data.getById<PurchaseOrder>(PurchaseOrder, this.project.poId)\r\n                .subscribe(po => {\r\n                    this.poNumber = po.poNumber;\r\n                    this.poDate = Utils.getDateStr(po.poDate);\r\n                    this.invoicePaymentTerms = po.paymentTerms;\r\n                    const now = new Date();\r\n                    const earlierThan = (first: Date, otherDate: Date) => first.getTime() <= otherDate.getTime();\r\n                    const pindate = earlierThan(now, this.project.startDate) ? now : this.project.startDate;\r\n                    this.dateOfInitiation = Utils.getDateStr(pindate);\r\n                });\r\n        }\r\n\r\n        this.data.getClient(this.project.clientId)\r\n            .then(cl => {\r\n                this.companyName = cl.name;\r\n                this.webSite = '';\r\n                this.customerId = cl.customerCode;\r\n            });\r\n\r\n        const fill = (label: string, ct: Contact) => {\r\n            const ctv = new ContactInfoView(label);\r\n            Object.assign(ctv, ct);\r\n            \r\n            // split the address string \r\n            // so that each address line will be on a separate line\r\n            ctv.addresslines = ctv.address.split('\\n');\r\n           \r\n            return ctv;\r\n        };\r\n        this.data.getById<Contact>(Contact, this.project.clientManagerId)\r\n            .subscribe(ct => this.contactList.push(fill('Client Project Manager', ct)));\r\n\r\n        this.data.getById<Contact>(Contact, this.project.clientSponsorId)\r\n            .subscribe(ct => this.contactList.push(fill('Project Sponsor', ct)));\r\n\r\n        this.data.getById<Contact>(Contact, this.project.clientCommercialId)\r\n            .subscribe(ct => this.contactList.push(fill('Commercial Manager', ct)));\r\n\r\n    }\r\n    setError(err: any) {\r\n        this.errorMessage = 'Error: Could not update. ';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    OnSaveToPDF() {\r\n        const element = document.getElementById('elementtoprint');\r\n        if (!element) { return; }\r\n        const opt = {\r\n            margin: 0.5,\r\n            filename: this.customerId + '_PIN_' + this.project.projectCode + '.pdf',\r\n            html2canvas: {\r\n                 windowWidth:  element.scrollWidth,\r\n                // windowHeight: element.scrollHeight,\r\n                // backgroundColor: null, // transparent\r\n                scale: 2,\r\n            },\r\n            jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }\r\n        };\r\n\r\n        console.log('OnSaveToPDF: ' + opt.filename);\r\n        html2pdf(element, opt);\r\n\r\n    }\r\n\r\n}\r\nclass ContactInfoView extends Contact {\r\n    constructor(public label: string) {\r\n        super();\r\n    }\r\n    addresslines : string[] = []\r\n}\r\n\r\n\r\n","\r\n\r\n<div class='gridcontainer' id=\"elementtoprint\" >\r\n\r\n<div class='pintitle'>Project Initiation Note (PIN)</div>\r\n\r\n<div class='logo'><img class='logoImg'  src=\"/assets/images/TismoLogoSmall.png\" align=\"right\" /></div>\r\n\r\n<div class=\"projectInfo\">\r\n    <div class='lblProjectName' > Project Name</div>\r\n    <div class='ProjectName'>{{project.name}}</div>\r\n\r\n    <div class='lblProjectCode'> Project Code</div>\r\n    <div class='ProjectCode'>{{project.projectCode}}</div>\r\n\r\n\r\n    <div class='lblStartDate'> Start Date</div>\r\n    <div class='StartDate'>{{project.startDate | dateStr }}</div>\r\n\r\n\r\n    <div class='lblDuration'> Duration</div>\r\n    <div class='Duration'>{{duration}}</div>\r\n    <!-- <div class='calmonths'>calendar-months</div> -->\r\n    \r\n\r\n    <div class='lblEffort'> Effort Estimate</div>\r\n    <div class='Effort'>{{effort}}</div>    \r\n    <!-- <div class='permonths'>person-months</div> -->\r\n\r\n</div>\r\n\r\n<div class=\"dummy\"></div>\r\n\r\n<div class='projectType'>\r\n    <div class='lblProjectType'>Project Type</div>\r\n    <div class='workType'>\r\n        <div class='lblDevelopment'> Development</div>\r\n        <div class='Development'> <i class=\"material-icons tickmark \">{{development}}</i></div>\r\n        <div class='lblMaintenance'> Maintenance</div>\r\n        <div class='Maintenance'> <i class=\"material-icons  tickmark\">{{maintenance}}</i></div>\r\n        <div class='lblTesting'> Testing</div>\r\n        <div class='Testing'> <i class=\"material-icons tickmark\">{{testing}}</i></div>\r\n    </div>\r\n\r\n    <div class='techType'>\r\n        <div class='lblElectronics'>Electronics</div>\r\n        <div class='Electronics'> <i class=\"material-icons tickmark\">{{electronics}}</i></div>\r\n        <div class='lblFirmware'>Firmware</div>\r\n        <div class='Firmware'><i class=\"material-icons tickmark\">{{firmware}}</i></div>\r\n        <div class='lblSoftware'>Software</div>\r\n        <div class='Software'><i class=\"material-icons tickmark\">{{software}}</i></div>\r\n        <div class='lblMechanical'>Mechanical</div>\r\n        <div class='Mechanical'><i class=\"material-icons tickmark\">{{mechanical}}</i></div>\r\n    </div>\r\n\r\n    <div class='priceType'>\r\n        <div class='lblFixedPrice'> Fixed Price </div>\r\n        <div class='FixedPrice'><i class=\"material-icons tickmark\">{{fixedprice}}</i></div>\r\n        <div class='lblTandM'> T and M </div>\r\n        <div class='TandM'><i class=\"material-icons tickmark\">{{tandm}}</i></div>\r\n\r\n    </div>\r\n    <div class='medicalType'>\r\n        <div *ngIf='isMedicalProject' class='lblMedicalClass'>Medical Device </div>\r\n        <div class='medicalClass'>{{medicalClass}}</div>\r\n        <!-- <div class='ClassA'><i class=\"material-icons tickmark\"> {{classA}}</i></div>\r\n        <div class='lblClassB'>Class B</div>\r\n        <div class='ClassB'><i class=\"material-icons tickmark\"> {{classB}} </i></div>\r\n        <div class='lblClassC'>Class C</div>\r\n        <div class='ClassC'><i class=\"material-icons tickmark\"> {{classC}}</i></div> -->\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class='resources'>\r\n    <div class='lblResources'>Resources</div>\r\n    <div class='lblProjectManager'>Project Manager</div>\r\n    <div class='ProjectManager'>{{projectManager}}</div>\r\n    <div class='lblManagementRep'>Management Rep</div>\r\n    <div class='ManagementRep'>{{managementRep}}</div>\r\n\r\n</div>\r\n\r\n<div class='customerInformation'>\r\n    <div class='lblCustomerInfo'>Customer Information</div>\r\n    <div class='lblCompanyName'>Company Name</div>\r\n    <div class='CompanyName'> {{companyName}} </div>\r\n    <!-- <div class='lblWebSite'>Web Site</div> -->\r\n    <!-- <div class='WebSite'>{{webSite}}</div> -->\r\n    <div class='lblPONo'>PO Number</div>\r\n    <div *ngIf='poNumber' class='PoNumber'>{{poNumber}}, dated {{poDate}}</div>\r\n    <div class='lblCustomerId'>Customer code</div>\r\n    <div class='CustomerId'>{{customerId}}</div>\r\n\r\n\r\n<div class='contactinfo' >\r\n    <div class='contactgrid'*ngFor=\"let contact of contactList\">\r\n        <div class='contactLabel'>{{contact.label}}</div>\r\n        <div class='lblName'>Name</div>\r\n        <div class='Name'>{{contact.name}}</div>\r\n        <div class='lblTitle'>Title</div>\r\n        <div class='Title'>{{contact.title}}</div>\r\n        <div class='lblEmail'>Email</div>\r\n        <div class='Email'>{{contact.email}}</div>\r\n        <div class='lblTelephone'>Telephone</div>\r\n        <div class='Telephone'>{{contact.telephone}}</div>\r\n        <div class='lblAddress'>Address</div>\r\n        <div class='Address'> \r\n            <div *ngFor=\"let addressline of contact.addresslines\">{{addressline}}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class='lblInvoiceCopyTo'>Invoice Copy To</div>\r\n<div class='InvoiceCopyTo'>{{invoiceCopyTo}}</div>\r\n<div class='lblPaymentTerms'>Invoice Payment Terms</div>\r\n<div class='PaymentTerms'>{{invoicePaymentTerms}} days</div>\r\n<div class='lblDateOfInitiation'>Date of Initiation</div>\r\n<div class='DateOfInitiation'>{{dateOfInitiation}}</div>\r\n<div class='lblInitiatedBy'>Initiated By</div>\r\n<div class='InitiatedBy'>{{initiatedBy}}</div>\r\n\r\n\r\n</div>\r\n\r\n<div class='notes'>\r\n    <div class='lblnotes'>Notes</div>\r\n    <div class='remarks'>{{project.remarks}}</div>\r\n</div>\r\n\r\n<div *ngIf=\"successMessage\" class=\"Success hrline\"> {{successMessage}} </div>\r\n<div *ngIf=\"errorMessage\" class=\"Errors hrline\"> {{errorMessage}} </div>\r\n\r\n</div>\r\n<div class='Save btn btn-success' (click)=\"OnSaveToPDF()\">Generate PDF</div>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, PurchaseOrder } from '../data/data.service';\r\n\r\nimport { SortPipe } from '../utils/sort.pipe';\r\nimport { POViewInterface, POViewWithBalance } from '../data/POViewInterface';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Utils } from '../utils/utils';\r\n\r\n\r\ninterface IDictionary {\r\n    [index: string]: boolean;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'app-orderbook',\r\n    templateUrl: './orderbook.component.html',\r\n    styleUrls: ['./orderbook.component.scss'],\r\n})\r\nexport class OrderBookComponent implements OnInit {\r\n    orders: POViewWithBalance[] = []; // filtered list\r\n    ordersMainList: POViewWithBalance[] = [];\r\n    filterTerm = '';\r\n\r\n    balanceInUSD = '';\r\n    potype = 'EndClientPOs';\r\n    errorMessage = '';\r\n    progressMessage = '';\r\n    sortState = {} as IDictionary;\r\n    constructor(private data: DataService, private sortpipe: SortPipe) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.progressMessage = 'Fetching purchase orders';\r\n        this.data\r\n          .getListOfActiveEndClientPurchaseOrders()\r\n          .subscribe(\r\n            pv => pv.forEach(p => this.addToMainList(p)),\r\n            err => {\r\n              this.errorMessage = 'Connection Errors';\r\n              this.progressMessage = '';\r\n              console.log(err);\r\n            },\r\n            () => (this.progressMessage = '') // on completion\r\n          );\r\n    }\r\n\r\n  \r\n\r\n    filterTermChanged(newSrchTerm: string) {\r\n        this.filterTerm = newSrchTerm;\r\n        this.updateFilteredList();\r\n\r\n    }\r\n\r\n    getSearchFilter() {\r\n        if (!this.filterTerm || this.filterTerm.length < 2) {\r\n            return () => true;\r\n        }\r\n        const srchTarget = (po: POViewInterface) =>\r\n            [po.poNumber,\r\n            po.description,\r\n            po.clientName,\r\n            // po.clientCountry,\r\n            po.poDate,\r\n            po.amount,\r\n            po.vendorName,\r\n            // po.extPO.extPOClientName,\r\n            // po.extPO.extPONumber,\r\n            ].join(' ');\r\n\r\n        const regEx = new RegExp(this.filterTerm, 'i');\r\n\r\n        return (po: any) => regEx.test(srchTarget(po));\r\n    }\r\n\r\n    // private isInternalPO(po: POViewInterface) {\r\n    //     return po.extPO.extPOId > 0;\r\n    // }\r\n\r\n\r\n    \r\n    private addToMainList(pv: POViewInterface) {\r\n        this.data.getPOViewWithBalance(pv)\r\n            .then(pvb => {\r\n                this.ordersMainList.push(pvb);\r\n                this.updateFilteredList();\r\n            });\r\n    }\r\n\r\n    private updateFilteredList() {\r\n        this.orders = this.ordersMainList\r\n                          .filter(this.getFilter())\r\n                          .sort((p1, p2) => p1.poDate > p2.poDate ? -1 : 1); // sort filtered list by podate\r\n        const TotalBalanceInUSD = this.getTotalBalanceInUSD(this.orders);\r\n        const curSymbol = '$';\r\n        this.balanceInUSD = Utils.getAmountStr(curSymbol, TotalBalanceInUSD); // update total balance as well\r\n    }\r\n\r\n    private  getTotalBalanceInUSD( lst: POViewWithBalance[]) {\r\n        return lst.filter(order => order.balanceInUSD > 0)\r\n                  .reduce((acc, cur) => acc + cur.balanceInUSD, 0);\r\n    }\r\n\r\n    getFilter(): (po: POViewInterface) => boolean {\r\n        // const typeFilter = (po: POViewInterface) =>\r\n        //     this.potype === 'EndClientPOs' ? !this.isInternalPO(po) : this.isInternalPO(po);\r\n        const srchFilter = this.getSearchFilter();\r\n        const isActive = (po: POViewInterface) => !po.completed;\r\n        return (po: POViewInterface) => srchFilter(po) && isActive(po);\r\n        // typeFilter(po) && srchFilter(po) && isActive(po);\r\n    }\r\n\r\n    // addToFilteredList(povObj: POViewInterface) {\r\n    //     if (this.getFilter()(povObj)) {\r\n    //         this.orders.push(povObj);\r\n    //     }\r\n    // }\r\n\r\n    // header clicked event\r\n    OnSort(field: string) {\r\n        this.sortState[field] = this.sortState[field] ? false : true;\r\n        this.orders = this.sortpipe.transform(this.orders, field, this.sortState[field]);\r\n    }\r\n    OnPOTypeChange() {\r\n        this.updateFilteredList();\r\n    }\r\n\r\n    getOrderLink(orderId: number, poNumber:string ) {\r\n        return `=hyperlink( \"${this.data.baseRawUrl}order/${orderId}\" , \"${poNumber}\" )  `\r\n    }\r\n    async exportLink() {\r\n        const filename = 'PurchaseOrders_' + '_Tismo_' + '_' + this.filterTerm;\r\n        const exportedOrders = Promise.all( this.orders.map(async (order) => {\r\n            return {\r\n                ClientName: order.clientName,\r\n                PODate: Utils.getTwoDigitDateStr(order.poDate),\r\n                PONumber: this.getOrderLink(order.id, order.poNumber),\r\n                PODescription: order.description,\r\n                Currency: (await (this.data.getCurrency(order.currencyId))).name,\r\n                Amount: order.amount,\r\n                ExpenseBudget: order.expenseBudget,\r\n                Vendor: order.vendorName,\r\n                InternalPO: order.isInternalPO,\r\n                FixedPrice: order.isFixedPrice,\r\n                Completed: order.completed,\r\n                Billed: order.billed,\r\n                Expensed: order.expense,\r\n                Received: order.received,\r\n                BankCharges: order.bankCharges,\r\n                DueAmount: order.dueAmount,\r\n                Balance: order.balance,\r\n                BalanceInUSD: order.balanceInUSD,\r\n                LastInvoicedOn: Utils.getTwoDigitDateStr(order.lastInvoicedOn),\r\n            };\r\n        }));\r\n        exportedOrders.then(\r\n            expOrders => Utils.exportCSVFile( Utils.tocsv(expOrders), filename)\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class='gridContainer'>\r\n   \r\n    <div class=\"pageTitle title\"> Order book </div>\r\n    \r\n    <div class='filter'>\r\n            <span class='text-secondary small '>Filter\r\n                <input class='form-control' type=\"text\" [ngModel]=\"filterTerm\" (ngModelChange)=\"filterTermChanged($event)\" />\r\n            </span>\r\n    </div>\r\n\r\n    <div *ngIf=\"balanceInUSD\" class=\"total fadeIn card totalbalance\">\r\n        <div class='text-secondary small labelBalance' > Balance </div>\r\n        {{balanceInUSD}}\r\n    </div>\r\n\r\n    <button *ngIf=\"orders.length >= 0 && !errorMessage\" class='btn smallFont  export button3d' (click)='exportLink()'>\r\n        Export\r\n    </button>\r\n    \r\n    <div class='ilist fadeIn'>\r\n        <app-order (headerClicked)='OnSort($event)'> </app-order>\r\n        <app-order  *ngFor=\"let po of orders\" [order]=\"po\"  ></app-order>\r\n    </div>\r\n\r\n    <div *ngIf=\"progressMessage\" class='lead message'> {{progressMessage}}</div>\r\n    <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n    \r\n\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'sortBy' })\r\nexport class SortPipe implements PipeTransform {\r\n  transform(items: Array<any>, args: string, ascending: boolean): Array<any> {\r\n    return items.sort((a: any, b: any) => {\r\n      const rt = (a[args] > b[args]) ? +1 : (a[args] < b[args]) ? -1 : 0;\r\n      return ascending ? rt : -rt;\r\n    });\r\n  }\r\n}\r\n\r\n","import { Injectable, OnInit, Inject } from '@angular/core';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { map, mergeAll, find, defaultIfEmpty, filter, first } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Project } from './project';\r\nimport { Invoice } from './invoice';\r\nimport { POSummary } from '../orderbook/podetails';\r\nimport { Utils } from '../utils/utils';\r\nimport { POViewInterface, POViewWithBalance } from './POViewInterface';\r\nimport { ProjectViewModel } from './ProjectViewModel';\r\nimport { InvoiceViewObj } from './InvoiceViewObj';\r\nimport { formatDate } from '@angular/common';\r\nimport { SupplierInvoiceViewObj } from './SupplierInvoiceViewObj';\r\nimport { SupplierInvoice } from './supplierInvoice';\r\nimport { SPOViewInterface } from './SPOViewInterface';\r\n\r\n\r\n\r\n// Send only date information when encoding to JSON --\r\n// sending time info messes up with time zone and time keeps changing\r\n// on every round trip and changes the date too !\r\nDate.prototype.toJSON = function () {\r\n  //2021-02-26\r\n  return formatDate(new Date(this), 'yyyy-MM-dd', 'en-In')\r\n}\r\n\r\n// When dates are received from the server in JSON data, they remain as strings\r\n// they would need to be explicitly parsed to Date objects.\r\n\r\n@Injectable()\r\nexport class DataService implements OnInit {\r\n  baseServerAPIUrl = '';\r\n  baseRawUrl = '';\r\n  vendors: Promise<Vendor[]> | undefined;\r\n  currencies: Promise<Currency[]> | undefined;\r\n\r\n  authString = '';\r\n  // clients: Promise<Client[]> | undefined;\r\n  // clientsobs: Client[] = [];\r\n  xchgRates: CurrencyRateToUSD[] = [];\r\n\r\n  isformdata = false;\r\n\r\n  get formDataHttpOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        // 'Content-Type': 'multipart/form-data',\r\n        Authorization: 'Bearer ' + this.authString\r\n      })\r\n    };\r\n  }\r\n\r\n  get httpOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.authString\r\n      })\r\n    };\r\n  }\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.baseRawUrl = baseUrl;\r\n    this.baseServerAPIUrl = baseUrl.replace('4200', '5000') + 'api/'; // 4200 to 5000 is for development machine\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  setHttpAuthorizationHeader(authString: string) {\r\n    this.authString = authString;\r\n  }\r\n\r\n  isTismoUS(vendorId: number): boolean {\r\n    return vendorId === this.getTismoUSAVendorId();\r\n  }\r\n  isTismoIndia(vendorId: number): boolean {\r\n    return vendorId === this.getTismoIndiaVendorId();\r\n  }\r\n\r\n  isTismoGermany(vendorId: number): boolean {\r\n    return vendorId === this.getTismoGermanyVendorId();\r\n  }\r\n  \r\n\r\n  static TismoGermanyCustomerCode = 'TCI003';\r\n  static TismoIncCustomerCode = 'TCI002';\r\n  static TismoIndiaCustomerCode = 'TCI001';\r\n  static TismoInternalProjectCustomerCode = 'TCI021';\r\n\r\n  isInternalCustomer(client: Client): boolean {\r\n    return client.customerCode.includes('TCI');\r\n  }\r\n  isClientTismoGermany(client: Client): boolean {\r\n    return client.customerCode == DataService.TismoGermanyCustomerCode;\r\n  }\r\n  isClientTismoInc(client: Client): boolean {\r\n    return client.customerCode == DataService.TismoIncCustomerCode;\r\n  }\r\n  \r\n  getTismoIndiaVendorId(): number {\r\n    return 1;\r\n  }\r\n  getTismoUSAVendorId(): number {\r\n    return 2;\r\n  }\r\n  getTismoGermanyVendorId(): number {\r\n    return 3;\r\n  }\r\n  getList<T extends BaseIntf>(ctor: new() => T): Observable<T[]> {\r\n    const obj = new ctor();\r\n    return this.http.get<T[]>(this.baseServerAPIUrl + obj.getPath() + '/GetList', this.httpOptions);\r\n    // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getById<T extends BaseIntf>(ctor: new() => T, id: number): Observable<T> {\r\n    const obj = new ctor();\r\n    return this.http.post<T>(this.baseServerAPIUrl + obj.getPath() + '/GetById', id, this.httpOptions); // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  add<T extends BaseIntf>(ctor: new() => T, item: T): Observable<number> {\r\n    const obj = new ctor();\r\n    return this.http.post<number>(this.baseServerAPIUrl + obj.getPath() + '/Add', item, this.httpOptions); // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  update<T extends BaseIntf>(ctor: new() => T, item: T): Observable<number> {\r\n    const obj = new ctor();\r\n    return this.http.put<number>(this.baseServerAPIUrl + obj.getPath() + '/Update', item, this.httpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getListWithFilter<T extends BaseIntf>(ctor: new() => T, filterObj: any): Observable<T[]> {\r\n    const obj = new ctor();\r\n    return this.http.post<T[]>(this.baseServerAPIUrl + obj.getPath() + '/GetListWithFilter', filterObj, this.httpOptions);\r\n    // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  getListForProject<T extends BaseIntf>(ctor: new() => T, projectId: number): Observable<T[]> {\r\n    const obj = new ctor();\r\n    return this.http.post<T[]>(this.baseServerAPIUrl + obj.getPath() + '/GetListForProject', projectId, this.httpOptions);\r\n    // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getListForPurchaseOrder<T extends BaseIntf>(ctor: new() => T, poId: number): Observable<T[]> {\r\n    const obj = new ctor();\r\n    return this.http.post<T[]>(this.baseServerAPIUrl + obj.getPath() + '/GetListForPurchaseOrder', poId, this.httpOptions);\r\n    // .pipe(catchError(this.handleError));\r\n  }\r\n  /////////////////\r\n\r\n  // Contacts\r\n  addContact(contact: Contact): Observable<number> {\r\n    return this.add<Contact>(Contact, contact);\r\n  }\r\n  updateContact(contact: Contact): Observable<number> {\r\n    return this.update<Contact>(Contact, contact);\r\n  }\r\n  getContact(contactId: number): Observable<Contact> {\r\n    return this.getById<Contact>(Contact, contactId);\r\n  }\r\n  getListOfContacts(): Observable<Contact[]> {\r\n    return this.getList<Contact>(Contact);\r\n  }\r\n  getListOfContactsForClient(clientId: number): Observable<Contact[]> {\r\n    return this.http.post<Contact[]>(this.baseServerAPIUrl + 'Contact' + '/GetListForClient', clientId, this.httpOptions);\r\n    // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Managers\r\n  getListOfManagers(): Observable<Manager[]> {\r\n    return this.getList<Manager>(Manager);\r\n  }\r\n\r\n  // Administrators\r\n  // getIsAdmin(): Observable<boolean> {\r\n  //     return this.http.get<boolean>(this.baseUrl + 'Admin/isAdmin', this.httpOptions);\r\n  // }\r\n\r\n  // getUserData(): Observable<UserData> {\r\n  //     return this.http.get<UserData>(this.baseUrl + 'Admin/UserName', this.httpOptions);\r\n  // }\r\n\r\n  login(user: string, pwd: string): Observable<UserData> {\r\n    const item = { Username: user, Password: pwd };\r\n    return this.http.post<UserData>(this.baseServerAPIUrl + 'Login/Login', item, this.httpOptions);\r\n  }\r\n\r\n  createUser(user: string, fullname:string, password: string, email: string, role: string): Observable<number> {\r\n    const item = { name: user, fullname, password: password, email: email, role: role };\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'Admin/CreateUser', item, this.httpOptions);\r\n  }\r\n\r\n  updateUser(user: string, fullname:string, password: string, email: string, role: string): Observable<number> {\r\n    const item = { name: user, fullname, password: password, email: email, role: role };\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'Admin/UpdateUser', item, this.httpOptions);\r\n  }\r\n  \r\n  //Supplier Purchase Orders\r\n\r\n  getListOfSupplierPurchaseOrders(): Observable<SupplierPurchaseOrder[]> {\r\n    return this.getList<SupplierPurchaseOrder>(SupplierPurchaseOrder).pipe(\r\n      map(orders =>\r\n        orders.map(order => {\r\n          order.poIssueDate = new Date(order.poIssueDate); // on reception date is a string\r\n          return order;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getListOfPurchaseOrdersForSupplier(supplierId: number): Observable<SPOViewInterface[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        supplierId: supplierId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<SPOViewInterface[]>(this.baseServerAPIUrl + 'SupplierPO/GetListForSupplier', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    });\r\n  }\r\n\r\n  getSupplierPurchaseOrder(poId: number): Observable<SupplierPurchaseOrder> {\r\n    return this.getById<SupplierPurchaseOrder>(SupplierPurchaseOrder, poId).pipe(\r\n      map(order => {\r\n        if (order) {\r\n          order.poIssueDate = new Date(order.poIssueDate); // on reception date is a string\r\n        }\r\n        return order;\r\n      })\r\n    );\r\n  }\r\n\r\n  addSupplierPurchaseOrder(spo: SupplierPurchaseOrder): Observable<number> {\r\n    return this.add<SupplierPurchaseOrder>(SupplierPurchaseOrder, spo);\r\n  }\r\n\r\n  updateSupplierPurchaseOrder(spo: SupplierPurchaseOrder) {\r\n    return this.update<SupplierPurchaseOrder>(SupplierPurchaseOrder, spo);\r\n  }\r\n\r\n\r\n  // Purchase Orders\r\n\r\n  getListOfActiveEndClientPurchaseOrders(): Observable<POViewInterface[]> {\r\n    return this.http.get<POViewInterface[]>(this.baseServerAPIUrl + 'PO/GetActiveEndClientPOList', this.httpOptions)\r\n      .pipe(\r\n        map(orders =>\r\n          orders.map(order => {\r\n            order.poDate = new Date(order.poDate); // on reception date is a string\r\n            order.lastInvoicedOn = new Date(order.lastInvoicedOn); // on reception date is a string\r\n            return order;\r\n          })\r\n        )\r\n      );\r\n  }\r\n\r\n  getListOfPurchaseOrders(): Observable<PurchaseOrder[]> {\r\n    return this.getList<PurchaseOrder>(PurchaseOrder).pipe(\r\n      map(orders =>\r\n        orders.map(order => {\r\n          order.poDate = new Date(order.poDate); // on reception date is a string\r\n          return order;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getListOfPurchaseOrdersForClient(clientId: number): Observable<POViewInterface[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        clientId: clientId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<POViewInterface[]>(this.baseServerAPIUrl + 'PO/GetListForClient', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    });\r\n  }\r\n\r\n  getPurchaseOrder(poId: number): Observable<PurchaseOrder> {\r\n    return this.getById<PurchaseOrder>(PurchaseOrder, poId).pipe(\r\n      map(order => {\r\n        if (order) {\r\n          order.poDate = new Date(order.poDate); // on reception date is a string\r\n        }\r\n        return order;\r\n      })\r\n    );\r\n  }\r\n\r\n  addPurchaseOrder(po: PurchaseOrder): Observable<number> {\r\n    return this.add<PurchaseOrder>(PurchaseOrder, po);\r\n  }\r\n\r\n  updatePurchaseOrder(po: PurchaseOrder) {\r\n    return this.update<PurchaseOrder>(PurchaseOrder, po);\r\n  }\r\n\r\n  getInternalPOforEndPO(poId: number): Observable<number> {\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'InternalPOLink' + '/GetInternalPOForEndPO', poId, this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n  getEndPOforInternalPO(poId: number): Observable<number> {\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'InternalPOLink' + '/GetEndPOForInternalPO', poId, this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  addInternalPOforEndPO(po: PurchaseOrder, endPoId: number): Observable<number> {\r\n    const item = {\r\n      internalPO: po,\r\n      externalPOId: endPoId\r\n    };\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'PO' + '/AddInternalPO', item, this.httpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // GetTismoGroupPOAmount\r\n  getTismoGroupPOamount(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'PO' + '/GetTismoGroupPOAmount', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n  getTismoIndiaPOamount(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'PO' + '/GetTismoIndiaPOAmount', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n  getTismoUSPOamount(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'PO' + '/GetTismoUSPOAmount', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getTismoGermanyPOamount(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'PO' + '/GetTismoGermanyPOAmount', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getPOSummaryForPO(poId: number): Observable<POSummary> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        poId: poId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<POSummary>(this.baseServerAPIUrl + 'PO' + '/GetPODetailsForPO', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  getFileblobForPO(poId: number): Observable<Fileblob> {\r\n    return this.http.post<Fileblob>(this.baseServerAPIUrl + 'PO/GetFileblobForPO', poId, this.httpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  getPOAttachmentList(poId: number): Observable<Fileblob[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        purchaseOrderId: poId.toString(),\r\n      }\r\n    });\r\n    return this.http.get<Fileblob[]>(this.baseServerAPIUrl + 'PO' + '/GetAttachments', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    });\r\n  }\r\n\r\n\r\n  uploadPO(poId: number, fileToUpload: File): Observable<boolean> {\r\n    const endpoint = this.baseServerAPIUrl + 'PO/UploadPOfile';\r\n    const formData: FormData = new FormData();\r\n    formData.append('poId', poId.toString());\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    return this.http.post<boolean>(endpoint, formData, this.formDataHttpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addPOattachment(poId: number, fileToAttach: File): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'PO/AddAttachment';\r\n    const formData: FormData = new FormData();\r\n    formData.append('poId', poId.toString());\r\n    formData.append('file', fileToAttach, fileToAttach.name);\r\n    return this.http.post<number>(endpoint, formData, this.formDataHttpOptions);\r\n  }\r\n\r\n  deletePOAttachment(attachmentId: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'PO/DeleteAttachment';\r\n    return this.http.post<number>(endpoint, JSON.stringify(attachmentId), this.httpOptions);\r\n  }\r\n\r\n\r\n  getPOFileLink(poId: number): string {\r\n    return `PO/DowloadPOfileForPO?poid=${poId}`;\r\n  }\r\n\r\n  getPOAttachmentLink(attachmentId: number): string {\r\n    return `PO/GetAttachment?attachmentId=${attachmentId}`;\r\n  }\r\n\r\n  /////\r\n\r\n  getFileblobForSPO(spoId: number): Observable<Fileblob> {\r\n    return this.http.post<Fileblob>(this.baseServerAPIUrl + 'SupplierPO/GetFileblobForSPO', spoId, this.httpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  getSPOAttachmentList(spoId: number): Observable<Fileblob[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        supplierPurchaseOrderId: spoId.toString(),\r\n      }\r\n    });\r\n    return this.http.get<Fileblob[]>(this.baseServerAPIUrl + 'SupplierPO' + '/GetAttachments', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    });\r\n  }\r\n\r\n\r\n  uploadSPO(spoId: number, fileToUpload: File): Observable<boolean> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierPO/UploadSPOfile';\r\n    const formData: FormData = new FormData();\r\n    formData.append('spoId', spoId.toString());\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    return this.http.post<boolean>(endpoint, formData, this.formDataHttpOptions); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addSPOattachment(spoId: number, fileToAttach: File): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierPO/AddAttachment';\r\n    const formData: FormData = new FormData();\r\n    formData.append('spoId', spoId.toString());\r\n    formData.append('file', fileToAttach, fileToAttach.name);\r\n    return this.http.post<number>(endpoint, formData, this.formDataHttpOptions);\r\n  }\r\n\r\n  deleteSPOAttachment(attachmentId: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierPO/DeleteAttachment';\r\n    return this.http.post<number>(endpoint, JSON.stringify(attachmentId), this.httpOptions);\r\n  }\r\n\r\n\r\n  getSPOFileLink(spoId: number): string {\r\n    return `SupplierPO/DowloadPOfileForPO?spoid=${spoId}`;\r\n  }\r\n\r\n  getSPOAttachmentLink(attachmentId: number): string {\r\n    return `SupplierPO/GetAttachment?attachmentId=${attachmentId}`;\r\n  }\r\n\r\n  ////////\r\n\r\n  addInternalInvoiceForEndInv(inv: Invoice, endInvId: number): Observable<number> {\r\n    const item = {\r\n      internalInvoice: inv,\r\n      externalInvoiceId: endInvId\r\n    };\r\n    return this.http.post<number>(this.baseServerAPIUrl + 'Invoice' + '/AddInternalInvoice', item, this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Clients\r\n  getListOfClientsObs(): Observable<Client[]> {\r\n    return this.getList<Client>(Client);\r\n    // if (this.clientsobs.length <= 0) {\r\n    //     console.log('consolesobs empty');\r\n    //     return this.getList<Client>(Client)\r\n    //         .pipe(\r\n    //             map(cl => this.clientsobs = cl)\r\n    //         );\r\n    // }\r\n    // return of(this.clientsobs);\r\n  }\r\n\r\n  getClientObs(clientId: number): Observable<Client> {\r\n    return this.getListOfClientsObs().pipe(\r\n      mergeAll(),\r\n      first(c => c.id === clientId, new Client())\r\n    );\r\n  }\r\n\r\n  async getListOfClients(): Promise<Client[]> {\r\n    return this.getList<Client>(Client).toPromise();\r\n    // if (!this.clients) {\r\n    //     this.clients = this.getList<Client>(Client).toPromise();\r\n    // }\r\n    // return this.clients;\r\n  }\r\n\r\n  async getClient(clientId: number): Promise<Client> {\r\n    const clients = await this.getListOfClients();\r\n    const client = clients.find(c => c.id === clientId);\r\n    return client ? client : new Client();\r\n  }\r\n\r\n  addClient(client: Client): Observable<number> {\r\n    // this.clients = undefined;\r\n    return this.add<Client>(Client, client);\r\n  }\r\n\r\n  updateClient(client: Client): Observable<number> {\r\n    // this.clients = undefined;\r\n    return this.update<Client>(Client, client);\r\n  }\r\n\r\n  //Suppliers\r\n\r\n  getListOfSupplierObs(): Observable<Supplier[]> {\r\n    return this.getList<Supplier>(Supplier);\r\n\r\n  }\r\n\r\n  getSupplierObs(supplierId: number): Observable<Supplier> {\r\n    return this.getListOfSupplierObs().pipe(\r\n      mergeAll(),\r\n      first(s => s.id === supplierId, new Supplier())\r\n    );\r\n  }\r\n\r\n  async getListOfSuppliers(): Promise<Supplier[]> {\r\n    return this.getList<Supplier>(Supplier).toPromise();\r\n\r\n  }\r\n\r\n  async getSupplier(supplerId: number): Promise<Supplier> {\r\n    const suppliers = await this.getListOfSuppliers();\r\n    const supplier = suppliers.find(s => s.id === supplerId);\r\n    return supplier ? supplier : new Supplier();\r\n  }\r\n\r\n  addSupplier(supplier: Supplier): Observable<number> {\r\n    return this.add<Supplier>(Supplier, supplier);\r\n  }\r\n\r\n  updateSupplier(supplier: Supplier): Observable<number> {\r\n    return this.update<Supplier>(Supplier, supplier);\r\n  }\r\n\r\n\r\n  //Supplier Contacts\r\n  addSupplierContact(contact: SupplierContact): Observable<number> {\r\n    return this.add<SupplierContact>(SupplierContact, contact);\r\n  }\r\n  updateSupplierContact(contact: SupplierContact): Observable<number> {\r\n    return this.update<SupplierContact>(SupplierContact, contact);\r\n  }\r\n  getSupplierContact(contactId: number): Observable<SupplierContact> {\r\n    return this.getById<SupplierContact>(SupplierContact, contactId);\r\n  }\r\n  getListOfSupplierContacts(): Observable<SupplierContact[]> {\r\n    return this.getList<SupplierContact>(SupplierContact);\r\n  }\r\n  getListOfContactsForSupplier(supplierId: number): Observable<SupplierContact[]> {\r\n    return this.http.post<SupplierContact[]>(this.baseServerAPIUrl + 'SupplierContact' + '/GetListForSupplier', supplierId, this.httpOptions);\r\n  }\r\n\r\n  // Currencies\r\n\r\n  async getListOfCurrencies(): Promise<Currency[]> {\r\n    if (!this.currencies) {\r\n      this.currencies = this.getList<Currency>(Currency).toPromise();\r\n      // this.http.get<Currency[]>(this.baseUrl + 'api/Currency/GetList').toPromise();\r\n    }\r\n    return this.currencies;\r\n  }\r\n\r\n  async getCurrency(id: number): Promise<Currency> {\r\n    const cs = await this.getListOfCurrencies();\r\n    const currency = cs.find(c => c.id === id);\r\n    return currency ? currency : new Currency();\r\n  }\r\n\r\n  async getEURCurrency(): Promise<Currency> {\r\n    const cs = await this.getListOfCurrencies();\r\n    const currency = cs.find(c => c.name === 'EUR');\r\n    return currency ? currency : new Currency();\r\n  }\r\n  async getINRCurrency(): Promise<Currency> {\r\n    const cs = await this.getListOfCurrencies();\r\n    const currency = cs.find(c => c.name === 'INR');\r\n    return currency ? currency : new Currency();\r\n  }\r\n\r\n  async getGBPCurrency(): Promise<Currency> {\r\n    const cs = await this.getListOfCurrencies();\r\n    const currency = cs.find(c => c.name === 'GBP');\r\n    return currency ? currency : new Currency();\r\n  }\r\n\r\n  getcurSymbolForUSD(): string {\r\n    return '$';\r\n  }\r\n\r\n  async getcurSymbol(id: number): Promise<string> {\r\n    const cur = await this.getCurrency(id);\r\n    if (!cur) {\r\n      return '';\r\n    }\r\n    switch (cur.name) {\r\n      case 'USD':\r\n        return '$';\r\n      case 'EUR':\r\n        return '€';\r\n      case 'GBP':\r\n        return '£';\r\n      case 'INR':\r\n        return '₹';\r\n      default:\r\n        return cur.name;\r\n    }\r\n  }\r\n\r\n\r\n  /// Returns the USD rate of this currency as of today\r\n  async getToUSDRate(curId: number): Promise<number> {\r\n    let dt = new Date();\r\n    return this.getCurrencyRate(curId, dt.getMonth(), dt.getFullYear())\r\n  }\r\n\r\n\r\n  async getCurrencyRate(curId: number, mth: number, yr: number): Promise<number> {\r\n    const ch = this.xchgRates.find(x => x.id === curId && x.month === mth && x.year === yr);\r\n    if (ch) {\r\n      return ch.rate;\r\n    } else {\r\n      const rt = await this.getCurrencyRateInternal(curId, mth, yr).toPromise();\r\n      this.xchgRates.push({\r\n        id: curId,\r\n        month: mth,\r\n        year: yr,\r\n        rate: rt\r\n      });\r\n      return rt;\r\n    }\r\n  }\r\n\r\n  // http://localhost:5000/api/Currency/GetCurrencyRateToUSD?currencyId=5&month=4&year=2018\r\n  getCurrencyRateInternal(curId: number, mth: number, yr: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        currencyId: curId.toString(),\r\n        month: mth.toString(),\r\n        year: yr.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'Currency' + '/GetCurrencyRateToUSD', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Vendors\r\n\r\n  getListOfVendors(): Promise<Vendor[]> {\r\n    if (!this.vendors) {\r\n      this.vendors = this.getList<Vendor>(Vendor).toPromise();\r\n    }\r\n    return this.vendors;\r\n  }\r\n\r\n  async getVendor(vendorId: number): Promise<Vendor> {\r\n    const vendors = await this.getListOfVendors();\r\n    const vendor = vendors.find(v => v.id === vendorId);\r\n    return vendor ? vendor : new Vendor();\r\n  }\r\n\r\n  // Projects\r\n  getListOfProjects(): Observable<Project[]> {\r\n    return this.getList<Project>(Project).pipe(\r\n      map(projects =>\r\n        projects.map(p => {\r\n          p.startDate = new Date(p.startDate); // on reception startDate is a string\r\n          // so convert these date strings to date objs\r\n          return p;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getAllActiveProjectListView(): Observable<ProjectViewModel[]> {\r\n    const endpoint = this.baseServerAPIUrl + 'Project/GetAllActiveProjectViewList';\r\n    return this.http.get<ProjectViewModel[]>(endpoint, { headers: this.httpOptions.headers });\r\n  }\r\n\r\n  getListOfProjectsForClient(clientId: number): Observable<Project[]> {\r\n    const endpoint = this.baseServerAPIUrl + 'Project/GetListForClient';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        clientId: clientId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<Project[]>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  getProjectViewListForClient(clientId: number): Observable<ProjectViewModel[]> {\r\n    const endpoint = this.baseServerAPIUrl + 'Project/GetProjectViewListForClient';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        clientId: clientId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<ProjectViewModel[]>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  getProject(projId: number): Observable<Project> {\r\n    return this.getById<Project>(Project, projId).pipe(\r\n      map(p => {\r\n        p.startDate = new Date(p.startDate); // on reception startDate is a string\r\n        return p;\r\n      })\r\n    );\r\n  }\r\n\r\n  addProject(proj: Project): Observable<number> {\r\n    return this.add<Project>(Project, proj);\r\n  }\r\n\r\n  updateProject(proj: Project): Observable<number> {\r\n    return this.update<Project>(Project, proj);\r\n  }\r\n\r\n  // Invoices\r\n\r\n  // returns 1 if there is any invoice for the specified month, year\r\n  // otherwise returns 0\r\n  // month - 1 based\r\n  // year - full year 2018\r\n  anyInvoice(month: number, year: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'Invoice/AnyInvoices';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  getListOfInvoiceAttachments(invoiceId: number): Observable<Fileblob[]> {\r\n    const endpoint = this.baseServerAPIUrl + 'Invoice/GetAttachments';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        invoiceId: invoiceId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<Fileblob[]>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  addInvoiceAttachment(invId: number, fileToAttach: File): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'Invoice/AddAttachment';\r\n    const formData: FormData = new FormData();\r\n    formData.append('invoiceId', invId.toString());\r\n    formData.append('file', fileToAttach, fileToAttach.name);\r\n    return this.http.post<number>(endpoint, formData, this.formDataHttpOptions);\r\n  }\r\n\r\n  deleteInvoiceAttachment(attachmentId: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'Invoice/DeleteInvoiceAttachment';\r\n    return this.http.post<number>(endpoint, JSON.stringify(attachmentId), this.httpOptions);\r\n  }\r\n\r\n  getBaseInvoiceAttachmentLink(attachmentId: number): string {\r\n    return `Invoice/DownLoadInvoiceAttachment?attachmentId=${attachmentId}`;\r\n  }\r\n\r\n  // DownLoadInvoicePDF\r\n  getInvoicePDFlink(invId: number): string {\r\n    return `Invoice/DownLoadInvoicePDF?invoiceId=${invId}`;\r\n  }\r\n\r\n  getFileblobForInvoice(invId: number): Observable<Fileblob> {\r\n    // GetFileBlobForInvoice\r\n    return this.http.post<Fileblob>(this.baseServerAPIUrl + 'Invoice/GetFileBlobForInvoice', invId, this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  downloadResource(urlink: string): Promise<Blob> {\r\n    const file = this.http\r\n      .get<Blob>(this.baseServerAPIUrl + urlink, { headers: this.httpOptions.headers, responseType: 'arraybuffer' as 'json' })\r\n      .toPromise();\r\n    return file;\r\n  }\r\n\r\n  // receivables\r\n  getReceivables(): Observable<InvoiceViewObj[]> {\r\n    return (\r\n      this.http\r\n        .get<InvoiceViewObj[]>(this.baseServerAPIUrl + 'Invoice' + '/GetReceivables', {\r\n          headers: this.httpOptions.headers,\r\n        })\r\n        .pipe(\r\n          map(invarr =>\r\n            invarr.map(inv => {\r\n              inv.invoice.invoiceDate = new Date(inv.invoice.invoiceDate); // on reception date is a string\r\n              inv.invoice.receivedDate = new Date(inv.invoice.receivedDate);\r\n              return inv;\r\n            })\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  // GetInvoiceViewObjList\r\n  getInvoiceViewObjList(month: number, year: number): Observable<InvoiceViewObj[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return (\r\n      this.http\r\n        .get<InvoiceViewObj[]>(this.baseServerAPIUrl + 'Invoice' + '/GetInvoiceViewObjList', {\r\n          headers: this.httpOptions.headers,\r\n          params: params\r\n        })\r\n        // .pipe(catchError(this.handleError))\r\n        .pipe(\r\n          map(invarr =>\r\n            invarr.map(inv => {\r\n              inv.invoice.invoiceDate = new Date(inv.invoice.invoiceDate); // on reception date is a string\r\n              inv.invoice.receivedDate = new Date(inv.invoice.receivedDate);\r\n              return inv;\r\n            })\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  // GetInvoiceViewObj\r\n  getInvoiceViewObj(invId: number): Observable<InvoiceViewObj> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        invId: invId.toString()\r\n      }\r\n    }); // query parameters\r\n    return (\r\n      this.http\r\n        .get<InvoiceViewObj>(this.baseServerAPIUrl + 'Invoice' + '/GetInvoiceViewObj', {\r\n          headers: this.httpOptions.headers,\r\n          params: params\r\n        })\r\n        // .pipe(catchError(this.handleError))\r\n        .pipe(\r\n          map(invobj => {\r\n            invobj.invoice.invoiceDate = new Date(invobj.invoice.invoiceDate);\r\n            invobj.invoice.receivedDate = new Date(invobj.invoice.receivedDate);\r\n            invobj.poDate = new Date(invobj.poDate);\r\n            return invobj;\r\n          })\r\n        )\r\n    );\r\n  }\r\n\r\n  // Supplier Invoices\r\n\r\n  anySupplierInvoice(month: number, year: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierInvoice/AnySupplierInvoices';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  getListOfSupplierInvoiceAttachments(invoiceId: number): Observable<Fileblob[]> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierInvoice/GetAttachments';\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        invoiceId: invoiceId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<Fileblob[]>(endpoint, { headers: this.httpOptions.headers, params: params });\r\n  }\r\n\r\n  addSupplierInvoiceAttachment(invId: number, fileToAttach: File): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierInvoice/AddAttachment';\r\n    const formData: FormData = new FormData();\r\n    formData.append('invoiceId', invId.toString());\r\n    formData.append('file', fileToAttach, fileToAttach.name);\r\n    return this.http.post<number>(endpoint, formData, this.formDataHttpOptions);\r\n  }\r\n\r\n  deleteSupplierInvoiceAttachment(attachmentId: number): Observable<number> {\r\n    const endpoint = this.baseServerAPIUrl + 'SupplierInvoice/DeleteInvoiceAttachment';\r\n    return this.http.post<number>(endpoint, JSON.stringify(attachmentId), this.httpOptions);\r\n  }\r\n\r\n  getBaseSupplierInvoiceAttachmentLink(attachmentId: number): string {\r\n    return `SupplierInvoice/DownLoadInvoiceAttachment?attachmentId=${attachmentId}`;\r\n  }\r\n\r\n  // DownLoadInvoicePDF\r\n  // getInvoicePDFlink(invId: number): string {\r\n  //   return `Invoice/DownLoadInvoicePDF?invoiceId=${invId}`;\r\n  // }\r\n\r\n  getFileblobForSupplierInvoice(invId: number): Observable<Fileblob> {\r\n    // GetFileBlobForInvoice\r\n    return this.http.post<Fileblob>(this.baseServerAPIUrl + 'SupplierInvoice/GetFileBlobForSupplierInvoice', invId, this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // downloadResource(urlink: string): Promise<Blob> {\r\n  //   const file = this.http\r\n  //     .get<Blob>(this.baseServerAPIUrl + urlink, { headers: this.httpOptions.headers, responseType: 'arraybuffer' as 'json' })\r\n  //     .toPromise();\r\n  //   return file;\r\n  // }\r\n\r\n\r\n  // GetInvoiceViewObjList\r\n  getSupplierInvoiceViewObjList(month: number, year: number): Observable<SupplierInvoiceViewObj[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return (\r\n      this.http\r\n        .get<SupplierInvoiceViewObj[]>(this.baseServerAPIUrl + 'SupplierInvoice' + '/GetSupplierInvoiceViewObjList', {\r\n          headers: this.httpOptions.headers,\r\n          params: params\r\n        })\r\n        // .pipe(catchError(this.handleError))\r\n        .pipe(\r\n          map(invarr =>\r\n            invarr.map(inv => {\r\n              inv.supplierinvoice.invoiceDate = new Date(inv.supplierinvoice.invoiceDate); // on reception date is a string\r\n              return inv;\r\n            })\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  // GetInvoiceViewObj\r\n  getSupplierInvoiceViewObj(invId: number): Observable<SupplierInvoiceViewObj> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        invId: invId.toString()\r\n      }\r\n    }); // query parameters\r\n    return (\r\n      this.http\r\n        .get<SupplierInvoiceViewObj>(this.baseServerAPIUrl + 'SupplierInvoice' + '/GetSupplierInvoiceViewObj', {\r\n          headers: this.httpOptions.headers,\r\n          params: params\r\n        })\r\n        // .pipe(catchError(this.handleError))\r\n        .pipe(\r\n          map(invobj => {\r\n            invobj.supplierinvoice.invoiceDate = new Date(invobj.supplierinvoice.invoiceDate);\r\n            invobj.poIssueDate = new Date(invobj.poIssueDate);\r\n            return invobj;\r\n          })\r\n        )\r\n    );\r\n  }\r\n\r\n  addSupplierInvoice(inv: SupplierInvoice): Observable<number> {\r\n    return this.add<SupplierInvoice>(SupplierInvoice, inv);\r\n  }\r\n  updateSupplierInvoice(inv: SupplierInvoice): Observable<number> {\r\n    return this.update<SupplierInvoice>(SupplierInvoice, inv);\r\n  }\r\n\r\n  getSupplierInvoice(invoiceId: number): Observable<SupplierInvoice> {\r\n    return this.getById<SupplierInvoice>(SupplierInvoice, invoiceId).pipe(\r\n      map(inv => {\r\n        inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n        return inv;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSupplierInvoiceForInvoiceNumber(invoiceNumber: string): Observable<SupplierInvoice> {\r\n    return this.http.post<SupplierInvoice>(\r\n      this.baseServerAPIUrl + 'SupplierInvoice' + '/GetForSupplierInvoiceNumber',\r\n      JSON.stringify(invoiceNumber),\r\n      this.httpOptions\r\n    ); \r\n  }\r\n\r\n  getListOfSupplierInvoices(): Observable<SupplierInvoice[]> {\r\n    return this.getList<SupplierInvoice>(SupplierInvoice).pipe(\r\n      map(invoices =>\r\n        invoices.map(inv => {\r\n          inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n          return inv;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n  // GetTismoGroupSales\r\n  getTismoGroupSales(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'Invoice' + '/GetTismoGroupSales', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); // .pipe(catchError(this.handleError));\r\n  }\r\n  getTismoIndiaSales(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'Invoice' + '/GetTismoIndiaSales', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n  getTismoUSSales(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'Invoice' + '/GetTismoUSSales', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getTismoGermanySales(month: number, year: number): Observable<number> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        month: month.toString(),\r\n        year: year.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<number>(this.baseServerAPIUrl + 'Invoice' + '/GetTismoGermanySales', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getListOfInvoices(): Observable<Invoice[]> {\r\n    return this.getList<Invoice>(Invoice).pipe(\r\n      map(invoices =>\r\n        invoices.map(inv => {\r\n          inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n          inv.receivedDate = new Date(inv.receivedDate);\r\n          return inv;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getListOfInvoicesForProject(projectId: number): Observable<Invoice[]> {\r\n    return this.getListForProject<Invoice>(Invoice, projectId).pipe(\r\n      map(invoices =>\r\n        invoices.map(inv => {\r\n          inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n          inv.receivedDate = new Date(inv.receivedDate);\r\n          return inv;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getListOfInvoicesForMonthYear(month: number, year: number): Observable<Invoice[]> {\r\n    const filterObject = { filter: 'monthandyear', month: month, year: year };\r\n    return this.getListWithFilter<Invoice>(Invoice, filterObject).pipe(\r\n      map(invoices =>\r\n        invoices.map(inv => {\r\n          inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n          inv.receivedDate = new Date(inv.receivedDate);\r\n          return inv;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getListOfInvoicesForPurchaseOrder(purchaseOrderId: number): Observable<InvoiceViewObj[]> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        purchaseOrderId: purchaseOrderId.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<InvoiceViewObj[]>(this.baseServerAPIUrl + 'Invoice' + '/GetListForPurchaseOrder', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    });\r\n  }\r\n\r\n  getInvoice(invoiceId: number): Observable<Invoice> {\r\n    return this.getById<Invoice>(Invoice, invoiceId).pipe(\r\n      map(inv => {\r\n        inv.invoiceDate = new Date(inv.invoiceDate); // on reception date is a string\r\n        inv.receivedDate = new Date(inv.receivedDate);\r\n        return inv;\r\n      })\r\n    );\r\n  }\r\n\r\n  getInvoiceForInvoiceNumber(invoiceNumber: string): Observable<Invoice> {\r\n    return this.http.post<Invoice>(\r\n      this.baseServerAPIUrl + 'Invoice' + '/GetForInvoiceNumber',\r\n      JSON.stringify(invoiceNumber),\r\n      this.httpOptions\r\n    ); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getInvoiceForSoftexNumber(softexNumber: string): Observable<Invoice> {\r\n    return this.http.post<Invoice>(\r\n      this.baseServerAPIUrl + 'Invoice' + '/GetForSoftexNumber',\r\n      JSON.stringify(softexNumber),\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  getNextProjectCode(date: Date): Observable<string> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        date: date.toDateString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<string>(this.baseServerAPIUrl + 'Project' + '/GetNextProjectCode', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getNextCustomerCode(): Observable<string> {\r\n    return this.http.get<string>(this.baseServerAPIUrl + 'Client' + '/GetNextCustomerCode', this.httpOptions);\r\n    //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getNextInternalPONumber(fromVendorId: number, toVendorId: number, date: Date): Observable<string> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        fromVendorId: fromVendorId.toString(),\r\n        toVendorId: toVendorId.toString(),\r\n        date: date.toDateString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<string>(this.baseServerAPIUrl + 'PO' + '/GetNextInternalPONumber', {\r\n      headers: this.httpOptions.headers,\r\n      params: params\r\n    }); // .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getNextInvoiceNumber(vendorId: number, date: Date, isExpense: number): Observable<string> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        vendorId: vendorId.toString(),\r\n        date: date.toDateString(),\r\n        isExpense: isExpense.toString()\r\n      }\r\n    }); // query parameters\r\n    return this.http.get<string>(this.baseServerAPIUrl + 'Invoice' + '/GetNextInvoiceNumber', {\r\n      headers: this.httpOptions.headers,\r\n      params\r\n    }); //  .pipe(catchError(this.handleError));\r\n  }\r\n  addInvoice(inv: Invoice): Observable<number> {\r\n    return this.add<Invoice>(Invoice, inv);\r\n  }\r\n  updateInvoice(inv: Invoice): Observable<number> {\r\n    return this.update<Invoice>(Invoice, inv);\r\n  }\r\n\r\n  getInternalInvoiceForEndInvoice(invId: number): Observable<number> {\r\n    return this.http.post<number>(\r\n      this.baseServerAPIUrl + 'InternalInvoiceLink' + '/GetInternalInvoiceForEndInvoice',\r\n      invId,\r\n      this.httpOptions\r\n    ); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getEndInvoiceforInternalInvoice(invId: number): Observable<number> {\r\n    return this.http.post<number>(\r\n      this.baseServerAPIUrl + 'InternalInvoiceLink' + '/GetEndInvoiceForInternalInvoice',\r\n      invId,\r\n      this.httpOptions\r\n    ); //  .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  async getPOViewWithBalance(pv: POViewInterface): Promise<POViewWithBalance> {\r\n    const rate = await this.getToUSDRate(pv.currencyId);\r\n    const balanceInUSD = pv.balance * rate;\r\n    const pvWithBalance: POViewWithBalance = { ...pv, balanceInUSD };\r\n    return pvWithBalance;\r\n  }\r\n\r\n  numToStr(amount: number, curSymbol?: string) {\r\n    if (curSymbol) {\r\n      return Utils.getAmountStr(curSymbol, amount);\r\n    }\r\n    return Utils.toStr(amount);\r\n  }\r\n\r\n  // private handleError(error: HttpErrorResponse) {\r\n  //     if (error.error instanceof ErrorEvent) { // A client-side or network error occurred.\r\n  //         console.error('An error occurred:', error.error.message);\r\n  //         return throwError('Unable to connect to the server.');\r\n  //     } else {\r\n  //         // The backend returned an unsuccessful response code.\r\n  //         // The response body may contain clues as to what went wrong,\r\n  //         console.error(\r\n  //             `Backend returned code ${error.status}, ` +\r\n  //             `body was: ${JSON.stringify(error.error)}`\r\n  //         );\r\n  //         return throwError(JSON.stringify(error.error));\r\n  //     }\r\n  // }\r\n}\r\n\r\nexport interface BaseIntf {\r\n  getPath(): string;\r\n}\r\nexport class Client implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  country = '';\r\n  customerCode = '';\r\n  getPath() {\r\n    return 'Client';\r\n  }\r\n}\r\n\r\nexport class Supplier implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  supplierCode = '';\r\n  location = '';\r\n  address = '';\r\n  telephone = '';\r\n  email = '';\r\n  gstNumber = '';\r\n  tanNumber = '';\r\n\r\n  getPath(){\r\n    return 'Supplier';\r\n  }\r\n  \r\n}\r\n\r\nexport class Currency implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  symbol = '';\r\n  rateToUSD = 0;\r\n  getPath() {\r\n    return 'Currency';\r\n  }\r\n}\r\n\r\nexport class CurrencyRateToUSD {\r\n  id = 0;\r\n  month = 0;\r\n  year = 0;\r\n  rate = 1;\r\n}\r\n\r\nexport class Manager implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  email = '';\r\n\r\n  fullName = '';\r\n\r\n  role = 0; // NONE = 0, MGMT = 1, ACCOUNTING = 2, MANAGER = 4, SALES = 8, ADMIN = 100 \r\n\r\n  public static canManageProjects(manager: Manager): boolean {\r\n    return manager.role == 1 || manager.role == 4;\r\n  }\r\n\r\n  public static isActive(manager: Manager): boolean {\r\n    return manager.active > 0;\r\n  }\r\n\r\n  active = 1;\r\n  \r\n  getPath() {\r\n    return 'Manager';\r\n  }\r\n}\r\n\r\nexport class Vendor implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  clientId = 0;\r\n  getPath() {\r\n    return 'Vendor';\r\n  }\r\n}\r\nexport class PurchaseOrder implements BaseIntf {\r\n  id = 0;\r\n  poDate: Date = new Date();\r\n  amount = 0;\r\n  expenseAmount = 0;\r\n  description = '';\r\n  poNumber = '';\r\n  isFixedPrice = 0;\r\n  tandMBillRate = 0;\r\n  paymentTerms = 0;\r\n  currencyId = 0;\r\n  clientId = 0;\r\n  vendorId = 0;\r\n  completed = 0;\r\n  remarks = '';\r\n  getPath() {\r\n    return 'PO';\r\n  }\r\n}\r\n\r\nexport class SupplierPurchaseOrder implements BaseIntf {\r\n  id = 0;\r\n  poNumber = '';\r\n  poIssueDate: Date = new Date();\r\n  mantisId = '';\r\n  projectCode = ''\r\n  currencyId = 0\r\n  amount = 0;\r\n  description = '';\r\n  projectManager = '';\r\n  supplierId = 0;\r\n  completed = 0;\r\n  remarks = '';\r\n  getPath() {\r\n    return 'SupplierPO';\r\n  }\r\n}\r\n\r\nexport class Contact implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n\r\n  title = '';\r\n  clientId = 0;\r\n  address = '';\r\n\r\n  telephone = '';\r\n  email = '';\r\n  getPath() {\r\n    return 'Contact';\r\n  }\r\n}\r\n//  public string Guid { get; set; } = \"00000000-0000-0000-0000-000000000000\";\r\n//         public string Name { get; set; } = \"\";\r\n//         public int Size { get; set; } = 0;\r\n//         public int LinkId { get; set; } = 0;\r\n//         public byte[] Content { get; set; } = new byte[0];\r\n\r\n//         public string OwnerTable { get; set; } = \"\";\r\n//         public int OwnerContentType { get; set; } = 0;\r\nexport class Fileblob {\r\n  id = 0;\r\n  name = '';\r\n  size = 0;\r\n  linkId = 0;\r\n  ownerTable = '';\r\n  ownerContentType = 0;\r\n}\r\n\r\nexport class SupplierContact implements BaseIntf {\r\n  id = 0;\r\n  name = '';\r\n  title = '';\r\n  supplierId = 0;\r\n  address = '';\r\n  telephone = '';\r\n  email = '';\r\n  getPath() {\r\n    return 'SupplierContact';\r\n  }\r\n}\r\n\r\nexport class AttachmentDto {\r\n  id = 0;\r\n  fileName = '';\r\n  fileSize = 0;\r\n}\r\n\r\nexport class Permissions {\r\n  add = 0; // 0 => no permssions, 1 => permitted, 2 => permitted if owner\r\n  update = 0;\r\n  delete = 0;\r\n  query = 0;\r\n}\r\n\r\nexport class UserData {\r\n  user = '';\r\n  token = '';\r\n  role = '';\r\n  ismgmt = 0;\r\n  isadmin = 0;\r\n  ismanager = 0;\r\n  issales = 0;\r\n  isaccounting = 0;\r\n\r\n  clientPerm = new Permissions();\r\n  contactPerm = new Permissions();\r\n  invoicePerm = new Permissions();\r\n  projectPerm = new Permissions();\r\n  supplierPerm = new Permissions();\r\n  purchaseorderPerm = new Permissions();\r\n}\r\n\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Invoice } from '../data/invoice';\r\nimport { Utils } from '../utils/utils';\r\n\r\n\r\n@Component({\r\n    selector: 'app-receivableItem',\r\n    templateUrl: './receivableItem.component.html',\r\n    styleUrls: ['./receivableItem.component.scss'],\r\n})\r\n\r\n// Displays a single invoice in a row\r\n// Used for showing list of invoices for a period\r\n//                  list of receivables - invoices not yet paid - for end clients\r\n//                  list of receivables within Tismo group - internal\r\nexport class ReceivableItemComponent implements OnInit {\r\n    @Input()\r\n    inview: InvoiceViewObj | undefined;\r\n\r\n\r\n    @Input()\r\n    internalView = false; // true => receivables - invoices within group companies\r\n\r\n    @Output()\r\n    headerClicked: EventEmitter<string> = new EventEmitter();\r\n\r\n    clientName = 'Client';\r\n    clientId = 0;\r\n    invoiceNumber = 'Inv Number';\r\n    invoiceId = 0;\r\n    invoiceDate: Date | undefined; // = 'Date';\r\n\r\n    description = 'Description';\r\n    invoiceAmount = 'Amount';\r\n\r\n    receivedAmount = 'Received';\r\n\r\n    dueAmount = 'Due';\r\n  \r\n    status = 'Status';\r\n\r\n    overdue = false;\r\n    endclientoverdue = false;\r\n\r\n    endClientStatus = '-';\r\n    header = false;\r\n    constructor() {\r\n    }\r\n\r\n    OnHeaderClicked(headerName: string) {\r\n        if (this.header) {\r\n            this.headerClicked.emit(headerName);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.inview) {\r\n            this.header = true;\r\n            return;\r\n        }\r\n        this.clientName = this.inview.client.name;\r\n        this.clientId = this.inview.client.id;\r\n        this.invoiceNumber = this.inview.invoice.invoiceNumber;\r\n        this.invoiceId = this.inview.invoice.id;\r\n        this.invoiceDate = this.inview.invoice.invoiceDate; // Utils.getDateStr(this.inview.invoice.invoiceDate);\r\n        \r\n         \r\n        this.description = this.inview.invoice.description;\r\n        this.invoiceAmount = Utils.getAmountStr(this.inview.curSymbol, this.inview.invoice.amount);\r\n        this.receivedAmount = Utils.getAmountStr(this.inview.curSymbol, this.inview.invoice.receivedAmount);\r\n        this.dueAmount = Utils.getAmountStr(this.inview.curSymbol, this.inview.invoice.amount - this.inview.invoice.receivedAmount);\r\n        \r\n        [this.status, this.overdue] = this.getStatuString(this.inview.invoice);\r\n\r\n        if (this.inview.hasExternalInvoice) {\r\n            [this.endClientStatus, this.endclientoverdue]  = this.getStatuString(this.inview.externalInvoice);\r\n        }\r\n    }\r\n\r\n    getStatuString(inv: Invoice): [string, boolean] {\r\n        let status = Invoice.getStatusStr(inv);\r\n        let overdue = false;\r\n        const LateByMonths = 5;\r\n        if (Invoice.isOverdue(inv)) {\r\n            overdue = true;\r\n            if ( Utils.isOlderThanNMonths(inv.invoiceDate, LateByMonths)) {\r\n                status += ' *';\r\n            }\r\n        } else if (  Invoice.isFullyReceived(inv)) {\r\n            status = '\\u2714 '  + Utils.getDateStr(inv.receivedDate);\r\n        } else if (Invoice.isPartlyReceived(inv)) {\r\n            status = 'Part payment';\r\n        }\r\n\r\n        return [status, overdue];\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div  class='receivablesview' \r\n      [ngClass]=\"{'header text-secondary': header , \r\n                  'internalinvoicesview': internalView}\" >\r\n    <div  class=\"clientname\">\r\n        <div *ngIf='header'(click)=\"OnHeaderClicked('clientName')\" >Client</div>\r\n        <a *ngIf='!header' routerLink=\"/clienttrack/{{clientId}}\">{{clientName}} </a>\r\n    </div>\r\n    <div  class=\"invoicenumber\">\r\n        <div *ngIf='header' (click)=\"OnHeaderClicked('invoiceNumber')\"  >Invoice</div>\r\n        <a *ngIf='!header' routerLink=\"/invoice/{{invoiceId}}\">{{invoiceNumber}} </a>\r\n    </div>\r\n\r\n    <div *ngIf='header' class=\"invoicedate\"(click)=\"OnHeaderClicked('invoiceDate')\" > Dated </div>\r\n    <div *ngIf='!header' class=\"invoicedate\" > {{invoiceDate! | dateStr }}</div>\r\n   \r\n\r\n\r\n    <div class=\"description\"(click)=\"OnHeaderClicked('description')\"  >{{description}}</div>\r\n    <div class=\"amount\" [innerHTML]=\"invoiceAmount\"  (click)=\"OnHeaderClicked('invoiceAmount')\"> </div>\r\n\r\n\r\n  \r\n    <div *ngIf='!internalView' class=\"received\" [innerHTML]=\"receivedAmount\"  (click)=\"OnHeaderClicked('receivedAmount')\"> </div>\r\n   \r\n\r\n    \r\n    <div *ngIf='!internalView'  class=\"due\" [innerHTML]='dueAmount'  (click)='OnHeaderClicked(\"dueAmount\")'>  </div>\r\n   \r\n   \r\n    <div class=\"status\" [ngClass]=\"{'overdue': overdue }\" (click)=\"OnHeaderClicked('status')\"> {{status }}</div>\r\n\r\n    <div *ngIf='internalView' class=\"endClientStatus\" (click)=\"OnHeaderClicked('endClientStatus')\" >\r\n        <div *ngIf='header'>End Client Status</div>\r\n        <div *ngIf='!header' [ngClass]=\"{'overdue': endclientoverdue }\"  >{{endClientStatus}}</div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Invoice } from '../data/invoice';\r\nimport { Utils } from '../utils/utils';\r\n\r\n\r\n@Component({\r\n    selector: 'app-invoice',\r\n    templateUrl: './invoice.component.html',\r\n    styleUrls: ['./invoice.component.scss'],\r\n})\r\n\r\n// Displays a single invoice in a row\r\n// Used for showing list of invoices for a period\r\n//                  list of receivables - invoices not yet paid - for end clients\r\n//                  list of receivables within Tismo group - internal\r\nexport class InvoiceComponent implements OnInit {\r\n    @Input()\r\n    inview: InvoiceViewObj | undefined;\r\n\r\n    @Output()\r\n    headerClicked: EventEmitter<string> = new EventEmitter();\r\n\r\n    clientName = 'Client';\r\n    clientId = 0;\r\n    invoiceNumber = 'Inv Number';\r\n    invoiceId = 0;\r\n    invoiceDate: Date | undefined; // = 'Date';\r\n    projectCode = 'Project';\r\n    projectId = 0;\r\n    description = 'Description';\r\n    invoiceAmount = 'Amount';\r\n    invoiceAmountInUsd = 'In USD';\r\n    status = 'Status';\r\n\r\n    overdue = false;\r\n    endclientoverdue = false;\r\n\r\n    endClientStatus = '-';\r\n    header = false;\r\n    constructor() {\r\n    }\r\n\r\n    OnHeaderClicked(headerName: string) {\r\n        if (this.header) {\r\n            this.headerClicked.emit(headerName);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.inview) {\r\n            this.header = true;\r\n            return;\r\n        }\r\n        this.clientName = this.inview.client.name;\r\n        this.clientId = this.inview.client.id;\r\n        this.invoiceNumber = this.inview.invoice.invoiceNumber;\r\n        this.invoiceId = this.inview.invoice.id;\r\n        this.invoiceDate = this.inview.invoice.invoiceDate; // Utils.getDateStr(this.inview.invoice.invoiceDate);\r\n        this.projectCode = this.inview.projectCode;\r\n        this.projectId = this.inview.invoice.projectId;\r\n        this.description = this.inview.invoice.description;\r\n        this.invoiceAmount = Utils.getAmountStr(this.inview.curSymbol, this.inview.invoice.amount);\r\n        this.invoiceAmountInUsd = Utils.getAmountStr('$', this.inview.amountInUSD);\r\n        [this.status, this.overdue] = this.getStatuString(this.inview.invoice);\r\n\r\n        if (this.inview.hasExternalInvoice) {\r\n            [this.endClientStatus, this.endclientoverdue]  = this.getStatuString(this.inview.externalInvoice);\r\n        }\r\n    }\r\n\r\n    getStatuString(inv: Invoice): [string, boolean] {\r\n        let status = Invoice.getStatusStr(inv);\r\n        let overdue = false;\r\n        const LateByMonths = 5;\r\n        if (Invoice.isOverdue(inv)) {\r\n            overdue = true;\r\n        } else if (  Invoice.isFullyReceived(inv)) {\r\n            status = '\\u2714 '  + Utils.getDateStr(inv.receivedDate);\r\n        } else if (Invoice.isPartlyReceived(inv)) {\r\n            status = 'Part payment';\r\n        }\r\n\r\n        return [status, overdue];\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class='inview'  [ngClass]=\"{'header text-secondary': header }\" >\r\n    <div  class=\"clientname\">\r\n        <a *ngIf='clientId' routerLink=\"/clienttrack/{{clientId}}\">{{clientName}} </a>\r\n        <div *ngIf='!clientId'(click)=\"OnHeaderClicked('clientName')\" >Client</div>\r\n    </div>\r\n    <div  class=\"invoicenumber\">\r\n        <a *ngIf='invoiceId' routerLink=\"/invoice/{{invoiceId}}\">{{invoiceNumber}} </a>\r\n        <div *ngIf='!invoiceId' (click)=\"OnHeaderClicked('invoiceNumber')\"  >Invoice</div>\r\n    </div>\r\n    <div *ngIf='invoiceDate' class=\"invoicedate\" > {{invoiceDate | dateStr }}</div>\r\n    <div *ngIf='!invoiceDate' class=\"invoicedate\"(click)=\"OnHeaderClicked('invoiceDate')\" > Dated </div>\r\n\r\n    <div class=\"projectcode\" (click)=\"OnHeaderClicked('projectCode')\" >\r\n        <a *ngIf='!header' routerLink=\"/project/{{projectId}}\">{{projectCode}} </a>\r\n        <div *ngIf='header'>{{projectCode}}</div>\r\n    </div>\r\n\r\n    <div class=\"description\"(click)=\"OnHeaderClicked('description')\"  >{{description}}</div>\r\n    <div class=\"amount\" [innerHTML]=\"invoiceAmount\"  (click)=\"OnHeaderClicked('invoiceAmount')\"> </div>\r\n    <div class=\"amountinusd\"(click)=\"OnHeaderClicked('amountInUSD')\" > {{invoiceAmountInUsd }}</div>\r\n    <div class=\"status\" [ngClass]=\"{'overdue': overdue }\" (click)=\"OnHeaderClicked('status')\"> {{status }}</div>\r\n\r\n   \r\n</div>","\r\nimport { DataService, Client, Contact } from '../data/data.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { OnInit, Directive } from '@angular/core';\r\n\r\n@Directive()\r\nexport class ContactBase implements OnInit {\r\n    client: Client = new Client();\r\n    contact = new Contact();\r\n\r\n    successMessage = '';\r\n    errorMessage = '';\r\n    viewMode: boolean | undefined = undefined;\r\n\r\n    get buttonTitle() { return 'Create Contact'; }\r\n    get formTitle() { return 'New Contact'; }\r\n\r\n\r\n    constructor(protected data: DataService, protected router: Router,\r\n             protected route: ActivatedRoute, protected location: Location) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.initialize(id);\r\n    }\r\n\r\n    // for new contact the id passed is the clientId\r\n    async initialize(clientId: number) {\r\n        this.client = await this.data.getClient(clientId);\r\n        this.contact.clientId = clientId;\r\n        const lst = await this.data.getListOfContactsForClient(clientId).toPromise();\r\n        if ( lst.length > 0 ) {\r\n            this.contact.address = lst[0].address;\r\n            this.contact.telephone = lst[0].telephone;\r\n        }\r\n    }\r\n\r\n    setError(msg: string, err: any, ) {\r\n        this.errorMessage = msg + err;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Submitting new Contact' + this.contact.name);\r\n        this.data.addContact(this.contact)\r\n            .subscribe(c => { console.log(c); this.successMessage = 'added Contact ' + this.contact.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError('Could not add Contact: Error: ', err); });\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n            // this.contact = new Contact();\r\n            // this.successMessage = '';\r\n            // this.errorMessage = '';\r\n            this.location.back();\r\n        }, 1000);\r\n    }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Utils } from '../utils/utils';\r\nimport { Invoice } from '../data/invoice';\r\n\r\n\r\n@Component({\r\n  selector: 'app-receivables',\r\n  templateUrl: './receivables.component.html',\r\n  styleUrls: ['./receivables.component.scss']\r\n})\r\nexport class ReceivablesComponent implements OnInit {\r\n\r\n  fullList: InvoiceViewObj[] = [];\r\n  endClientGroups: InvoiceViewObj[][] = []; // grouped client list\r\n  displayClientGroups: InvoiceViewObj[][] = []; // grouped client list\r\n  internalClientGroups: InvoiceViewObj[][] = [];\r\n\r\n  progressMessage = '';\r\n  errorMessage = '';\r\n  clientType = 'endClients';\r\n  total = '';\r\n\r\n  loaded = false;\r\n\r\n  isInternalView = false; // showing receivables from internal group companies\r\n\r\n  constructor(private data: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchReceivablesList();\r\n  }\r\n\r\n  fetchReceivablesList() {\r\n    this.fullList = [];\r\n    this.endClientGroups = [];\r\n\r\n    this.progressMessage = 'Fetching Invoices ...';\r\n    this.errorMessage = '';\r\n    this.data.getReceivables().\r\n      subscribe(\r\n      {\r\n          next: fl => { this.fullList.push(...fl); },\r\n          error: err => {\r\n          this.errorMessage = 'Connection Errors';\r\n          this.progressMessage = '';\r\n        },\r\n          complete: () => {\r\n            this.progressMessage = '';\r\n            this.endClientGroups = this.getEndClientInvoiceList(this.fullList);\r\n            const internalClientInvoices = this.fullList\r\n              .filter(inv => this.data.isInternalCustomer(inv.client))\r\n              .sort(InvoiceViewObj.invoiceDateSortCompare());\r\n            this.internalClientGroups.push(internalClientInvoices);\r\n            this.OnClientTypeChanged();\r\n            this.loaded = true;\r\n           \r\n        }\r\n      }\r\n    );\r\n  }\r\n  OnHeaderClicked(headerName: string) {\r\n  }\r\n\r\n  getEndClientInvoiceList(list: InvoiceViewObj[]): InvoiceViewObj[][] {\r\n    return this.groupBy(list.filter(inv => !this.data.isInternalCustomer(inv.client)));\r\n  }\r\n\r\n  groupBy(list: InvoiceViewObj[]): InvoiceViewObj[][] {\r\n    // reduce : the accumulated value is a dictionary. key is the client id and the value is array of invoice view objs\r\n    const clientgroups: {\r\n      [id: number]: InvoiceViewObj[];\r\n    } = list.reduce((groups: { [id: number]: InvoiceViewObj[]; }, inv) => {\r\n      const val = inv.client.id;\r\n      groups[val] = groups[val] || [];\r\n      groups[val].push(inv);\r\n      return groups;\r\n    }, {});\r\n\r\n    const clientarray: InvoiceViewObj[][] = [];\r\n    // tslint:disable-next-line:forin\r\n    for (const key in clientgroups) {\r\n      clientarray.push(clientgroups[key]);\r\n    }\r\n    const datefilter = InvoiceViewObj.invoiceDateSortCompare();\r\n    return clientarray.sort((a, b) => datefilter(a[0], b[0]));\r\n\r\n  }\r\n\r\n\r\n  OnClientTypeChanged() {\r\n    switch (this.clientType) {\r\n      case 'internalClients':\r\n        this.displayClientGroups = this.internalClientGroups;\r\n        this.isInternalView = true;\r\n        this.updateTotal();\r\n        break;\r\n      case 'endClients':\r\n      default:\r\n        this.displayClientGroups = this.endClientGroups;\r\n        this.isInternalView = false;\r\n        this.updateTotal();\r\n        break;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n \r\n\r\n  updateTotal() {\r\n    let total = 0;\r\n    this.displayClientGroups.forEach(lst => {\r\n      total += lst.reduce((acc, inv) => acc + InvoiceViewObj.getDueAmountInUSD(inv), 0);\r\n    });\r\n    this.total = Utils.toStr(total);\r\n  }\r\n\r\n  exportLink() {\r\n    let filename = this.isInternalView ? \"Receivables_fromGroup_\" : \"Receivables_fromClients_\";\r\n\r\n    Utils.exportCSVFile(this.getCSV(this.displayClientGroups), filename);\r\n  }\r\n\r\n\r\n  getExternalInvoiceStatus(inv: InvoiceViewObj)\r\n  {\r\n    if (inv.hasExternalInvoice) {\r\n      return Invoice.getStatusStr(inv.externalInvoice);  \r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getCSV(groupedInvoiceList: InvoiceViewObj[][]): string {\r\n\r\n    let expList: any[] = [];\r\n    \r\n    groupedInvoiceList.forEach(invlist => {\r\n      let tmpList = invlist.map(inv => {\r\n        let invReceivable = {\r\n          Client: inv.client.name,\r\n         \r\n          ProjectCode: inv.projectCode,\r\n          InvoiceDate: Utils.getDateStr(inv.invoice.invoiceDate),\r\n          InvoiceNumber: inv.invoice.invoiceNumber,\r\n         \r\n          Description: inv.invoice.description,\r\n          Currency: inv.curName,\r\n          Amount: Utils.toStr(inv.invoice.amount),\r\n          Received: Utils.toStr(inv.invoice.receivedAmount),\r\n          Due: Utils.toStr(InvoiceViewObj.getDueAmount(inv)),\r\n          Status: inv.status,\r\n       \r\n        };\r\n        if (this.isInternalView) {\r\n            (<any>invReceivable).EndClientStatus = this.getExternalInvoiceStatus(inv)\r\n        }\r\n        return invReceivable;\r\n      });\r\n     \r\n      expList.push(...tmpList);\r\n    });\r\n    return Utils.tocsv(expList);\r\n    \r\n  }\r\n\r\n}\r\n","\r\n<div class='gridContainer'>\r\n\r\n<div class='pageTitle title'>Receivables </div>\r\n\r\n  <div *ngIf=\"errorMessage\" class=\"Errors focus-in-expand errorMessage\">{{ errorMessage }}</div>\r\n  <div *ngIf=\"progressMessage\" class='Progress progressMessage'>{{progressMessage}} </div>\r\n  <div *ngIf=\"loaded &&  displayClientGroups.length > 0\" class=\"total fadeIn card\">$ {{total}} </div>\r\n\r\n<div  *ngIf='loaded'  class=\"form-control companySelector small text-secondary\">\r\n  <input type=\"radio\" name=\"clientType\" [(ngModel)]=\"clientType\" (ngModelChange)=\"OnClientTypeChanged()\" value=\"endClients\">From Clients\r\n  <input type=\"radio\" name=\"clientType\" [(ngModel)]=\"clientType\" (ngModelChange)=\"OnClientTypeChanged()\" value=\"internalClients\">From Group\r\n</div>\r\n\r\n<button *ngIf=\"displayClientGroups.length !== 0 && !errorMessage && !progressMessage\" class='btn smallFont  export' (click)='exportLink()'>\r\n  Export\r\n</button>\r\n\r\n\r\n<div *ngIf='loaded' class='ilist fadein'> \r\n  <app-receivableItem (headerClicked)='OnHeaderClicked($event)' [internalView]='isInternalView' ></app-receivableItem>\r\n\r\n  <div *ngFor='let invlist of  displayClientGroups'>\r\n      <div *ngFor='let inv of invlist'>\r\n        <app-receivableItem [inview]=inv   [internalView]='isInternalView' ></app-receivableItem>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <div class='ilist fadein'>\r\n  <div *ngFor='let inv of internalClientInvoices'>\r\n   <app-invoice [inview]=inv [receivablesview]=true></app-invoice>\r\n  </div>\r\n</div> -->\r\n\r\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DataService, Supplier, UserData } from \"../data/data.service\";\nimport { UserService } from \"../data/user.service\";\n\n@Component({\n  selector: \"app-suppliers\",\n  templateUrl: \"./suppliers.component.html\",\n  styleUrls: [\"./suppliers.component.scss\"],\n})\nexport class SuppliersComponent {\n\n    @Input ()\n    supplier: Supplier = <Supplier>{};\n\n    @Input()\n    canUpdate = false;\n}\n","<div class=\"gridcontainer\">\n  <div class=\"supplierName\">\n    <a routerLink=\"/suppliertrack/{{ supplier.id }}\">\n      <span class=\"small\"> {{ supplier.name }}, {{ supplier.location }} </span>\n    </a>\n  </div>\n  <div class=\"suppliercode\">\n    <span class=\"small text-secondary\">{{ supplier.supplierCode }}</span>\n  </div>\n  <div *ngIf=\"canUpdate\" class=\"editIcon small\">\n    <a routerLink=\"/supplier/{{ supplier.id }}\">\n      <i class=\"material-icons\">edit </i>\n    </a>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactBase } from './contactBase';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n   // selector: 'app-invoicenew',\r\n    templateUrl: './contactForm.component.html',\r\n    styleUrls: ['./contactForm.component.scss']\r\n})\r\nexport class ContactNewComponent extends ContactBase  {\r\n    get buttonTitle() { return 'Create Contact'; }\r\n    get formTitle() { return 'New Contact'; }\r\n\r\n    constructor(protected data: DataService, protected router: Router,\r\n        protected route: ActivatedRoute, protected location: Location) {\r\n            super(data, router, route, location);\r\n    }\r\n\r\n    // async initialize(contactId: number) {\r\n    //     this.contact = await this.data.getContact(contactId).toPromise();\r\n    //     this.client = await this.data.getClient(this.contact.clientId);\r\n    // }\r\n\r\n}\r\n\r\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\r\n\r\n<div class='container-fluid focus-in-expand'>\r\n    \r\n    <form  autocomplete=\"off\" (ngSubmit)=\"onSubmit()\" #contactForm=\"ngForm\">\r\n    <fieldset  [attr.disabled]=\"viewMode ? '' : null\"  >\r\n     \r\n        <div class='row'>\r\n            <div class=\"col-sm-4 \">\r\n                <div class='lead text-primary'><a routerLink=\"/clienttrack/{{client.id}}\"> {{client.name}} </a></div>\r\n                <div> \r\n                    <small class=\"text-muted mt-4\"> {{client.country}} </small>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n        <div class='row'> \r\n            <div class=\"col-sm-4 form-group \">\r\n                <label class='formLabel' for=\"name\"> Name </label>\r\n                <input class=\"form-control\" required type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"contact.name\" >\r\n            </div>\r\n          </div>\r\n\r\n        <div class='row'>\r\n                <div class=\"col-sm-4 form-group \">\r\n                        <label  class='formLabel' for=\"jobtitle\"> Job Title</label>\r\n                        <input class=\"form-control\" required type=\"text\" name=\"jobtitle\" id=\"jobtitle\" [(ngModel)]=\"contact.title\" >\r\n                </div>\r\n        </div>\r\n\r\n\r\n        <div class='row'>\r\n                <div class=\"col-sm-6 form-group\">\r\n                        <label class=\"formLabel address\"> Address</label>\r\n                            <textarea class=\"form-control address\"   required type=\"text\" name=\"address\" \r\n                            rows=\"4\" cols=\"60\" maxlength=\"250\" wrap=\"hard\" [(ngModel)]=\"contact.address\"></textarea>\r\n                        \r\n                        <small class=\"text-muted\"> Street address, City, Country on separate lines.\r\n                                                   Don't include the company name. <br>\r\n                                                   Not more than 4 lines. </small>\r\n                </div>\r\n        </div>\r\n\r\n        <div class='row'> \r\n                <div class=\"col-sm-4 form-group \">\r\n                    <label  class='formLabel'  for=\"telephone\"> Telephone </label>\r\n                    <input class=\"form-control\" required type=\"text\" name=\"telephone\" id=\"telephone\" [(ngModel)]=\"contact.telephone\" >\r\n                </div>\r\n             \r\n                <div class=\"col-sm-4 form-group \">\r\n                        <label class='formLabel'  for=\"email\"> Email </label>\r\n                        <input class=\"form-control\" required type=\"email\" name=\"email\" id=\"email\" [(ngModel)]=\"contact.email\" >\r\n                </div>\r\n        </div>\r\n\r\n\r\n       \r\n        <div class='row'> \r\n          <div class=\"col-sm-4 form-group\">\r\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!contactForm.form.valid\">{{buttonTitle}}</button>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"successMessage\" class=\"Success\"> {{successMessage}} </div>\r\n        <div *ngIf=\"errorMessage\" class=\"Errors\"> {{errorMessage}} </div>\r\n    </fieldset>\r\n    </form>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { Client } from '../data/data.service';\r\n\r\n@Component({\r\n    selector: 'app-client',\r\n    templateUrl: './client.component.html',\r\n    styleUrls: ['./client.component.scss']\r\n})\r\nexport class ClientComponent {\r\n\r\n    @Input()\r\n    client: Client = <Client>{};\r\n\r\n    @Input()\r\n    canUpdate = false;\r\n\r\n}\r\n\r\n\r\n","\r\n       <div class='gridcontainer'>\r\n            <div class=\"clientName\" >\r\n                <a routerLink=\"/clienttrack/{{client.id}}\">\r\n                   <span class='small'> {{client.name}}, {{client.country}} </span>\r\n                </a>\r\n            </div>\r\n            <div class=\"customerCode\"><span class='small text-secondary'>{{client.customerCode}}</span>  </div>\r\n            <div *ngIf=\"canUpdate\" class=\"editIcon small\" >\r\n                <a routerLink=\"/client/{{client.id}}\">\r\n                    <i class=\"material-icons\">edit </i>\r\n                </a>\r\n            </div>\r\n        </div> \r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, UserData } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { OrderBase } from './orderBase';\r\nimport { UserService } from '../data/user.service';\r\n\r\n@Component({\r\n    selector: 'app-orderedit',\r\n    templateUrl: './orderForm.component.html',\r\n    styleUrls: ['./orderForm.component.scss']\r\n})\r\nexport class OrderEditComponent extends OrderBase implements OnInit {\r\n\r\n    InternalPOId = 0;\r\n\r\n    isSaving = false;\r\n    get buttonTitle() { return this.viewMode ? 'Modify this Purchase Order' : this.isSaving ? 'Saving...' : 'Save changes'; }\r\n    get formTitle() { return this.viewMode ? 'Purchase Order' : 'Modify Purchase Order'; }\r\n\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.showForm = false;\r\n        this.successMessage = 'Fetching...';\r\n        this.data.getPurchaseOrder(id)\r\n            .subscribe(cl => {\r\n                this.po = cl;\r\n                const t = this.initialize();\r\n\r\n            },\r\n                err => { console.log(err); this.setError('Error : Could not locate PO :', err); });\r\n    }\r\n\r\n\r\n    constructor(data: DataService, private route: ActivatedRoute, protected router: Router,\r\n        protected user: UserService, protected location: Location) {\r\n        super(data, router, user, location);\r\n    }\r\n\r\n    initialize() {\r\n        // check if this is an internal PO or not first\r\n        return this.data.getEndPOforInternalPO(this.po.id).subscribe(poid => {\r\n            const externalPOId = poid;\r\n            if (externalPOId > 0) { // this is an internal po - use orderInternalEdit component to edit this\r\n                this.successMessage = '';\r\n                this.router.navigateByUrl('/editinternalpo/' + externalPOId);\r\n                return;\r\n            }\r\n            this.checkInternalPOEdit().then(() => {\r\n                this.data.getClient(this.po.clientId).then(cl => {\r\n                    this.clientName = cl.name;\r\n                    this.updateFileblob(() => {\r\n                        this.showClientSelection = false;\r\n                        this.showIsCompleted = true;\r\n                        this.viewMode = true;\r\n                        this.successMessage = '';\r\n                        this.setupAttachments(this.po.id);\r\n                        this.showForm = true;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.viewMode) {\r\n            this.viewMode = undefined;\r\n            return;\r\n        }\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.po.isFixedPrice = this.po.isFixedPrice ? 1 : 0;\r\n        this.po.completed = this.po.completed ? 1 : 0;\r\n        console.log('Updating PO' + this.po.clientId, this.po.amount, this.po.poDate, this.po.currencyId, this.po.description,\r\n            this.po.isFixedPrice, this.po.tandMBillRate, this.po.completed, '***');\r\n        this.isSaving = true;\r\n        this.data.updatePurchaseOrder(this.po)\r\n            .subscribe(async c => {\r\n                console.log(c);\r\n                this.upLoadPOFile();\r\n                this.fileblob = await this.data.getFileblobForPO(this.po.id).toPromise();\r\n                this.successMessage = 'Updated PO ' + this.po.poNumber;\r\n                this.isSaving = false;\r\n                this.goToCurrentPO(this.po.id);\r\n            },\r\n                err => { console.log(err); this.setError('Could not update PO: Error: ', err); });\r\n        \r\n    }\r\n\r\n  \r\n    // show internal PO edit button only if this PO\r\n    // is from Tismo US or Tismo GmbH\r\n    async checkInternalPOEdit() {\r\n        //  console.log(' po vendorid = ', this.po.vendorId);\r\n        if (this.po.vendorId !== this.data.getTismoIndiaVendorId()) {\r\n            this.showInternalPOEdit = true;\r\n            await this.checkForEditOrNewInternalPO();\r\n        } else {\r\n            this.showInternalPOEdit = false;\r\n        }\r\n    }\r\n\r\n    async checkForEditOrNewInternalPO() {\r\n        this.InternalPOId = await this.data.getInternalPOforEndPO(this.po.id).toPromise();\r\n        if (this.InternalPOId > 0) {\r\n            this.InternalPOEditButtonTitle = 'View PO to Tismo India';\r\n        } else {\r\n            this.InternalPOEditButtonTitle = 'Create PO to Tismo India';\r\n        }\r\n    }\r\n\r\n    editInternalPO() {\r\n        console.log('Edit internal po ', this.po.id);\r\n        if (this.InternalPOId > 0) {\r\n            this.router.navigateByUrl(`/editinternalpo/${this.po.id}`);\r\n        } else {\r\n            this.router.navigateByUrl(`/newinternalpo/${this.po.id}`);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactBase } from './contactBase';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n //   selector: 'app-invoicenew',\r\n    templateUrl: './contactForm.component.html',\r\n    styleUrls: ['./contactForm.component.scss']\r\n})\r\nexport class ContactEditComponent extends ContactBase  {\r\n\r\n    constructor(protected data: DataService, protected router: Router,\r\n        protected route: ActivatedRoute, protected location: Location) {\r\n            super(data, router, route, location);\r\n    }\r\n    get buttonTitle() { return 'Save Contact'; }\r\n    get formTitle() { return 'Modify Contact'; }\r\n\r\n    // for new contact the id passed is the clientId\r\n    // for edit contact the id passed is the contactId\r\n    async initialize(contactId: number) {\r\n            this.data.getContact(contactId).subscribe( con => {\r\n                this.contact = con;\r\n                this.data.getClient(this.contact.clientId).then( cl => this.client = cl);\r\n            },\r\n            err => {\r\n                this.errorMessage = 'Error: Unable to get contact info' + err;\r\n                 this.resetForm();\r\n             }\r\n            );\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Updating Contact' + this.contact.name);\r\n        this.data.updateContact(this.contact)\r\n            .subscribe(c => { console.log(c); this.successMessage = 'saved Contact ' + this.contact.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError('Could not save Contact: Error: ', err); });\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Fileblob } from '../data/data.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport * as FileSaver from 'file-saver';\r\n\r\nexport class AttachmentInterface {\r\n  id = 0;\r\n  getAttachmentDetails: ((id: number) => Observable<Fileblob[]>) = i => of([]);\r\n  addAttachment: ((id: number, fileToAttach: File) => Observable<number>) = (a, b) => of(0);\r\n  getAttachmentLink: (attachmentId: number) => string = i => '';\r\n  downloadResource: (urlink: string) => Promise<Blob> = s => Promise.resolve(new Blob());\r\n}\r\n\r\n@Component({\r\n  selector: 'app-attachments',\r\n  templateUrl: './attachments.component.html',\r\n  styleUrls: ['./attachments.component.scss']\r\n})\r\nexport class AttachmentsComponent implements OnInit {\r\n\r\n  @Input()\r\n  set attachmentIntf(val: AttachmentInterface) {\r\n    this._attachmentIntf = val;\r\n    this.initialize();\r\n  }\r\n  get attachmentIntf(): AttachmentInterface {\r\n    return this._attachmentIntf;\r\n  }\r\n  _attachmentIntf!: AttachmentInterface;\r\n  attachmentmsg = '';\r\n  attachments: Fileblob[] = [];\r\n  showAttachmentButton = false;\r\n\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    if (this.attachmentIntf.id === 0) { this.showAttachmentButton = false; console.log('attachment id is 0'); return; }\r\n    console.log('attachment id is ' + this.attachmentIntf.id);\r\n    this.showAttachmentButton = true;\r\n    this.attachmentIntf.getAttachmentDetails(this.attachmentIntf.id)\r\n      .subscribe(lst => this.attachments = lst);\r\n  }\r\n  async attachmentLinkClicked(attachmentId: number, filename: string) {\r\n    if (attachmentId <= 0 || !filename) { return; }\r\n    const urlstr = this.attachmentIntf.getAttachmentLink(attachmentId);\r\n    const res = await this.attachmentIntf.downloadResource(urlstr);\r\n    const fileblob = new Blob([res], { type: 'application/octet-stream' });\r\n    FileSaver.saveAs(fileblob, filename);\r\n  }\r\n\r\n  fileUploadChanged(files: any) {\r\n    if (files.length !== 1) { return; }\r\n    const attachment = files[0] as File;\r\n    if (attachment.size <= 0) {\r\n      this.attachmentmsg = 'File size is zero! ';\r\n      return;\r\n    }\r\n    if (attachment.size > Math.pow(2,22)) { // 2 ^ 22 = 4 MB\r\n      this.attachmentmsg = 'File size should be less than 4 MB';\r\n      return;\r\n    }\r\n    this.attachmentmsg = 'Attaching ' + attachment.name;\r\n    this.attachmentIntf.addAttachment(this.attachmentIntf.id, attachment)\r\n      .subscribe(\r\n        () => {\r\n          this.attachmentmsg = '';\r\n          this.initialize();\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"gridContainer\">\r\n  \r\n  <div class=\"attachmentname \">\r\n    <div *ngFor=\"let attachment of attachments\">\r\n       \r\n        <span class='attachmentlink' (click)=\"attachmentLinkClicked(attachment.id, attachment.name)\">\r\n          <i class=\"material-icons  alignright\"> attach_file </i>\r\n                  {{attachment.name}} </span>\r\n    </div>\r\n  </div>\r\n\r\n  <app-statusmsg class=\"attachmentmsg text-muted\" message=\"{{ attachmentmsg }}\"> </app-statusmsg>\r\n\r\n  <div class=\"addbutton \" *ngIf=\"showAttachmentButton\" >\r\n      <button class=\"btn btn-success \" onclick=\"document.getElementById('attachmentuploadfile').click()\">\r\n        +<i class=\"material-icons \"> attach_file </i>\r\n      </button>\r\n    <input class=\"t2elem noborder\" #file id=\"attachmentuploadfile\" type=\"file\" (change)=\"fileUploadChanged(file.files)\" />\r\n  </div>\r\n  \r\n</div>","import { Inject, LOCALE_ID } from '@angular/core';\r\nimport { formatDate } from '../../../node_modules/@angular/common';\r\n\r\n\r\nexport class Utils {\r\n\r\n    static locale =  'en-IN';\r\n\r\n    public static doLater(delayInMillisecs: number, fun: () => void) {\r\n        setTimeout(() => {\r\n            fun();\r\n        }, delayInMillisecs);\r\n    }\r\n    public static delay(durationInMillisecs: number): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, durationInMillisecs);\r\n        });\r\n    }\r\n\r\n    public static getWidth(columns: any[]): number {\r\n        return columns.reduce((acc, col) => acc + col.width, 10);\r\n    }\r\n\r\n    public static getDateStr(date: Date): string {\r\n        // request a weekday along with a long date\r\n        // const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n        // const dt = new Date(date);\r\n        // return (dt.toLocaleDateString('en-GB', options));\r\n        return formatDate(new Date(date), 'dd MMM yyyy', this.locale);\r\n    }\r\n\r\n\r\n    public static getTwoDigitDateStr(date: Date): string {\r\n        return formatDate(new Date(date), 'dd/MM/yyyy', this.locale);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/8847766/how-to-convert-json-to-csv-format-and-store-in-a-variable\r\n    public static tocsv(objectArray: any[]): string {\r\n        const stringify = (someval: any) => JSON.stringify(someval, replacer)\r\n                                                .replace(/\\\\\"/g, '\"\"') // replace \\\" to \"\"  Excel prefers it that way\r\n        const replacer = (_: any, value: any) => value === null ? '' : value; // null values to empty strings\r\n        const header = Object.keys(objectArray[0]); // list of header names\r\n        const csvStrings = objectArray\r\n                            .map(row => header.map(headerName => stringify(row[headerName])).join(','));\r\n          \r\n        csvStrings.unshift(header.join(',')); // put header names at the start \r\n        const csv = csvStrings.join('\\r\\n'); // each string in its own line\r\n       \r\n        return csv;\r\n    }\r\n\r\n\r\n\r\n\r\n    public static exportCSVFile(csvData: string, fileName: string) {\r\n        const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\r\n        const link = document.createElement('a');\r\n        if (link.download !== undefined) {\r\n            const url = URL.createObjectURL(blob);\r\n            link.setAttribute('href', url);\r\n            link.setAttribute('download', this.createFileName(fileName));\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n\r\n    private static createFileName(exportFileName: string): string {\r\n        const date = new Date();\r\n        return (exportFileName + date.toLocaleDateString() + '_' + date.toLocaleTimeString() + '.csv');\r\n    }\r\n\r\n    public static getAmountStr(curSymbol: string, amount: number, decimalPlaces: number = 0): string {\r\n        if (amount === 0) { return '-'; }\r\n        return curSymbol + ' ' + this.toStr(amount, decimalPlaces);\r\n            // amount.toLocaleString(undefined, { maximumFractionDigits: decimalPlaces });\r\n    }\r\n    public static toStr(amount: number, decimalPlaces: number = 0): string {\r\n        return amount.toLocaleString(undefined, { maximumFractionDigits: decimalPlaces, minimumFractionDigits: decimalPlaces });\r\n    }\r\n\r\n    public static toStrWithNoDecimals(amount: number): string {\r\n        return Math.round(amount).toString()\r\n    }\r\n    public static isOlderThanNMonths(dt: Date, months: number) {\r\n        const threshold = new Date();\r\n        threshold.setMonth(threshold.getMonth() - months);\r\n        return dt < threshold;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { Utils } from './utils';\r\nimport { merge, interval, Observable, Observer } from 'rxjs';\r\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-statusmsg',\r\n    template: `\r\n       <div class='statusmsg text-muted' [ngClass]=\"{'fadeIn': doFadeIn, 'fadeOut': doFadeOut }\"  >\r\n                    {{message}}\r\n       </div>\r\n    `,\r\n    styleUrls: ['../app.styles.scss'],\r\n    styles: [`\r\n        .statusmsg {\r\n            height: 20px;\r\n        }\r\n    `]\r\n\r\n})\r\nexport class StatusMsgComponent {\r\n    public doFadeIn = false;\r\n    public doFadeOut = false;\r\n\r\n    // fade in and out duration - value defined\r\n    // in the transitions in style.css file\r\n    fadeDuration = 500; // milliseconds\r\n\r\n\r\n    // how long is the message displayed after which\r\n    // it would automtically be erased\r\n    private _duration = 5000; // milliseconds\r\n    @Input('duration')\r\n    public set duration(value: number) {\r\n        this._duration = value;\r\n    }\r\n    public get duration() {\r\n        return this._duration;\r\n    }\r\n\r\n    private _message = '';\r\n\r\n    @Input()\r\n    public set message(value: string) {\r\n        // if (!value) { return; }\r\n        this.setMsg(value);\r\n    }\r\n    private setMsg = (str: string) => { };\r\n    public get message() { return this._message; }\r\n\r\n    constructor() {\r\n        const subject: Observable<string> = Observable.create(\r\n            (obs: Observer<string>) => {\r\n                this.setMsg = str => {\r\n                    obs.next(str);\r\n                };\r\n            }\r\n        );\r\n\r\n        const source = merge(\r\n            subject,\r\n            interval(this._duration).pipe( map(_ => '')),\r\n        );\r\n        source.pipe(\r\n            debounceTime(this.fadeDuration),\r\n            distinctUntilChanged()\r\n        ).subscribe(\r\n            async str => {\r\n                if (this._message) {\r\n                    this.doFadeIn = false;\r\n                    this.doFadeOut = true;\r\n                    await Utils.delay(this.fadeDuration); // wait for previous msg to fade out\r\n                }\r\n\r\n                this._message = str; // put in the new msg\r\n                this.doFadeOut = false;\r\n                this.doFadeIn = true;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class Authguard implements CanActivate {\r\n    constructor(private router: Router, private user: UserService) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (route.url[0] && route.url[0].path &&  route.url[0].path === 'createuser') {\r\n          return this.user.currentUser.pipe(map(ud => ud.isadmin > 0 ? true : this.router.parseUrl('/')));\r\n      }\r\n      return this.user.currentUser.pipe(map(ud => ud.user ? true : this.router.parseUrl('/login')));\r\n      // if a user is logged in return true, otherwise re-direct to login screen\r\n  }\r\n}\r\n","import { Invoice } from './invoice';\r\nimport { Client } from './data.service';\r\nexport class InvoiceViewObj {\r\n  poNumber = '';\r\n  poDate = new Date();\r\n  client = new Client();\r\n  clientCountryCode = '';\r\n  clientAddress = '';\r\n  vendorId = 0;\r\n  projectCode = '';\r\n  workType  = 1; // 1 is development, 2 Maintenance, 4 Testing\r\n  serviceType = 0;  // 1 => Electronics 2 => Firmware 4 => Software 8 => Mechanical\r\n\r\n  stpService = 0;\r\n  amountInUSD = 0;\r\n  amountInINR = 0;\r\n  status = '';\r\n  invoice = new Invoice();\r\n  hasExternalInvoice = false;\r\n  externalInvoice = new Invoice();\r\n  curName = '';\r\n  curSymbol = '';\r\n  manager1 = '';\r\n  manager2 = '';\r\n  public static invoiceDateSortCompare() {\r\n    return (a: InvoiceViewObj, b: InvoiceViewObj) => {\r\n      if (a.invoice.invoiceDate > b.invoice.invoiceDate) {\r\n        return 1;\r\n      }\r\n      if (a.invoice.invoiceDate < b.invoice.invoiceDate) {\r\n        return -1;\r\n      }\r\n      return a.invoice.invoiceNumber > b.invoice.invoiceNumber ? 1 : -1;\r\n    };\r\n  }\r\n\r\n  public static getDueAmount(inv: InvoiceViewObj): number {\r\n    let due = inv.invoice.amount - inv.invoice.receivedAmount;\r\n    return due <= 5 ? 0 : due;\r\n  }\r\n\r\n  public static getDueAmountInUSD(inv: InvoiceViewObj): number {\r\n    if (inv.invoice.amount === 0) return 0;\r\n    let rateToUSD = inv.amountInUSD / inv.invoice.amount;\r\n    return InvoiceViewObj.getDueAmount(inv) * rateToUSD;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Client } from '../data/data.service';\r\n\r\nimport { Project } from '../data/project';\r\nimport { map, mergeAll, mergeMap } from 'rxjs/operators';\r\nimport { Utils } from '../utils/utils';\r\nimport { Invoice } from '../data/invoice';\r\nimport { ProjectViewModel } from '../data/ProjectViewModel';\r\n\r\n\r\ninterface IDictionary {\r\n    [index: string]: boolean;\r\n}\r\n@Component({\r\n    selector: 'app-projectlist',\r\n    templateUrl: './projectList.component.html',\r\n    styleUrls: ['./projectList.component.scss'],\r\n})\r\nexport class ProjectListComponent implements OnInit {\r\n    projectList: ProjectViewModel[] = [];\r\n    fullProjectList: ProjectViewModel[] = [];\r\n    serverError = false;\r\n    message = '';\r\n    filterTerm = '';\r\n    sortState = {} as IDictionary;\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjectList();\r\n    }\r\n\r\n    getProjectList() {\r\n        this.message = 'Fetching project information...';\r\n\r\n        this.data.getAllActiveProjectListView()\r\n            .subscribe(pv => this.fullProjectList.push(...pv),\r\n                err => { this.message = ''; this.serverError = true; console.log(err); }, // on eror\r\n                () => this.updateProjectList()) // on completion )\r\n            ;\r\n        // this.data.getListOfClientsObs()\r\n        //     .pipe(\r\n        //         mergeAll(),\r\n        //         mergeMap(client => this.data.getProjectViewListForClient(client.id)),\r\n        //     )\r\n        //     .subscribe(\r\n        //         pv => this.fullProjectList = this.fullProjectList.concat(pv),\r\n        //         err => { this.message = ''; this.serverError = true; console.log(err); }, // on eror\r\n        //         () => this.updateProjectList() // on completion\r\n        //     );\r\n    }\r\n\r\n    updateProjectList() {\r\n        this.message = '';\r\n        this.projectList = this.fullProjectList\r\n            .filter(this.getFilterForActiveProjects())\r\n            .filter(this.getFilterForSearchTerm())\r\n            .sort((a, b) => a.project.startDate > b.project.startDate ? -1 : 1)\r\n            ;\r\n    }\r\n\r\n    filterTermChanged(newSrchTerm: string) {\r\n        this.filterTerm = newSrchTerm;\r\n        this.updateProjectList();\r\n    }\r\n\r\n    getFilterForActiveProjects(): (cl: ProjectViewModel) => boolean {\r\n        return pr => pr.project.completed > 0 ? false : true;\r\n    }\r\n\r\n    getFilterForSearchTerm(): (cl: ProjectViewModel) => boolean {\r\n        if (this.filterTerm === '' || this.filterTerm.length < 2) { return (cl: ProjectViewModel) => true; }\r\n        const srchTarget = (proj: ProjectViewModel) =>\r\n            [\r\n                proj.project.name,\r\n                proj.project.projectCode,\r\n                proj.client.name,\r\n                proj.client.country,\r\n                proj.client.customerCode,\r\n                Utils.getDateStr(proj.project.startDate),\r\n                proj.accountManager,\r\n                proj.projectManager,\r\n            ].join(' ');\r\n\r\n        const regEx = new RegExp(this.filterTerm, 'i');\r\n        return (pr: ProjectViewModel) => regEx.test(srchTarget(pr));\r\n    }\r\n\r\n\r\n    OnHeaderClicked(headerName: string) {\r\n        this.sortState[headerName] = !this.sortState[headerName];\r\n        let fil = (a: ProjectViewModel, b: ProjectViewModel) => 1;\r\n        switch (headerName) {\r\n            case 'client':\r\n                fil = (a, b) => (a.client.name > b.client.name ? +1 : -1);\r\n                break;\r\n            case 'projectCode':\r\n                fil = (a, b) => (a.project.projectCode > b.project.projectCode ? +1 : -1);\r\n                break;\r\n            case 'projectname':\r\n                fil = (a, b) => (a.project.name > b.project.name ? +1 : -1);\r\n                break;\r\n            case 'startdate':\r\n                fil = (a, b) => (a.project.startDate.getTime() > b.project.startDate.getTime() ? 1 : -1);\r\n                break;\r\n            case 'accountManager':\r\n                fil = (a, b) => (a.accountManager) > b.accountManager ? 1 : -1;\r\n                break;\r\n            case 'projectManager':\r\n                fil = (a, b) => (a.projectManager) > b.projectManager ? 1 : -1;\r\n                break;\r\n        }\r\n\r\n        // check if we have to toggle ascending / descending\r\n        const gil = this.sortState[headerName] ? fil : (a: ProjectViewModel, b: ProjectViewModel) => -1 * fil(a, b);\r\n        this.projectList = this.projectList.sort(gil);\r\n    }\r\n}\r\n\r\n\r\n","<div class='focus-in-expand gridContainer'>\r\n<div class=\"pageTitle\"> Projects </div>\r\n<div *ngIf=\"serverError\" class=\"Errors\"> Connection Errors. </div>\r\n<div *ngIf=\"message\" class=\"Success message\"> {{message}} </div>\r\n<div class='filter text-secondary small'>Filter \r\n    <input type=\"text\" [ngModel]=\"filterTerm\" (ngModelChange)=\"filterTermChanged($event)\" />\r\n</div>\r\n\r\n<div class='projectlist'>\r\n    <app-project (headerClicked)='OnHeaderClicked($event)'> </app-project>\r\n    <div *ngFor=\"let proj of projectList\">\r\n        <app-project [pvmodel]=\"proj\"> </app-project>\r\n    </div>\r\n</div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { InvoiceBase } from './invoiceBase';\r\nimport { AttachmentInterface } from '../attachments/attachments.component';\r\n\r\nclass fmonad<T>  {\r\n  fobs: Promise<T>;\r\n  constructor(obs: Promise<T>) {\r\n    this.fobs = obs;\r\n  }\r\n\r\n  bind<U>(fn: (arg0: T) => Promise<U>): fmonad<U> {\r\n    const k = this.fobs.then(t => fn(t));\r\n    return new fmonad(k);\r\n  }\r\n\r\n  then(fn: (arg0: T) => any): any {\r\n    return this.fobs.then(t => fn(t));\r\n  }\r\n\r\n  unwrap() {\r\n    return this.fobs;\r\n  }\r\n\r\n};\r\n@Component({\r\n  selector: 'app-invoiceedit',\r\n  templateUrl: './invoiceForm.component.html',\r\n  styleUrls: ['./invoiceForm.component.scss']\r\n})\r\nexport class InvoiceEditComponent extends InvoiceBase implements OnInit {\r\n  // } implements OnInit {\r\n\r\n  constructor(\r\n    data: DataService,\r\n    protected router: Router,\r\n    private route: ActivatedRoute,\r\n     \r\n    protected location: Location\r\n  ) {\r\n    super(data, router);\r\n    this.viewMode = true;\r\n    this.updateTitles();\r\n    this.showReceived = true;\r\n  }\r\n\r\n  updateTitles() {\r\n    this.buttonTitle = this.viewMode ? 'Modify this invoice' : 'Save changes';\r\n    this.formTitle = this.viewMode ? 'Invoice' : 'Modify Invoice';\r\n  }\r\n\r\n  ngOnInit() {\r\n    const idstr = this.route.snapshot.paramMap.get('id');\r\n    const id = idstr ? +idstr : 0;\r\n    this.initialize(id);\r\n  }\r\n\r\n  initialize(id: number) {\r\n    try {\r\n      this.showForm = false;\r\n      this.viewMode = true;\r\n      this.successMessage = 'Fetching invoice details...';\r\n      this.updateTitles();\r\n\r\n      this.prefillData(id).then(() => {\r\n        this.checkInternalInvoiceEdit().then(() => {\r\n          this.successMessage = '';\r\n          this.showForm = true;\r\n        });\r\n      });\r\n\r\n    } catch (e) {\r\n      this.errorMessage = 'Error: Unable to get invoice details ' + e;\r\n      this.resetForm(false);\r\n    }\r\n  }\r\n\r\n  prefillData(invoiceId: number): Promise<void> {\r\n    // get everything else from invoice Id\r\n    // check if this is an internal invoice first\r\n    return this.data.getEndInvoiceforInternalInvoice(invoiceId)\r\n      .toPromise()\r\n      .then(externalInvoiceId => {\r\n          if (externalInvoiceId > 0) {\r\n            // this is an internal invoice\r\n            this.router.navigateByUrl('/editinternalinvoice/' + externalInvoiceId);\r\n            return Promise.resolve();\r\n          }\r\n          else {\r\n            const af = new AttachmentInterface();\r\n            af.id = invoiceId;\r\n            af.addAttachment = (id, file) => this.data.addInvoiceAttachment(id, file);\r\n            af.getAttachmentDetails = id => this.data.getListOfInvoiceAttachments(id);\r\n            af.getAttachmentLink = id => this.data.getBaseInvoiceAttachmentLink(id);\r\n            af.downloadResource = str => this.data.downloadResource(str);\r\n            this.attachmentIntf = af;\r\n            return this.getRestOfPrefillData(invoiceId);\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  getRestOfPrefillData(invoiceId: number): Promise<void> {\r\n    \r\n    return this.data.getInvoice(invoiceId).toPromise()\r\n      .then(invoice => {\r\n        this.invoice = invoice;\r\n        return this.data.getPurchaseOrder(this.invoice.purchaseOrderId).toPromise();\r\n      })\r\n      .then(po => {\r\n        this.selectedPo = po;\r\n        this.clientId = po.clientId;\r\n        return this.data.getClient(this.clientId);\r\n      })\r\n      .then(client => {\r\n        this.clientName = client.name;\r\n        this.client = client;\r\n        this.showClientSelection = false;\r\n        return this.data.getcurSymbol(this.selectedPo!.currencyId);\r\n      })\r\n      .then(curSymbol => {\r\n        this.curSymbol = curSymbol;\r\n        return this.data.getVendor(this.selectedPo!.vendorId);\r\n      })\r\n      .then(vendor => {\r\n        this.vendor = vendor;\r\n        return this.data.getListOfProjectsForClient(this.clientId).toPromise();\r\n      })\r\n      .then(projects => {\r\n        this.projects = projects;\r\n        this.selectedProject = this.projects.find(p => p.id === this.invoice.projectId);\r\n        this.invoice.receivedDate = new Date(this.invoice.receivedDate);\r\n        if (this.invoice.receivedDate.getFullYear() > 2100) {\r\n          this.invoice.receivedDate = new Date();\r\n        }\r\n        if (this.invoice.paymentTerms < 0) {\r\n          this.invoice.paymentTerms = this.selectedPo!.paymentTerms;\r\n        }\r\n        this.checkInternalInvoiceEdit()\r\n          .then(() => this.updateFileblob()\r\n            .then(() => this.getAttachmentList())\r\n          );\r\n        return Promise.resolve();\r\n      });\r\n    \r\n  }\r\n\r\n  getAttachmentList() {\r\n   this.data.getListOfInvoiceAttachments(this.invoice.id)\r\n      .subscribe(ls => {\r\n        this.attachments = ls;\r\n        this.showAttachmentButton = true;\r\n      });\r\n  }\r\n\r\n  async fileUploadChanged(files: any) {\r\n    if (files.length !== 1) {\r\n      return;\r\n    }\r\n    const attachment = files[0] as File;\r\n    this.attachmentmsg = 'Attaching ' + attachment.name;\r\n    this.data.addInvoiceAttachment(this.invoice.id, attachment).subscribe(\r\n       e => {\r\n        this.attachmentmsg = attachment.name + ' attached to this invoice';\r\n        this.getAttachmentList();\r\n      },\r\n      err => {\r\n        this.attachmentmsg = 'Error: Attachment could not be uploaded ' + err;\r\n        this.resetForm(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.viewMode) {\r\n      this.viewMode = undefined;\r\n      this.updateTitles();\r\n      return;\r\n    }\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    const oldButtonTitle = this.buttonTitle;\r\n    this.buttonTitle = 'Saving ...';\r\n    this.data\r\n      .updateInvoice(this.invoice)\r\n      .toPromise()\r\n      .then(\r\n        () => {\r\n          this.successMessage = 'Updated Invoice ' + this.invoice.invoiceNumber;\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.resetForm(true);\r\n          // console.log('Update invoice successful');\r\n        },\r\n        err => {\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.setError('Could not update Invoice : ', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetForm(reInit: boolean) {\r\n    const tout = reInit ? 2000 : 2000;\r\n    setTimeout(async () => {\r\n      // console.log('resetForm-invoiceEdit');\r\n      this.resetUserInputs();\r\n      let invId = this.invoice.id;\r\n      if (this.invoice.id <= 0) {\r\n        const inv = await this.data.getInvoiceForInvoiceNumber(this.invoice.invoiceNumber).toPromise();\r\n        invId = inv.id;\r\n      }\r\n      this.router.navigateByUrl('/invoice/' + invId);\r\n      if (reInit) {\r\n        this.ngOnInit();\r\n      }\r\n    }, tout);\r\n  }\r\n\r\n  editInternalInvoice() {\r\n    if (this.InternalInvoiceId > 0) {\r\n      this.router.navigateByUrl('/editinternalinvoice/' + this.invoice.id);\r\n    } else {\r\n      this.router.navigateByUrl('/newinternalinvoice/' + this.invoice.id);\r\n    }\r\n  }\r\n\r\n  // show internal invoice edit button only if this invoice\r\n  // is not from Tismo India\r\n  async checkInternalInvoiceEdit() {\r\n    this.showInternalInvoiceEdit = false;\r\n    if (this.vendor.id !== this.data.getTismoIndiaVendorId()) {\r\n      // this PO is for tismo usa or tismo germany ?\r\n      // is there an internal PO ? for internal invoice, internal PO must be there\r\n      const internalPoid = await this.data.getInternalPOforEndPO(this.invoice.purchaseOrderId).toPromise();\r\n      if (internalPoid > 0) {\r\n        // internal PO is present\r\n        this.showInternalInvoiceEdit = true;\r\n        await this.getButtonTitleForEditOrNewInternalInvoice();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getButtonTitleForEditOrNewInternalInvoice() {\r\n    this.InternalInvoiceId = await this.data.getInternalInvoiceForEndInvoice(this.invoice.id).toPromise();\r\n    console.log('getInternalInvoiceForEndInvoice return ' + this.InternalInvoiceId)\r\n    if (this.InternalInvoiceId > 0) {\r\n      this.InternalInvoiceEditTitle = 'View the invoice from India';\r\n    } else {\r\n      this.InternalInvoiceEditTitle = 'Create invoice from India';\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Utils } from './utils';\r\n@Pipe({ name: 'TwoDigitdateStr' })\r\nexport class TwoDigitDateStrPipe implements PipeTransform {\r\n    transform(dt: Date): string {\r\n        return Utils.getDateStr(dt);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { MonthYear } from '../utils/financialYear';\r\nimport { Observable, from } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class InvoiceService  {\r\n\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n    fetchAllInvoices(monthRange: MonthYear[]): Observable<InvoiceViewObj[]> {\r\n        return from(monthRange)\r\n                .pipe(\r\n                    mergeMap(mth => this.data.getInvoiceViewObjList(mth.month, mth.year))\r\n                );\r\n    }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { InvoiceInternalNewComponent } from './invoiceInternalNew.component';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-invoiceinternaledit',\r\n  templateUrl: './invoiceForm.component.html',\r\n  styleUrls: ['./invoiceForm.component.scss']\r\n})\r\nexport class InvoiceInternalEditComponent extends InvoiceInternalNewComponent {\r\n  constructor(\r\n    data: DataService,\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    protected location: Location\r\n  ) {\r\n    super(data, router, route, location);\r\n  }\r\n\r\n  updateTitles() {\r\n    this.buttonTitle = this.viewMode ? 'Modify this invoice' : 'Save changes';\r\n    this.formTitle = 'Internal Invoice';\r\n  }\r\n\r\n  async initialize(externalInvoiceId: number) {\r\n    try {\r\n      this.viewMode = true;\r\n      this.updateTitles();\r\n      this.showReceived = true;\r\n\r\n      // first check if the id passed to us is for the external or internal\r\n      let external = externalInvoiceId;\r\n      let internal = 0;\r\n      internal = await this.data.getInternalInvoiceForEndInvoice(external).toPromise();\r\n      if (internal <= 0) {\r\n        // id given is for internal invoice\r\n        internal = externalInvoiceId;\r\n        external = await this.data.getEndInvoiceforInternalInvoice(internal).toPromise();\r\n        if (external <= 0) {\r\n          console.log('Unable to find internal / external po ' + externalInvoiceId);\r\n          this.resetForm(false);\r\n          return;\r\n        }\r\n      }\r\n      this.InternalInvoiceId = internal;\r\n      await this.prefillData(external);\r\n    } catch (e) {\r\n      this.errorMessage = 'Error: Unable to get invoice details ' + e;\r\n      this.resetForm(false);\r\n    }\r\n  }\r\n\r\n  async prefillData(externalInvoiceId: number) {\r\n    // get everything else from invoice Id\r\n    this.externalInvoice = await this.data.getInvoice(externalInvoiceId).toPromise();\r\n    this.externalPO = await this.data.getPurchaseOrder(this.externalInvoice.purchaseOrderId).toPromise();\r\n    this.externalVendor = await this.data.getVendor(this.externalPO.vendorId);\r\n    this.invoice = await this.data.getInvoice(this.InternalInvoiceId).toPromise();\r\n    this.selectedPo = await this.data.getPurchaseOrder(this.invoice.purchaseOrderId).toPromise();\r\n    this.clientId = this.selectedPo.clientId;\r\n    this.client = await this.data.getClient(this.clientId);\r\n    this.clientName = this.client.name;\r\n    // this.purchaseOrders = [this.selectedPo];\r\n    this.curSymbol = await this.data.getcurSymbol(this.selectedPo.currencyId);\r\n    this.vendor = await this.data.getVendor(this.selectedPo.vendorId);\r\n    this.projects = await this.data.getListOfProjectsForClient(this.externalPO.clientId).toPromise();\r\n    this.selectedProject = this.projects.find(p => p.id === this.invoice.projectId);\r\n    this.invoice.receivedDate = new Date(this.invoice.receivedDate);\r\n    if (this.invoice.receivedDate.getFullYear() > 2100) {\r\n      this.invoice.receivedDate = new Date();\r\n    }\r\n    await this.getExternalInvoiceDetails();\r\n    this.showClientSelection = false;\r\n\r\n    // Only for Tismo India to Tismo GmbH invoices show the tip \r\n    // Period of service should be included in the description\r\n    this.showPeriodOfServiceTip = this.data.isClientTismoGermany(this.client) && this.data.isTismoIndia(this.vendor.id); \r\n\r\n    await this.updateFileblob();\r\n  }\r\n\r\n  async onSubmit() {\r\n    if (this.viewMode) {\r\n      this.viewMode = undefined;\r\n      this.updateTitles();\r\n      return;\r\n    }\r\n    this.successMessage = '';\r\n    this.errorMessage = '';\r\n    const oldButtonTitle = this.buttonTitle;\r\n    this.buttonTitle = 'Saving ...';\r\n    await this.data\r\n      .updateInvoice(this.invoice)\r\n      .toPromise()\r\n      .then(\r\n        () => {\r\n          this.successMessage = 'Updated internal Invoice ' + this.invoice.invoiceNumber;\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.resetForm(true);\r\n        },\r\n        err => {\r\n          this.buttonTitle = oldButtonTitle;\r\n          this.setError('Could not update internal Invoice : ', err);\r\n        }\r\n      );\r\n\r\n    // await this.updateFileblob();\r\n  }\r\n  resetForm(reInit: boolean) {\r\n    const tout = reInit ? 500 : 2000;\r\n    setTimeout(async () => {\r\n      //  console.log('resetForm-internalEdit');\r\n      this.resetUserInputs();\r\n      let invId = this.invoice.id;\r\n      if (this.invoice.id <= 0) {\r\n        const inv = await this.data.getInvoiceForInvoiceNumber(this.invoice.invoiceNumber).toPromise();\r\n        invId = inv.id;\r\n      }\r\n      this.router.navigateByUrl('/editinternalinvoice/' + invId);\r\n      if (reInit) {\r\n        this.ngOnInit();\r\n      }\r\n    }, tout);\r\n  }\r\n\r\n  editInternalInvoice() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService, UserData } from '../data/data.service';\r\nimport { UserService } from '../data/user.service';\r\n// import { GoogleSignInSuccess } from 'angular-google-signin';\r\nimport '../../buildString';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  userName = '';\r\n  password = '';\r\n  btnTitle = 'Login';\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  formTitle = 'Login';\r\n\r\n  build = '';\r\n\r\n  constructor(protected router: Router, protected user: UserService, protected data: DataService) {\r\n    this.build = buildString;\r\n  }\r\n\r\n  onClick() {\r\n    console.log('logging in');\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n    this.user.login( this.userName, this.password).subscribe(\r\n      user => {\r\n        if (user) {\r\n          this.successMessage = 'Logged In';\r\n          this.router.navigateByUrl('/clientlist');\r\n        } else {\r\n          this.errorMessage = 'Login failure';\r\n        }\r\n      },\r\n      err => {\r\n        this.errorMessage = 'Login failure';\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"pageTitle focus-in-expand\"> {{formTitle}}</div>\r\n\r\n<form>\r\n<div class='focus-in-expand'>\r\n\r\n    <div class='gridcontainer' >\r\n\r\n        <div class=\"t4group userName\">\r\n            <label class='t1elem' >User</label>\r\n            <input class=\"form-control t2elem\" required type=\"text\" name='userNameField'\r\n                    autocomplete=\"username\"\r\n                    [(ngModel)]=\"userName\">\r\n\r\n        </div>\r\n        <div class=\"t4group password\">\r\n            <label class='t1elem'>Password</label>\r\n            <input type=\"password\" class=\"t2elem form-control\" \r\n                    autocomplete=\"current-password\"\r\n                    required [(ngModel)]=\"password\" name='pwdField' />\r\n            \r\n        </div>\r\n\r\n\r\n        <div class=\"t4group submit\">\r\n            \r\n            <button class=\"btn btn-success t2elem\" (click)=\"onClick()\" type=submit >{{btnTitle}} </button>\r\n            \r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"successMessage\" class=\"Success message\"> {{successMessage}} </div>\r\n        <div *ngIf=\"errorMessage\" class=\"Errors message\"> {{errorMessage}} </div>\r\n\r\n        <div class=\"version\"> Copyright (c) Tismo Technology Solutions (P) Ltd. <br>\r\n                              Build {{build}}\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Manager } from '../data/data.service';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProjectBase } from './projectBase';\r\n\r\n@Component({\r\n    selector: 'app-projnew',\r\n    templateUrl: './projectForm.component.html',\r\n    styleUrls: ['./projectForm.component.scss']\r\n})\r\nexport class ProjectNewComponent extends ProjectBase implements OnInit {\r\n\r\n    constructor(protected data: DataService, protected route: ActivatedRoute, protected location: Location) {\r\n        super(data, route, location);\r\n\r\n    }\r\n    getManagerList() {\r\n        console.log('Project New managers list called')\r\n        // for new projects show only managers who are active (currently at Tismo)\r\n        this.data.getListOfManagers()\r\n                 .subscribe(lst => this.mgrOptions = lst.filter(m => Manager.canManageProjects(m) && Manager.isActive(m)));\r\n    }\r\n    async ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('clientId');\r\n        this.showForm = true;\r\n        if (idstr) {\r\n            const clientId = +idstr;\r\n            const client = await this.data.getClient(clientId);\r\n            if (client) {\r\n                this.project.clientId = client.id;\r\n                this.showClientSelection = false;\r\n                this.clientName = client.name;\r\n                this.clientId = client.id;\r\n                this.onClientSelected();\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    OnProjectCodeFocus() {\r\n        if (!this.project.projectCode) {\r\n            this.data.getNextProjectCode(new Date(this.project.startDate))\r\n                .subscribe(pc => {\r\n                    if (!this.project.projectCode) {\r\n                        this.project.projectCode = pc;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.prepareProject();\r\n        console.log('Submitting new Project' + this.project.clientId);\r\n        this.data.addProject(this.project)\r\n            .subscribe(() => {\r\n                    this.successMessage = this.project.projectCode + ' project added';\r\n                    this.resetForm();\r\n                },\r\n                err => { console.log(err); this.errorMessage = 'Error : Could not add project' + err; });\r\n    }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, PurchaseOrder, Vendor, Client } from '../data/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { OrderBase } from './orderBase';\r\nimport { UserService } from '../data/user.service';\r\n\r\n@Component({\r\n    selector: 'app-orderinternalnew',\r\n    templateUrl: './orderForm.component.html',\r\n    styleUrls: ['./orderForm.component.scss']\r\n})\r\nexport class OrderInternalNewComponent extends OrderBase implements OnInit {\r\n  \r\n\r\n    isCreating = false;\r\n    buttonTitle = '';\r\n    get formTitle() { return 'Internal Purchase Order'; }\r\n\r\n\r\n    updateButtonTitle()\r\n    {\r\n        this.buttonTitle = this.isCreating ? 'Creating PO...' : 'Create this Purchase Order';\r\n    }\r\n    constructor(data: DataService, protected router: Router, protected route: ActivatedRoute,\r\n        protected user: UserService,\r\n        protected location: Location) {\r\n        super(data, router, user, location);\r\n        this.updateButtonTitle();\r\n    }\r\n\r\n\r\n    // the id is the ID of the external PO on which the internal PO is based on\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.showUploadPOFile = false; // for internal PO form do not show upload PO prompt\r\n        this.data.getPurchaseOrder(id)\r\n            .subscribe(\r\n                p => { this.externalPO = p; this.initialize(); },\r\n                err => { console.log(err); this.setError('Error : Could not locate external PO :', err); }\r\n            );\r\n    }\r\n\r\n    transferRate = 0.90; // = 0.75;  The % transferred to Tismo India\r\n    initialize() {\r\n        this.getExternalPODetails().then(() => {\r\n            this.data.getInternalPOforEndPO(this.externalPO.id).subscribe(poid => {\r\n                this.InternalPOId = poid;\r\n                if (this.InternalPOId > 0) { // existing internal PO -- we are updating it.\r\n                    this.router.navigateByUrl(`/editinternalpo/${this.externalPO.id}`); // Go to edit internal po component\r\n                } else { // new internal PO fill internal po with external po details\r\n                    this.po.clientId = this.extVendor.clientId; // external PO vendor becomes our client\r\n                    this.clientName = this.extVendor.name;\r\n                    this.po.poDate = this.externalPO.poDate;\r\n                    this.data.getNextInternalPONumber(this.extVendor.id, this.data.getTismoIndiaVendorId(), this.po.poDate)\r\n                             .subscribe( ponumber => this.po.poNumber = ponumber );\r\n                    this.po.description = this.externalPO.description;\r\n                    this.po.currencyId = this.externalPO.currencyId;\r\n                    this.po.amount = this.transferRate * this.externalPO.amount;\r\n                    this.po.expenseAmount = this.externalPO.expenseAmount;\r\n                    this.po.isFixedPrice = this.externalPO.isFixedPrice;\r\n                    this.po.completed = this.externalPO.completed;\r\n                    this.po.vendorId = this.data.getTismoIndiaVendorId();\r\n                    this.po.tandMBillRate = this.transferRate * this.externalPO.tandMBillRate;\r\n                    this.po.remarks = this.externalPO.remarks;\r\n                    this.showIsCompleted = false;\r\n                    this.viewMode = undefined;\r\n                    this.showClientSelection = false;\r\n               }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    async getExternalPODetails() {\r\n        const ev = await this.data.getVendor(this.externalPO.vendorId);\r\n        this.extVendor = ev;\r\n        const ec = await this.data.getClient(this.externalPO.clientId);\r\n        this.endClient = ec;\r\n        const ci = await this.data.getcurSymbol(this.externalPO.currencyId);\r\n        return this.extCurSymbol = ci;\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.po.isFixedPrice = this.po.isFixedPrice ? 1 : 0;\r\n        this.po.completed = this.po.completed ? 1 : 0;\r\n        console.log('Creating internal PO' + this.po.clientId, this.po.amount, this.po.poDate, this.po.currencyId, this.po.description,\r\n            this.po.isFixedPrice, this.po.tandMBillRate, this.po.completed, '***');\r\n        try {\r\n            this.isCreating = true;\r\n            this.updateButtonTitle();\r\n            this.data.addInternalPOforEndPO(this.po, this.externalPO.id)\r\n                .subscribe(poid => {\r\n                    this.po.id = poid;\r\n                    this.successMessage = 'Internal PO created';\r\n                    // this.isCreating = false;\r\n                    // this.updateButtonTitle();\r\n                    this.goToCurrentPO(this.po.id, 5000);\r\n                },\r\n                err => {\r\n                    console.log(err); this.setError('Could not create PO: Error: ', err);\r\n                    this.setError('Could not create PO: Error: ', err);\r\n                    this.resetForm();\r\n                })\r\n          \r\n        } catch (e) {\r\n            console.log(e); this.setError('Could not create PO: Error: ', e);\r\n            this.resetForm();\r\n        }\r\n       \r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrderComponent, POStatus } from '../orderbook/order.component';\r\nimport { POViewInterface, POViewWithBalance } from '../data/POViewInterface';\r\nimport { InvoiceViewObj } from '../data/InvoiceViewObj';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../data/data.service';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-clientpo',\r\n    templateUrl: './clientpo.component.html',\r\n    styleUrls: ['./clientpo.component.scss']\r\n})\r\nexport class ClientpoComponent extends OrderComponent implements OnInit {\r\n    // @Input()\r\n    // orderProormise!: Promise<POViewWithBalance>;\r\n\r\n    @Input()\r\n    invoiceList: InvoiceViewObj[] = [];\r\n\r\n    @Input()\r\n    canCreateInvoice = false;\r\n\r\n    @Output()\r\n    statusValueEvent: EventEmitter<POStatus> = new EventEmitter();\r\n\r\n\r\n    showNewInvoiceButton = false;\r\n    showthispo = true;\r\n    negativebalance = false;\r\n    clientabactive = true;\r\n    internaltablactive = false;\r\n\r\n\r\n    constructor(private router: Router, protected data: DataService) {\r\n        super(data);\r\n    }\r\n    ngOnInit() {\r\n        this.initialize();\r\n        if (!this.order) {\r\n            console.log (\"**  order is null\")\r\n        }\r\n      \r\n        if (this.order) {\r\n            this.showthispo = !this.order.completed;\r\n            this.showNewInvoiceButton = !this.order.isInternalPO && !this.order.completed;\r\n            this.negativebalance = this.order.balance < 0;\r\n            this.statusValueEvent.emit(this.statusValue);\r\n        }\r\n    \r\n        \r\n        \r\n    }\r\n    toggleShowThisPO() {\r\n        this.showthispo = !this.showthispo;\r\n\r\n    }\r\n    onNewInvoice() {\r\n        this.router.navigate(['/newinvoice', { poid: this.order!.id, clientId: this.clientId }]);\r\n    }\r\n}\r\n","    <div class='gridcontainer card ' >\r\n    <div class='lblponumber'>PO: <a routerLink=\"/order/{{orderId}}\"> {{poNumber}} </a> </div>\r\n    <div class='ponumber'> </div>\r\n    <div class='podescription'> {{description}}</div>\r\n    <div class='podate'> {{poDate}} on {{vendorName}}       \r\n            <img *ngIf='order!.isInternalPO' src=\"assets/images/India_tricolor_icon.svg\" class=\"rounded internalPOImg\">\r\n    </div>\r\n\r\n    <div class='postatus' [ngClass]=\"{  'notInvoiced' : notInvoicedRecently }\">{{status}}</div>\r\n\r\n\r\n    <div  class='showthispo'(click)=\"toggleShowThisPO()\" >\r\n        <i *ngIf=\"!showthispo\" class=\"material-icons\"  style=\"cursor:pointer; color:gray\">\r\n            arrow_drop_down_circle\r\n        </i>\r\n        <i  *ngIf=\"showthispo\" class=\"material-icons\" style=\"cursor:pointer; color:black\">\r\n            arrow_drop_up\r\n        </i>\r\n    </div>\r\n   \r\n\r\n    <div *ngIf=\"showthispo\" class='posummary' >\r\n        <div class='revenuesummary summarylayout'>\r\n            <div class='lblamount'> PO Amount </div>\r\n            <div class='amount'> {{amountStr}} </div>\r\n\r\n            <div class='lblbilled'> Billed </div>\r\n            <div class='billed'>{{billedStr}}</div>\r\n\r\n            <div class='lblbalance'> Balance </div>\r\n            <div class='balanceamt'  [ngClass]=\"{  'negativebalance' : negativebalance }\"    > {{balanceStr}} </div>\r\n           \r\n        </div>\r\n        <div class='expensesummary  summarylayout'>\r\n            <div  class='lblamount'> Expense Budget </div>\r\n            <div class='amount'>{{expenseBudgetStr}}</div>\r\n\r\n            <div  class='lblbilled'> Billed </div>\r\n            <div class='billed'>{{expenseStr}}</div>\r\n\r\n            <div  class='lblbalance'> Balance </div>\r\n            <div class='balanceamt'>{{expenseBalanceStr}}</div>\r\n        </div>\r\n        <div class='recvsummary  summarylayout'>\r\n           \r\n\r\n            <div class='lblbilled'> Received </div>\r\n            <div class='billed'> {{receivedStr}} </div>\r\n\r\n            <div class='lblbalance'> Due </div>\r\n            <div class='balanceamt'> {{dueAmountStr}} </div>\r\n        </div>\r\n\r\n       \r\n    </div>\r\n   \r\n    <div *ngIf=\"showthispo\" class='poinvoices'>\r\n        <app-clientinvoice  *ngIf=\"invoiceList\"  >   </app-clientinvoice>\r\n        <div *ngFor=\"let inv of invoiceList\">\r\n            <app-clientinvoice [inview]=inv></app-clientinvoice>\r\n        </div>\r\n    \r\n        <div *ngIf=\"canCreateInvoice\">\r\n            <button *ngIf='showNewInvoiceButton' type=\"button\" class=\"btn btn-success btn-sm mt-2\" (click)=\"onNewInvoice()\">\r\n                New Invoice</button>\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { DataService } from '../data/data.service';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { SBAssignmentMgr } from './SBAssignmentMgr';\r\n\r\n\r\n\r\nexport interface SBAssignment {\r\n    numToAssign: string;\r\n    invReference: string; // invoice reference can be invoice number or softex number\r\n    invoiceId: number;\r\n    status: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-softeximport',\r\n    templateUrl: './softexImport.component.html',\r\n    styleUrls: ['./softexImport.component.scss'],\r\n    animations: [\r\n        trigger(\r\n            'inOutAnimation',\r\n            [\r\n                transition(\r\n                    ':enter',\r\n                    [\r\n                        style({ opacity: 0 }),\r\n                        animate('0.25s ease-out',\r\n                            style({ opacity: 1 }))\r\n                    ]\r\n                ),\r\n                transition(\r\n                    ':leave',\r\n                    [\r\n                        style({ opacity: 1 }),\r\n                        animate('0.25s ease-in',\r\n                            style({  opacity: 0 }))\r\n                    ]\r\n                )\r\n            ]\r\n        )\r\n    ]\r\n})\r\n  \r\nexport class SoftexImportComponent  {\r\n   \r\n    sbm: SBAssignmentMgr\r\n\r\n    pageTitle = 'Softex Import'\r\n\r\n    instruction = 'Copy entire Softex No - Invoice No columns from Excel and paste it here in the box.'\r\n\r\n    \r\n    constructor(protected data: DataService) {\r\n\r\n        this.sbm = new SBAssignmentMgr()\r\n        this.sbm.placeholder =\r\n`S21002110983\tTD21AA001\r\nS21002110984\tTD21AA002\r\nS21002110985\tTD21AA003\r\nS21002110992\tTD21AA010`\r\n        \r\n        this.sbm.isThisTheCorrectInvoice = (p, inv) => p.invReference == inv.invoiceNumber\r\n        this.sbm.alreadyAssigned = (p, inv) => p.numToAssign == inv.softexNumber\r\n        this.sbm.assignAndUpdate = (p, inv) => {\r\n            inv.softexNumber = p.numToAssign\r\n            return this.data.updateInvoice(inv)\r\n        }\r\n        this.sbm.fetchInvoice = p => this.data.getInvoiceForInvoiceNumber(p.invReference)\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { DataService, Supplier, SupplierContact } from '../data/data.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { OnInit, Directive } from '@angular/core';\r\n\r\n@Directive()\r\nexport class SupplierContactBase implements OnInit {\r\n    supplier: Supplier = new Supplier();\r\n    contact = new SupplierContact();\r\n\r\n    successMessage = '';\r\n    errorMessage = '';\r\n    viewMode: boolean | undefined = undefined;\r\n\r\n    get buttonTitle() { return 'Create Contact'; }\r\n    get formTitle() { return 'New Contact'; }\r\n\r\n\r\n    constructor(protected data: DataService, protected router: Router,\r\n             protected route: ActivatedRoute, protected location: Location) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.initialize(id);\r\n    }\r\n\r\n    // for new contact the id passed is the supplierId\r\n    async initialize(supplierId: number) {\r\n        this.supplier = await this.data.getSupplier(supplierId);\r\n        this.contact.supplierId = supplierId;\r\n        const lst = await this.data.getListOfContactsForSupplier(supplierId).toPromise();\r\n        if ( lst.length > 0 ) {\r\n            this.contact.address = lst[0].address;\r\n            this.contact.telephone = lst[0].telephone;\r\n        }\r\n    }\r\n\r\n    setError(msg: string, err: any, ) {\r\n        this.errorMessage = msg + err;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Submitting new Contact' + this.contact.name);\r\n        this.data.addSupplierContact(this.contact)\r\n            .subscribe(c => { console.log(c); this.successMessage = 'added Contact ' + this.contact.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError('Could not add Contact: Error: ', err); });\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n            this.contact = new SupplierContact();\r\n            this.successMessage = '';\r\n            this.errorMessage = '';\r\n            this.location.back();\r\n        }, 1000);\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserService } from './user.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private user: UserService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        if ([401, 403].indexOf(err.status) !== -1) {\r\n          // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n          this.user.logout();\r\n          location.reload();\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService, Client } from '../data/data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n    selector: 'app-clientedit',\r\n    templateUrl: './clientNew.component.html',\r\n    styleUrls: ['./clientNew.component.scss']\r\n})\r\nexport class ClientEditComponent implements OnInit {\r\n    client: Client = new  Client();\r\n\r\n    formTitle = 'Modify Client';\r\n    btnTitle = 'Update this Client';\r\n    successMessage = '';\r\n    errorMessage = '';\r\n\r\n    constructor(private data: DataService, private route: ActivatedRoute,  private location: Location) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        const idstr = this.route.snapshot.paramMap.get('id');\r\n        const id = idstr ? +idstr : 0;\r\n        this.data.getClient(id)\r\n          .then(cl => this.client = cl, err => { console.log(err); this.setError(err); });\r\n    }\r\n\r\n    setError(err: any) {\r\n        this.errorMessage = 'Error: Could not update: ' + err.Error;\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        console.log('Updating Client' + this.client.name);\r\n        this.data.updateClient(this.client)\r\n            .subscribe(c => { console.log(c); this.successMessage = 'Updated ' + this.client.name; this.resetForm(); },\r\n                err => { console.log(err); this.setError(err); });\r\n    }\r\n\r\n    resetForm() {\r\n        setTimeout(() => {\r\n            this.location.back();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data/data.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { AttachmentInterface } from \"../attachments/attachments.component\";\nimport { SupplierInvoiceBase } from \"./supplierInvoiceBase\";\n\nclass fmonad<T> {\n  fobs: Promise<T>;\n  constructor(obs: Promise<T>) {\n    this.fobs = obs;\n  }\n\n  bind<U>(fn: (arg0: T) => Promise<U>): fmonad<U> {\n    const k = this.fobs.then((t) => fn(t));\n    return new fmonad(k);\n  }\n\n  then(fn: (arg0: T) => any): any {\n    return this.fobs.then((t) => fn(t));\n  }\n\n  unwrap() {\n    return this.fobs;\n  }\n}\n\n@Component({\n  selector: \"app-supplier-invoice-edit\",\n  templateUrl: \"./supplierInvoiceForm.component.html\",\n  styleUrls: [\"./supplierInvoiceForm.component.scss\"],\n})\nexport class SupplierInvoiceEditComponent\n  extends SupplierInvoiceBase\n  implements OnInit\n{\n  constructor(\n    data: DataService,\n    protected router: Router,\n    private route: ActivatedRoute,\n    protected location: Location\n  ) {\n    super(data, router);\n    this.viewMode = true;\n    this.updateTitles();\n    this.showReceived = true;\n  }\n\n  updateTitles() {\n    this.buttonTitle = this.viewMode ? \"Modify this Invoice\" : \"Save changes\";\n    this.formTitle = this.viewMode ? \"Invoice\" : \"Modify Invoice\";\n  }\n\n  ngOnInit() {\n    const idstr = this.route.snapshot.paramMap.get(\"id\");\n    const id = idstr ? +idstr : 0;\n    //this.initialize(id);\n  }\n\n  resetForm(reInit: boolean) {\n    const tout = reInit ? 2000 : 2000;\n    setTimeout(async () => {\n      // console.log('resetForm-invoiceEdit');\n      this.resetUserInputs();\n      let invId = this.invoice.id;\n      if (this.invoice.id <= 0) {\n        const inv = await this.data\n          .getSupplierInvoiceForInvoiceNumber(this.invoice.invoiceNumber)\n          .toPromise();\n        invId = inv.id;\n      }\n      this.router.navigateByUrl(\"/supplierinvoice/\" + invId);\n      if (reInit) {\n        this.ngOnInit();\n      }\n    }, tout);\n  }\n\n  onSubmit() {\n    if (this.viewMode) {\n      this.viewMode = undefined;\n      this.updateTitles();\n      return;\n    }\n    this.successMessage = \"\";\n    this.errorMessage = \"\";\n    const oldButtonTitle = this.buttonTitle;\n    this.buttonTitle = \"Saving ...\";\n    this.data\n      .updateSupplierInvoice(this.invoice)\n      .toPromise()\n      .then(\n        () => {\n          this.successMessage = \"Updated Invoice \" + this.invoice.invoiceNumber;\n          this.buttonTitle = oldButtonTitle;\n          this.resetForm(true);\n        },\n        (err) => {\n          this.buttonTitle = oldButtonTitle;\n          this.setError(\"Could not update Invoice : \", err);\n        }\n      );\n  }\n\n  getSupplierAttachmentList() {\n    this.data\n      .getListOfSupplierInvoiceAttachments(this.invoice.id)\n      .subscribe((ls) => {\n        this.attachments = ls;\n        this.showAttachmentButton = true;\n      });\n  }\n\n  async fileUploadChanged(files: any) {\n    if (files.length !== 1) {\n      return;\n    }\n    const attachment = files[0] as File;\n    this.attachmentmsg = \"Attaching \" + attachment.name;\n    this.data\n      .addSupplierInvoiceAttachment(this.invoice.id, attachment)\n      .subscribe(\n        (e) => {\n          this.attachmentmsg = attachment.name + \" attached to this invoice\";\n          this.getSupplierAttachmentList();\n        },\n        (err) => {\n          this.attachmentmsg = \"Error: Attachment could not be uploaded \" + err;\n          this.resetForm(false);\n        }\n      );\n  }\n\n  initialize(id: number) {\n    try {\n      this.showForm = false;\n      this.viewMode = true;\n      this.successMessage = 'Fetching invoice details...';\n      this.updateTitles();\n\n      this.getRestOfPrefillData(id).then(() => {\n          this.successMessage = '';\n          this.showForm = true;\n        });\n\n    } catch (e) {\n      this.errorMessage = 'Error: Unable to get invoice details ' + e;\n      this.resetForm(false);\n    }\n  }\n\n\n  getRestOfPrefillData(invoiceId: number): Promise<void> {\n    return this.data\n      .getSupplierInvoice(invoiceId)\n      .toPromise()\n      .then((invoice) => {\n        this.invoice = invoice;\n        return this.data\n          .getSupplierPurchaseOrder(this.invoice.supplierPOId)\n          .toPromise();\n      })\n      .then((spo) => {\n        this.selectedSpo = spo;\n        this.supplierId = spo.supplierId;\n        return this.data.getSupplier(this.supplierId);\n      })\n      .then((supplier) => {\n        this.supplierName = supplier.name;\n        this.supplier = supplier;\n        this.showSupplierSelection = false;\n        return this.data.getcurSymbol(this.selectedSpo!.currencyId);\n      })\n      .then(() => {\n        return this.data.getListOfProjects().toPromise();\n      })\n      .then((projects) => {\n        this.projects = projects;\n        this.selectedProject = this.projects.find(\n          (p) => p.id === this.invoice.projectId\n        );\n        this.invoice.paymentDate = new Date(this.invoice.paymentDate);\n        if (this.invoice.paymentDate.getFullYear() > 2100) {\n          this.invoice.paymentDate = new Date();\n        }\n        return Promise.resolve();\n      });\n  }\n}\n"],"sourceRoot":"webpack:///"}